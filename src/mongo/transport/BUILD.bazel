load("//bazel:mongo_src_rules.bzl", "mongo_cc_benchmark", "mongo_cc_integration_test", "mongo_cc_library", "mongo_cc_unit_test", "mongo_idl_library")

package(default_visibility = ["//visibility:public"])

exports_files(glob([
    "*.cpp",
    "*.h",
    "*.inl",
    "*.hpp",
    "*.py",
    "*.in",
]))

filegroup(
    name = "transport_global_hdrs",
    srcs = glob([
        "*.h",
        "*.inl",
        "*.hpp",
    ]),
)

mongo_cc_library(
    name = "transport_layer_common",
    srcs = [
        "transport_options.cpp",
        "//src/mongo/transport:hello_metrics.cpp",
        "//src/mongo/transport:session.cpp",
        "//src/mongo/transport:session_establishment_rate_limiter.cpp",
        "//src/mongo/transport:transport_layer.cpp",
    ],
    deps = [
        "transport_options_idl",
        "//src/mongo:base",
        "//src/mongo/db:connection_health_metrics_parameter_idl",
        "//src/mongo/db:service_context",
        "//src/mongo/db:wire_version",
        "//src/mongo/db/admission:rate_limiter",
        "//src/mongo/util/net:ssl_manager",
    ],
)

mongo_cc_library(
    name = "ingress_handshake_metrics",
    srcs = [
        "//src/mongo/transport:ingress_handshake_metrics.cpp",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/db:commands",
        "//src/mongo/db:server_feature_flags",
        "//src/mongo/db/commands:server_status_core",
        "//src/mongo/transport:transport_layer_common",
        "//src/mongo/util:clock_sources",
    ],
)

mongo_cc_library(
    name = "session_util",
    srcs = [
        "//src/mongo/transport:session_util.cpp",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/util/net:network",
    ],
)

mongo_cc_library(
    name = "transport_layer_mock",
    srcs = [
        "//src/mongo/transport:transport_layer_mock.cpp",
    ],
    deps = [
        "//src/mongo/transport:session_util",
        "//src/mongo/transport:transport_layer_common",
        "//src/mongo/util/net:network",
    ],
)

mongo_cc_library(
    name = "transport_layer_egress_init",
    srcs = [
        "//src/mongo/transport:transport_layer_egress_init.cpp",
    ],
    deps = [
        "//src/mongo/transport:transport_layer_manager",
    ],
)

mongo_cc_library(
    name = "service_executor",
    srcs = [
        "//src/mongo/transport:service_executor.cpp",
        "//src/mongo/transport:service_executor_reserved.cpp",
        "//src/mongo/transport:service_executor_synchronous.cpp",
        "//src/mongo/transport:service_executor_utils.cpp",
    ],
    deps = [
        "//src/mongo/db:server_base",
        "//src/mongo/db:service_context",
        "//src/mongo/transport:service_executor_idl",
        "//src/mongo/transport:transport_layer_common",
        "//src/mongo/util:processinfo",
        "//src/mongo/util/concurrency:thread_pool",
        "//src/third_party/asio-master:asio",
    ],
)

mongo_cc_library(
    name = "session_manager",
    srcs = [
        "//src/mongo/transport:session_manager_common.cpp",
        "//src/mongo/transport:session_workflow.cpp",
    ],
    deps = [
        "//src/mongo/db:server_base",
        "//src/mongo/db:server_feature_flags",
        "//src/mongo/db:service_context",
        "//src/mongo/db:traffic_recorder",
        "//src/mongo/db/query:command_request_response",
        "//src/mongo/db/stats:counters",
        "//src/mongo/rpc:client_metadata",
        "//src/mongo/rpc:message",
        "//src/mongo/transport:ingress_handshake_metrics",
        "//src/mongo/transport:message_compressor",
        "//src/mongo/transport:service_executor",
        "//src/mongo/transport:session_manager_common_idl",
        "//src/mongo/transport:transport_layer_common",
        "//src/mongo/util:fail_point",
        "//src/mongo/util:processinfo",
        "//src/mongo/util/concurrency:spin_lock",
        "//src/mongo/util/net:ssl_manager",
    ],
)

mongo_cc_library(
    name = "message_compressor",
    srcs = [
        "//src/mongo/transport:message_compressor_manager.cpp",
        "//src/mongo/transport:message_compressor_metrics.cpp",
        "//src/mongo/transport:message_compressor_registry.cpp",
        "//src/mongo/transport:message_compressor_snappy.cpp",
        "//src/mongo/transport:message_compressor_zlib.cpp",
        "//src/mongo/transport:message_compressor_zstd.cpp",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/util/options_parser",
        "//src/third_party/snappy",
        "//src/third_party/zlib",
        "//src/third_party/zstandard:zstd",
    ],
)

mongo_cc_integration_test(
    name = "transport_integration_test",
    srcs = [
        "//src/mongo/transport/asio:asio_transport_layer_integration_test.cpp",
    ],
    tags = ["convert_target"],
    deps = [
        "//src/mongo:base",
        "//src/mongo/client:async_client",
        "//src/mongo/executor:task_executor_interface",
        "//src/mongo/transport:transport_layer_egress_init",
        "//src/mongo/util:version_impl",
        "//src/mongo/util/net:network",
        "//src/third_party/asio-master:asio",
    ],
)

mongo_cc_benchmark(
    name = "service_executor_bm",
    srcs = [
        "//src/mongo/transport:service_executor_bm.cpp",
    ],
    deps = [
        "//src/mongo/db:service_context_non_d",
        "//src/mongo/db:service_context_test_fixture",
        "//src/mongo/transport:service_executor",
        "//src/mongo/transport:transport_layer_mock",
    ],
)

mongo_cc_benchmark(
    name = "session_workflow_bm",
    srcs = [
        "//src/mongo/transport:session_workflow_bm.cpp",
    ],
    deps = [
        "//src/mongo/db:service_context_non_d",
        "//src/mongo/db:service_context_test_fixture",
        "//src/mongo/transport:service_executor",
        "//src/mongo/transport:session_manager",
        "//src/mongo/transport:transport_layer_manager",
        "//src/mongo/transport:transport_layer_mock",
    ],
)

mongo_cc_library(
    name = "transport_layer",
    srcs = [
        "proxy_protocol_header_parser.cpp",
        "//src/mongo/transport/asio:asio_session_impl.cpp",
        "//src/mongo/transport/asio:asio_session_manager.cpp",
        "//src/mongo/transport/asio:asio_tcp_fast_open.cpp",
        "//src/mongo/transport/asio:asio_transport_layer.cpp",
        "//src/mongo/transport/asio:asio_utils.cpp",
    ] + select({
        "@platforms//os:linux": ["//src/mongo/transport/asio:asio_networking_baton.cpp"],
        "//conditions:default": [],
    }),
    deps = [
        "ingress_handshake_metrics",
        "service_executor",
        "session_manager",
        "session_util",
        "transport_layer_common",
        "//src/mongo/base:system_error",
        "//src/mongo/db:server_base",
        "//src/mongo/db:server_feature_flags_idl",
        "//src/mongo/db:server_options",
        "//src/mongo/db:service_context",
        "//src/mongo/db/commands:server_status_core",
        "//src/mongo/db/stats:counters",
        "//src/mongo/s:common_s",
        "//src/mongo/util:executor_stats",
        "//src/mongo/util:processinfo",
        "//src/mongo/util/concurrency:spin_lock",
        "//src/mongo/util/net:ssl_manager",
        "//src/mongo/util/options_parser",
        "//src/third_party/asio-master:asio",
    ],
)

mongo_cc_library(
    name = "transport_layer_manager",
    srcs = [
        "transport_layer_manager_impl.cpp",
    ],
    deps = [
        "service_executor",
        "session_manager",
        "transport_layer",
        "//src/mongo/db:server_base",
        "//src/third_party/asio-master:asio",
    ] + select({
        "//bazel/config:build_grpc_enabled": ["//src/mongo/transport/grpc:grpc_transport_layer"],
        "//conditions:default": [],
    }),
)

mongo_idl_library(
    name = "transport_options_idl",
    src = "transport_options.idl",
    idl_deps = [
        "//src/mongo/db:basic_types_idl_gen",
    ],
    deps = [
        "//src/mongo/db:basic_types_idl",
    ],
)

mongo_idl_library(
    name = "session_manager_common_idl",
    src = "session_manager_common.idl",
)

mongo_idl_library(
    name = "message_compressor_options_server_idl",
    src = "message_compressor_options_server.idl",
)

mongo_idl_library(
    name = "message_compressor_options_client_idl",
    src = "message_compressor_options_client.idl",
)

mongo_idl_library(
    name = "service_executor_idl",
    src = "service_executor.idl",
)

mongo_cc_unit_test(
    name = "transport_test",
    srcs = [
        "max_conns_override_test.cpp",
        "message_compressor_manager_test.cpp",
        "message_compressor_registry_test.cpp",
        "proxy_protocol_header_parser_test.cpp",
        "service_executor_test.cpp",
        "session_manager_test.cpp",
        "session_workflow_test.cpp",
        "transport_layer_manager_test.cpp",
        "//src/mongo/transport/asio:asio_transport_layer_test.cpp",
        "//src/mongo/transport/asio:asio_utils_test.cpp",
    ] + select({
        "@platforms//os:linux": ["session_manager_common_test.cpp"],
        "//conditions:default": [],
    }) + select({
        "//bazel/config:build_grpc_enabled": ["transport_layer_manager_grpc_test.cpp"],
        "//conditions:default": [],
    }),
    data = ["//jstests/libs:test_pem_files"],
    tags = ["mongo_unittest_fourth_group"],
    deps = [
        ":message_compressor",
        ":message_compressor_options_server_idl",
        ":service_executor",
        ":session_manager",
        ":transport_layer",
        ":transport_layer_common",
        ":transport_layer_manager",
        ":transport_layer_mock",
        "//src/mongo:base",
        "//src/mongo/client:clientdriver_network",
        "//src/mongo/db:dbmessage",
        "//src/mongo/db:service_context_non_d",
        "//src/mongo/db:service_context_test_fixture",
        "//src/mongo/db/auth:authmocks",
        "//src/mongo/rpc",
        "//src/mongo/rpc:message",
        "//src/mongo/util:clock_source_mock",
        "//src/mongo/util/concurrency:thread_pool",
        "//src/third_party/asio-master:asio",
    ],
)
