#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# Feature flag for fault facet support.

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/db/basic_types.idl"

enums:
    HealthObserverIntensity:
        description: "Enum representing the intensity of a health observer."
        type: string
        values:
            kOff: "off"
            kCritical: "critical"
            kNonCritical: "non-critical"

    HealthObserverType:
        description: "Enum representing available health observer types"
        type: string
        values:
            kLdap: "ldap"
            kDns: "dns"
            kTest: "test"
            kConfigServer: "configServer"

structs:
    HealthObserverIntensitySetting:
        description: "One health observer intensity setting"
        strict: true
        fields:
            type:
                type: HealthObserverType
                optional: false
            intensity:
                type: HealthObserverIntensity
                optional: false
                default: kOff

    HealthObserverIntensities:
        description: "A struct representing the health observer intensities."
        strict: false
        fields:
            values:
                description: "Array of health observer intensity settings"
                type: array<HealthObserverIntensitySetting>
                optional: true

    HealthObserverIntervalSetting:
        description: "One health observer check interval setting, in milliseconds"
        strict: true
        fields:
            type:
                type: HealthObserverType
                optional: false
            interval:
                type: int
                optional: false
                validator: {gt: 0}

    HealthObserverIntervals:
        description: "A struct representing the interval in milliseconds for each health observer."
        strict: true
        fields:
            values:
                description: "Array of health observer intervals settings"
                type: array<HealthObserverIntervalSetting>
                optional: true

    HealthObserverProgressMonitorConfig:
        description: "A struct representing configuration for health observer liveness checks."
        strict: true
        fields:
            interval:
                description: "Interval between liveness checks in milliseconds."
                type: int
                default: 1000
                validator: {gt: 0}
            deadline:
                description: "Deadline for liveness checks, after which process should exit, in seconds."
                type: int
                default: 300
                validator: {gt: 0}

server_parameters:
    healthMonitoringIntensities:
        set_at: ["startup", "runtime"]
        description: "A server parameter for specifying the intensity of fault facets."
        cpp_class:
            name: "HealthMonitoringIntensitiesServerParameter"
            data: "synchronized_value<HealthObserverIntensities>"
            override_set: true
        redact: false

    progressMonitor:
        set_at: ["startup", "runtime"]
        description: "A server parameter for specifying intervals for health monitoring."
        cpp_class:
            name: "HealthMonitoringProgressMonitorServerParameter"
            data: "synchronized_value<HealthObserverProgressMonitorConfig>"
            override_set: true
        redact: false

    healthMonitoringIntervals:
        set_at: [startup, runtime]
        description: "A server parameter for specifying the interval in milliseconds between health checks."
        cpp_class:
            name: "PeriodicHealthCheckIntervalsServerParameter"
            data: "synchronized_value<HealthObserverIntervals>"
            override_set: true
        redact: false

    activeFaultDurationSecs:
        description: "A server parameter for specifying the duration after which we transition to active fault."
        set_at: [startup, runtime]
        cpp_vartype: AtomicWord<int>
        cpp_varname: gActiveFaultDurationSecs
        default:
            expr: 120
        validator:
            gte: 0
        redact: false

    reachableConfigReplicasRequiredByHealthMonitoring:
        description: "Minimal count of reachable Config server replicas required to pass the health check"
        set_at: [startup, runtime]
        cpp_vartype: AtomicWord<int>
        cpp_varname: gReachableConfigReplicasRequired
        default:
            expr: 1
        validator:
            gt: 0
        redact: false

    configReplicasProbedByHealthMonitoring:
        description: "Count of Config server replicas probed by the health check"
        set_at: [startup, runtime]
        cpp_vartype: AtomicWord<int>
        cpp_varname: gConfigReplicasProbed
        default:
            expr: 2
        validator:
            gt: 0
        redact: false
