# Copyright (C) 2025-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# This file defines the format of drop database coordinator persisted documents.

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/global_catalog/type_collection.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/global_catalog/ddl/sharding_ddl_coordinator.idl"

enums:
    InitializePlacementHistoryPhase:
        description: "The current phase of an InitializePlacementHistoryCoordinator."
        type: string
        values:
            kUnset: "unset"
            kBlockDDLs: "blockDDLs"
            kDefineInitializationTime: "defineInitializationTime"
            kUnblockDDLs: "unblockDDLs"
            kComputeInitialization: "computeInitialization"
            kFinalize: "finalize"

structs:
    InitializePlacementHistoryCoordinatorDocument:
        description: "Represents the current state of the coordinator serving a request for initializing/resetting the content of config.placementHistory."
        generate_comparison_operators: false
        strict: false
        chained_structs:
            ShardingDDLCoordinatorMetadata: ShardingDDLCoordinatorMetadata
        fields:
            phase:
                type: InitializePlacementHistoryPhase
                default: kUnset
            initializationTime:
                description: "The config time associated to the state of the cluster that this coordinator will produce within config.placementHistory."
                type: timestamp
                optional: true
