# Copyright (C) 2021-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/crypto/fle_field_schema.idl"
    - "mongo/db/basic_types.idl"
    - "mongo/db/commands/fle2_compact.idl"
    - "mongo/db/global_catalog/ddl/sharding_ddl_coordinator.idl"

enums:
    CompactStructuredEncryptionDataPhase:
        description: "The current phase of the compactStructuredEncryptionData pipeline"
        type: string
        mod_visibility: private
        values:
            kUnset: "unset"
            kRenameEcocForCompact: "rename-ecoc-for-compact"
            kCompactStructuredEncryptionData: "compact-structured-encryption-data"
            kDropTempCollection: "drop-temp-collection"

structs:
    CompactStructuredEncryptionDataState:
        description:
            "Represents the state of the compactStructuredEncryptionData pipeline
            for protocol version 2"
        strict: false
        mod_visibility: pub
        chained_structs:
            ShardingDDLCoordinatorMetadata: ShardingDDLCoordinatorMetadata
        fields:
            phase:
                description: "Current phase"
                type: CompactStructuredEncryptionDataPhase
                default: kUnset
            skipCompact:
                description: "Whether to skip the compaction operation"
                type: bool
                default: false
            escNss:
                description: "Collection containing insertions metadata"
                type: namespacestring
            ecocNss:
                description: "Collection containing compaction metadata to perform compact with"
                type: namespacestring
            ecocUuid:
                description: "UUID of the collection identified by ecocNss"
                type: uuid
                optional: true
            ecocRenameNss:
                description: "Temporary name to use while performing compaction"
                type: namespacestring
            ecocRenameUuid:
                description: "UUID of the collection identified by ecocRenameNss"
                type: uuid
                optional: true
            compactionTokens:
                description: "Compaction tokens for the compact operation"
                type: object_owned
            escStats:
                description: "Statistics for the ESC collection"
                type: ECStats
                optional: true
            ecocStats:
                description: "Statistics for the temporary ECOC collection"
                type: ECOCStats
                optional: true
            encryptionInformation:
                description: "Encryption Information required for collections with range tokens"
                type: EncryptionInformation
                optional: true
            anchorPaddingFactor:
                description: "Anchor padding ratio used for range fields during compact"
                type: double
                optional: true
                validator:
                    gte: 0.0
                    lte: 1.0

    CompactStructuredEncryptionDataStatePre70Compatible:
        description: "Represents the state of the compactStructuredEncryptionData pipeline"
        strict: false
        chained_structs:
            ShardingDDLCoordinatorMetadata: ShardingDDLCoordinatorMetadata
        fields:
            phase:
                description: "Current phase"
                type: CompactStructuredEncryptionDataPhase
                default: kUnset
            skipCompact:
                description: "Whether to skip the compaction operation"
                type: bool
                default: false
            escNss:
                description: "Collection containing insertions metadata"
                type: namespacestring
            ecocNss:
                description: "Collection containing compaction metadata to perform compact with"
                type: namespacestring
            ecocUuid:
                description: "UUID of the collection identified by ecocNss"
                type: uuid
                optional: true
            ecocRenameNss:
                description: "Temporary name to use while performing compaction"
                type: namespacestring
            ecocRenameUuid:
                description: "UUID of the collection identified by ecocRenameNss"
                type: uuid
                optional: true
            compactionTokens:
                description: "Compaction tokens for the compact operation"
                type: object_owned
            response:
                description: "Response to the compactStructuredEncryptedData command"
                type: CompactStructuredEncryptionDataCommandReply
                optional: true
