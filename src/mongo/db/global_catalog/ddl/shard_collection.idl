# Copyright (C) 2021-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/timeseries/timeseries.idl"
    - "mongo/db/sharding_environment/sharding_types.idl"

structs:
    ShardCollectionRequest:
        description: "The base request to shard a collection"
        strict: false
        fields:
            key:
                type: object
                description: "The index specification document to use as the shard key."
            unique:
                type: bool
                description: "Whether the shard key index should enforce a unique constraint"
                default: false
            # TODO SERVER-83006: remove deprecated numInitialChunks parameter.
            numInitialChunks:
                type: safeInt64
                description: >-
                    The number of chunks to create initially when sharding an empty collection with a hashed
                    shard key.
                default: 0
            presplitHashedZones:
                type: bool
                description: >-
                    True if the chunks should be pre-split based on the existing zones when sharding a
                    collection with hashed shard key.
                default: false
            implicitlyCreateIndex:
                description: "Creates an index on the shard key pattern if the collection is empty."
                type: optionalBool
            enforceUniquenessCheck:
                description: >-
                    Controls whether this command verifies that any unique indexes are prefixed by the shard
                    key pattern if unique is true. If true then it will verify and if false then it won't.
                type: optionalBool

    ShardCollection:
        description: "The public shardCollection command."
        strict: false
        inline_chained_structs: true
        chained_structs:
            ShardCollectionRequest: ShardCollectionRequest
        fields:
            shardCollection:
                type: namespacestring
                description: "The namespace of the collection to shard in the form <database>.<collection>."
                optional: true
            shardcollection:
                type: namespacestring
                description: >-
                    Same as the previous field, but refers to the deprecated version of this command's name.
                optional: true
            collation:
                type: object
                description: "The collation to use for the shard key index."
                optional: true
            timeseries:
                description: "The options to create the time-series collection with."
                type: TimeseriesOptions
                optional: true
            collectionUUID:
                description: "The expected UUID of the collection."
                type: uuid
                optional: true

commands:
    # Temporary command to run shardCollection with unsplittable=true and track unsharded
    # collection.
    # TODO SERVER-79158: Remove this test command once createCollection can create unsplittable
    # collections.
    createUnsplittableCollection:
        command_name: createUnsplittableCollection
        cpp_name: CreateUnsplittableCollection
        description: "The test only and temporary createUnsplittableCollection command for mongos."
        strict: false
        namespace: concatenate_with_db
        api_version: ""
        fields:
            timeseries:
                description: "The options to create the time-series collection with."
                type: TimeseriesOptions
                optional: true
            collectionUUID:
                description: "The expected UUID of the collection."
                type: uuid
                optional: true
            dataShard:
                description: "If set, the data for the collection will reside on the specified shard."
                type: shard_id
                optional: true
