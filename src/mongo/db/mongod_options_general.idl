# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/global_settings.h"
        - "mongo/db/mongod_options_general.h"
    configs:
        section: "General options"
        initializer:
            register: addMongodGeneralOptions

server_parameters:
    "clusterIpSourceAllowlist":
        description: "Network CIDR specification of permitted origin for `__system` access"
        set_at: runtime
        cpp_class:
            name: AllowListedClusterNetworkSetting
            override_set: true
        redact: false

configs:
    auth:
        description: "Run with security"
        arg_vartype: Switch
        source: [cli, ini]
        conflicts: noauth
    "security.clusterIpSourceAllowlist":
        description: "Network CIDR specification of permitted origin for `__system` access"
        short_name: clusterIpSourceAllowlist
        deprecated_name: "security.clusterIpSourceWhitelist"
        deprecated_short_name: clusterIpSourceWhitelist
        arg_vartype: StringVector
        source: [cli, ini, yaml]
        duplicate_behavior: append
    "security.authorization":
        description: >-
            How the database behaves with respect to authorization of clients.
            Options are "disabled", which means that authorization checks are not
            performed, and "enabled" which means that a client cannot perform actions it is
            not authorized to do.
        arg_vartype: String
        source: yaml
        validator:
            callback: validateSecurityAuthorizationSetting
    "security.authSchemaVersion":
        description: "TODO"
        arg_vartype: String
        source: yaml
    "security.enableLocalhostAuthBypass":
        description: "TODO"
        arg_vartype: String
        source: yaml
    profile:
        description: "0=off 1=slow, 2=all"
        arg_vartype: Int
        source: [cli, ini]
    "operationProfiling.mode":
        description: "(off/slowOp/all)"
        arg_vartype: String
        source: yaml
        validator:
            callback: validateOperationProfilingModeSetting
    cpu:
        description: "Periodically show cpu and iowait utilization"
        arg_vartype: Switch
        source: [cli, ini]
    sysinfo:
        description: "Print some diagnostic system information"
        arg_vartype: Switch
        source: [cli, ini]
    noscripting:
        description: "Disable scripting engine"
        arg_vartype: Switch
        source: [cli, ini]
    "security.javascriptEnabled":
        description: "Enable javascript execution"
        arg_vartype: Bool
        source: yaml
    notablescan:
        description: "Do not allow table scans"
        arg_vartype: Switch
        source: [cli, ini]
    shutdown:
        description: "Kill a running server (for init scripts)"
        arg_vartype: Switch
        source: [cli, ini]
        condition:
            preprocessor: "defined(__linux__)"
    "net.proxyPort":
        description: "The port that accepts connections with a proxy protocol header."
        short_name: proxyPort
        arg_vartype: Int
        source: [cli, yaml]
        validator: {gte: 1, lte: 65535}
