# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/mongod_options_sharding.h"
        - "mongo/db/server_options.h"
    configs:
        section: "Sharding options"
        initializer:
            register: addMongodShardingOptions

configs:
    configsvr:
        description: >-
            Assigns the config-server role to this node in a sharded cluster. The default listening
            port is 27019 and the default database directory is /data/configdb.
        arg_vartype: Switch
        source: [cli, ini]
        conflicts: shardsvr
    shardsvr:
        description: >-
            Assigns the shard-server role to this node in a sharded cluster. The default listening
            port is 27018.
        arg_vartype: Switch
        source: [cli, ini]
        conflicts: configsvr
    "sharding.clusterRole":
        description: >-
            Assigns a role to this node in a sharded cluster. Possible values are:
            "configsvr": Assigns the config-server role. The default listening port is 27019.
            "shardsvr": Assigns the shard-server role. The default listening port is 27018.
        arg_vartype: String
        source: yaml
        validator:
            callback: validateShardingClusterRoleSetting
    "sharding._overrideShardIdentity":
        description: >-
            Overrides the shardIdentity document settings stored in the local storage with
            a MongoDB Extended JSON document in string format.
        arg_vartype: String
        source: yaml
        conflicts: configsvr
        requires: "storage.queryableBackupMode"
    maintenanceMode:
        description: >-
            Allows this node to skip starting up sharding components or both replication and 
            sharding components. This allows for performing maintenance on this node. To skip 
            setting up just sharding components use --maintenanceMode=replicaSet. To skip setting 
            up both sharding and replication components use --maintenanceMode=standalone.
        arg_vartype: String
        source: [cli, ini]
        conflicts: [configsvr, shardsvr]
        validator:
            callback: validateMaintenanceModeSetting
    replicaSetConfigShardMaintenanceMode:
        description: >-
            Bypasses validation of configuration mismatches between startup parameters and the
            stored replSetConfig. Enables restarting the node as a configsvr even if the stored
            configuration is for a replica set, and vice versa.
        arg_vartype: Switch
        source: [cli, ini]
        conflicts: shardsvr
