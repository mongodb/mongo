# Copyright (C) 2018-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# Document source exchange stage IDL file

global:
    mod_visibility: private
    cpp_namespace: "mongo"

imports:
    - "mongo/db/basic_types.idl"

enums:
    ExchangePolicy:
        description: "The type of an exchange distribution policy"
        type: string
        values:
            kBroadcast: "broadcast"
            kRoundRobin: "roundrobin"
            kKeyRange: "keyRange"

structs:
    ExchangeSpec:
        description: "exchange aggregation request specification"
        query_shape_component: true
        fields:
            policy:
                type: ExchangePolicy
                description: A string indicating a policy of how documents are distributed to consumers.
                stability: stable
                query_shape: parameter
            consumers:
                type: int
                description: Number of consumers.
                stability: stable
                query_shape: literal
            orderPreserving:
                type: bool
                default: false
                description: A flag indicating documents are merged while preserving the order.
                stability: stable
                query_shape: parameter
            bufferSize:
                type: int
                default: 16777216
                description: The size of exchange buffers.
                stability: stable
                query_shape: literal
            key:
                type: object
                default: "BSONObj()"
                stability: stable
                description:
                    A key used for document distribution to consumers. The same description as
                    sorting/sharding. If the document entering the exchange does not have every
                    field listed here, or if any prefix of any path is multikey (i.e. an array is
                    encountered while traversing a path listed here), then it is by definition sent
                    to consumer 0.
                query_shape: literal
            boundaries:
                type: array<object>
                optional: true
                description: Range/hash split points.
                stability: stable
                query_shape: literal
            consumerIds:
                type: array<int>
                optional: true
                description: Mapping from a range index to a consumer id.
                stability: stable
                query_shape: literal
