# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# Merge modes for the document source merge stage.

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/db/basic_types.idl"

enums:
    MergeWhenMatchedMode:
        description: "Possible merge mode values for $merge's 'whenMatched' field."
        type: string
        values:
            kFail: "fail"
            kKeepExisting: "keepExisting"
            kMerge: "merge"
            # Technically, we don't need this item, as the 'pipeline' value, as a string, is not
            # supported by the 'whenMatched' field. Instead, a pipeline definition, as an array of
            # objects, should be used. However, to avoid special casing logic in
            # DocumentSourceMerge, and to keep all merge strategy definitions in a single
            # descriptors map, which keys are pairs of whenMatched/whenNotMatched values, this
            # 'kPipeline' element is added for internal use only.
            kPipeline: "pipeline"
            kReplace: "replace"

    MergeWhenNotMatchedMode:
        description: "Possible merge mode values for $merge's 'whenNotMatched'. field"
        type: string
        values:
            kDiscard: "discard"
            kFail: "fail"
            kInsert: "insert"
