# Copyright (C) 2024-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#
global:
    mod_visibility: private
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/pipeline/document_source_hybrid_scoring_input_util.h"
imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/pipeline/aggregate_command.idl"

enums:
    ScoreFusionNormalization:
        description: Input Normalization options
        type: string
        values:
            kNone: "none"
            kSigmoid: "sigmoid"
            kMinMaxScaler: "minMaxScaler"

structs:
    ScoreFusionInputsSpec:
        description: Specification for an input subpipeline to $scoreFusion.
        strict: true
        fields:
            pipelines:
                description: Map (name -> scored pipeline) of inputs. Each pipeline must be operating on the same collection.
                type: object_owned
                optional: false
                validator: {callback: "validatePipelinesObject"}
            normalization:
                description: Type of score normalization function (none, sigmoid, minMaxScaler)
                type: ScoreFusionNormalization
                optional: false
