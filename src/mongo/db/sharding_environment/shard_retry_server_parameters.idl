#  Copyright (C) 2025-present MongoDB, Inc.
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the Server Side Public License, version 1,
#  as published by MongoDB, Inc.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  Server Side Public License for more details.
#
#  You should have received a copy of the Server Side Public License
#  along with this program. If not, see
#  <http://www.mongodb.com/licensing/server-side-public-license>.
#
#  As a special exception, the copyright holders give permission to link the
#  code of portions of this program with the OpenSSL library under certain
#  conditions as described in each individual source file and distribute
#  linked combinations including the program with the OpenSSL library. You
#  must comply with the Server Side Public License in all respects for
#  all of the code used other than as permitted herein. If you modify file(s)
#  with this exception, you may extend this exception to your version of the
#  file(s), but you are not obligated to do so. If you do not wish to do so,
#  delete this exception statement from your version. If you delete this
#  exception statement from all source files in the program, then also delete
#  it in the license file.

global:
    cpp_namespace: mongo
    cpp_includes:
        - "mongo/db/sharding_environment/grid.h"
        - "mongo/db/sharding_environment/client/shard.h"

server_parameters:
    shardRetryTokenBucketCapacity:
        description: Maximum amount of retry tokens available to a shard.
        set_at: [startup, runtime]
        cpp_vartype: Atomic<std::int32_t>
        cpp_varname: gShardRetryTokenBucketCapacity
        default: 1000
        validator:
            gt: 0
        redact: false
        on_update: Grid::updateRetryBudgetCapacity

    shardRetryTokenReturnRate:
        description: >-
            Return rate for shard retry tokens on successful requests.
            Allows the amount of available retry tokens to increase over time as requests are being
            performed.
        set_at: [startup, runtime]
        cpp_vartype: Atomic<double>
        cpp_varname: gShardRetryTokenReturnRate
        default: 0.1
        validator:
            gt: 0
        redact: false
        on_update: Grid::updateRetryBudgetReturnRate
