# Golden test output of GoldenGenExpressionTest/TestExprMultiplyLarge
ExpressionMultiply

    let [
        l2.0 = getField(s1, "bar") 
        l2.1 = getField(s1, "bar") 
        l2.2 = getField(s1, "bar") 
        l2.3 = getField(s1, "bar") 
        l2.4 = getField(s1, "bar") 
        l2.5 = getField(s1, "bar") 
        l2.6 = getField(s1, "bar") 
        l2.7 = getField(s1, "bar") 
        l2.8 = getField(s1, "bar") 
        l2.9 = getField(s1, "bar") 
        l2.10 = getField(s1, "bar") 
        l2.11 = getField(s1, "bar") 
        l2.12 = getField(s1, "bar") 
        l2.13 = getField(s1, "bar") 
        l2.14 = getField(s1, "bar") 
        l2.15 = getField(s1, "bar") 
        l2.16 = getField(s1, "bar") 
        l2.17 = getField(s1, "bar") 
        l2.18 = getField(s1, "bar") 
        l2.19 = getField(s1, "bar") 
        l2.20 = getField(s1, "bar") 
        l2.21 = getField(s1, "bar") 
        l2.22 = getField(s1, "bar") 
        l2.23 = getField(s1, "bar") 
        l2.24 = getField(s1, "bar") 
        l2.25 = getField(s1, "bar") 
        l2.26 = getField(s1, "bar") 
        l2.27 = getField(s1, "bar") 
        l2.28 = getField(s1, "bar") 
        l2.29 = getField(s1, "bar") 
        l2.30 = getField(s1, "bar") 
        l2.31 = getField(s1, "bar") 
        l2.32 = getField(s1, "bar") 
        l2.33 = getField(s1, "bar") 
        l2.34 = getField(s1, "bar") 
        l2.35 = getField(s1, "bar") 
        l2.36 = getField(s1, "bar") 
        l2.37 = getField(s1, "bar") 
        l2.38 = getField(s1, "bar") 
        l2.39 = getField(s1, "bar") 
        l2.40 = getField(s1, "bar") 
        l2.41 = getField(s1, "bar") 
        l2.42 = getField(s1, "bar") 
        l2.43 = getField(s1, "bar") 
        l2.44 = getField(s1, "bar") 
        l2.45 = getField(s1, "bar") 
        l2.46 = getField(s1, "bar") 
        l2.47 = getField(s1, "bar") 
        l2.48 = getField(s1, "bar") 
        l2.49 = getField(s1, "bar") 
    ] 
    in 
        if ((typeMatch(l2.0, 1088) ?: true) || (typeMatch(l2.1, 1088) ?: true) || (typeMatch(l2.2, 1088) ?: true) || (typeMatch(l2.3, 1088) ?: true) || (typeMatch(l2.4, 1088) ?: true) || (typeMatch(l2.5, 1088) ?: true) || (typeMatch(l2.6, 1088) ?: true) || (typeMatch(l2.7, 1088) ?: true) || (typeMatch(l2.8, 1088) ?: true) || (typeMatch(l2.9, 1088) ?: true) || (typeMatch(l2.10, 1088) ?: true) || (typeMatch(l2.11, 1088) ?: true) || (typeMatch(l2.12, 1088) ?: true) || (typeMatch(l2.13, 1088) ?: true) || (typeMatch(l2.14, 1088) ?: true) || (typeMatch(l2.15, 1088) ?: true) || (typeMatch(l2.16, 1088) ?: true) || (typeMatch(l2.17, 1088) ?: true) || (typeMatch(l2.18, 1088) ?: true) || (typeMatch(l2.19, 1088) ?: true) || (typeMatch(l2.20, 1088) ?: true) || (typeMatch(l2.21, 1088) ?: true) || (typeMatch(l2.22, 1088) ?: true) || (typeMatch(l2.23, 1088) ?: true) || (typeMatch(l2.24, 1088) ?: true) || (typeMatch(l2.25, 1088) ?: true) || (typeMatch(l2.26, 1088) ?: true) || (typeMatch(l2.27, 1088) ?: true) || (typeMatch(l2.28, 1088) ?: true) || (typeMatch(l2.29, 1088) ?: true) || (typeMatch(l2.30, 1088) ?: true) || (typeMatch(l2.31, 1088) ?: true) || (typeMatch(l2.32, 1088) ?: true) || (typeMatch(l2.33, 1088) ?: true) || (typeMatch(l2.34, 1088) ?: true) || (typeMatch(l2.35, 1088) ?: true) || (typeMatch(l2.36, 1088) ?: true) || (typeMatch(l2.37, 1088) ?: true) || (typeMatch(l2.38, 1088) ?: true) || (typeMatch(l2.39, 1088) ?: true) || (typeMatch(l2.40, 1088) ?: true) || (typeMatch(l2.41, 1088) ?: true) || (typeMatch(l2.42, 1088) ?: true) || (typeMatch(l2.43, 1088) ?: true) || (typeMatch(l2.44, 1088) ?: true) || (typeMatch(l2.45, 1088) ?: true) || (typeMatch(l2.46, 1088) ?: true) || (typeMatch(l2.47, 1088) ?: true) || (typeMatch(l2.48, 1088) ?: true) || (typeMatch(l2.49, 1088) ?: true)) 
        then null 
        elif (isNumber(l2.0) && isNumber(l2.1) && isNumber(l2.2) && isNumber(l2.3) && isNumber(l2.4) && isNumber(l2.5) && isNumber(l2.6) && isNumber(l2.7) && isNumber(l2.8) && isNumber(l2.9) && isNumber(l2.10) && isNumber(l2.11) && isNumber(l2.12) && isNumber(l2.13) && isNumber(l2.14) && isNumber(l2.15) && isNumber(l2.16) && isNumber(l2.17) && isNumber(l2.18) && isNumber(l2.19) && isNumber(l2.20) && isNumber(l2.21) && isNumber(l2.22) && isNumber(l2.23) && isNumber(l2.24) && isNumber(l2.25) && isNumber(l2.26) && isNumber(l2.27) && isNumber(l2.28) && isNumber(l2.29) && isNumber(l2.30) && isNumber(l2.31) && isNumber(l2.32) && isNumber(l2.33) && isNumber(l2.34) && isNumber(l2.35) && isNumber(l2.36) && isNumber(l2.37) && isNumber(l2.38) && isNumber(l2.39) && isNumber(l2.40) && isNumber(l2.41) && isNumber(l2.42) && isNumber(l2.43) && isNumber(l2.44) && isNumber(l2.45) && isNumber(l2.46) && isNumber(l2.47) && isNumber(l2.48) && isNumber(l2.49)) 
        then (2ll * move(l2.0) * 4ll * move(l2.1) * 2ll * move(l2.2) * 4ll * move(l2.3) * 2ll * move(l2.4) * 4ll * move(l2.5) * 2ll * move(l2.6) * 4ll * move(l2.7) * 2ll * move(l2.8) * 4ll * move(l2.9) * 2ll * move(l2.10) * 4ll * move(l2.11) * 2ll * move(l2.12) * 4ll * move(l2.13) * 2ll * move(l2.14) * 4ll * move(l2.15) * 2ll * move(l2.16) * 4ll * move(l2.17) * 2ll * move(l2.18) * 4ll * move(l2.19) * 2ll * move(l2.20) * 4ll * move(l2.21) * 2ll * move(l2.22) * 4ll * move(l2.23) * 2ll * move(l2.24) * 4ll * move(l2.25) * 2ll * move(l2.26) * 4ll * move(l2.27) * 2ll * move(l2.28) * 4ll * move(l2.29) * 2ll * move(l2.30) * 4ll * move(l2.31) * 2ll * move(l2.32) * 4ll * move(l2.33) * 2ll * move(l2.34) * 4ll * move(l2.35) * 2ll * move(l2.36) * 4ll * move(l2.37) * 2ll * move(l2.38) * 4ll * move(l2.39) * 2ll * move(l2.40) * 4ll * move(l2.41) * 2ll * move(l2.42) * 4ll * move(l2.43) * 2ll * move(l2.44) * 4ll * move(l2.45) * 2ll * move(l2.46) * 4ll * move(l2.47) * 2ll * move(l2.48) * 4ll * move(l2.49)) 
        else fail(7157721, "only numbers are allowed in an $multiply expression") 

