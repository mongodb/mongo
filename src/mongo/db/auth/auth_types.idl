# Copyright (C) 2018-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/auth/user_name.h"
        - "mongo/db/auth/role_name.h"
        - "mongo/db/auth/role_name_or_string.h"

imports:
    - "mongo/db/basic_types.idl"

types:
    UserName:
        bson_serialization_type: any
        description: "A struct representing a UserName"
        cpp_type: "UserName"
        deserializer: "mongo::UserName::parseFromBSON"
        serializer: "mongo::UserName::serializeToBSON"
        # The AuthName that is constructed has only non-view members.
        is_view: false

    RoleName:
        bson_serialization_type: any
        description: "A struct representing a Role"
        cpp_type: "RoleName"
        deserializer: "mongo::RoleName::parseFromBSON"
        serializer: "mongo::RoleName::serializeToBSON"
        # The AuthName that is constructed has only non-view members.
        is_view: false

    RoleNameOrString:
        bson_serialization_type: any
        description: Wrapper for RoleName which allows specifying just a string.
        cpp_type: "RoleNameOrString"
        deserializer: "mongo::RoleNameOrString::parseFromBSON"
        serializer: "mongo::RoleNameOrString::serializeToBSON"
        # The AuthName that is constructed has only non-view members.
        is_view: false

structs:
    authLocalGetSubRolesFailPoint:
        description: Data for authLocalGetSubRoles failpoint
        fields:
            resolveRolesDelayMS:
                type: int
                validator: {gte: 0}
    waitForUserCacheInvalidationFailPoint:
        description: Data for waitForUserCacheInvalidation fail point
        fields:
            userName:
                type: UserName
