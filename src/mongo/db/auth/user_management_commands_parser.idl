# Copyright (C) 2020-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#
global:
    cpp_namespace: "mongo::auth"
    cpp_includes:
        - "mongo/db/auth/privilege_format.h"
        - "mongo/db/auth/umc_info_command_arg.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/auth/auth_types.idl"

types:
    # Unifies the various invocations of {usersInfo:...}
    UsersInfoCommandArg:
        bson_serialization_type: any
        description: "Argument to usersInfo command"
        cpp_type: "UsersInfoCommandArg"
        deserializer: "mongo::auth::UsersInfoCommandArg::parseFromBSON"
        serializer: "mongo::auth::UsersInfoCommandArg::serializeToBSON"
        deserialize_with_tenant: true
        # Class which is constructed using AuthName has only non view members.
        is_view: false

    # Unifies the various invocations of {rolesInfo:...}
    RolesInfoCommandArg:
        bson_serialization_type: any
        description: "Argument to rolesInfo command"
        cpp_type: "RolesInfoCommandArg"
        deserializer: "mongo::auth::RolesInfoCommandArg::parseFromBSON"
        serializer: "mongo::auth::RolesInfoCommandArg::serializeToBSON"
        deserialize_with_tenant: true
        # Class which is constructed using AuthName has only non view members.
        is_view: false

    # PrivilegeFormat: true | false | "asUserFragment"
    ParsedPrivilegeFormat:
        bson_serialization_type: any
        description: "PrivilegeFormat for rolesInfo command"
        cpp_type: "ParsedPrivilegeFormat"
        deserializer: "mongo::auth::ParsedPrivilegeFormat::parseFromBSON"
        serializer: "mongo::auth::ParsedPrivilegeFormat::serializeToBSON"
        is_view: false
