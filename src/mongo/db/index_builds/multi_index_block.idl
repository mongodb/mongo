# Copyright (C) 2018-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/index_builds/multi_index_block_validator.h"

imports:
    - "mongo/db/basic_types.idl"

server_parameters:
    useReadOnceCursorsForIndexBuilds:
        description: "When true, enables uses of read once cursors for index builds"
        set_at:
            - runtime
            - startup
        cpp_varname: useReadOnceCursorsForIndexBuilds
        cpp_vartype: AtomicWord<bool>
        default: true
        redact: false

    maxIndexBuildMemoryUsageMegabytes:
        description:
            "Limits the amount of memory that simultaneous index builds on one
            collection may consume for the duration of the builds. A value between
            0-1.0 (exclusive) will be interpreted as a percentage of RAM. A value
            greater than or equal to 1.0 is interpreted as MB. A minimum limit of
            50 MB is enforced on both MB and percentage computed values. For
            percentage-based values, the maximum limit is 80%."
        set_at:
            - runtime
            - startup
        cpp_varname: maxIndexBuildMemoryUsageMegabytes
        cpp_vartype: AtomicWord<double>
        default: 200
        validator:
            callback: validateMaxIndexBuildMemoryUsageMegabytesSetting
        redact: false

    internalIndexBuildBulkLoadYieldIterations:
        description: "The number of keys bulk-loaded before yielding."
        set_at:
            - runtime
            - startup
        cpp_varname: internalIndexBuildBulkLoadYieldIterations
        cpp_vartype: AtomicWord<int>
        default: 1000
        validator:
            gte: 1
        redact: false
