# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/db/basic_types.idl"

server_parameters:
    maxIndexBuildDrainBatchSize:
        description: >-
            Limits the number of keys that a hybrid index build on one collection will apply
            per batch during the drain phase. A higher value prevents the operation for yielding locks and
            storage engine resources.
        set_at:
            - runtime
            - startup
        cpp_varname: maxIndexBuildDrainBatchSize
        cpp_vartype: AtomicWord<int>
        default: 1000
        validator:
            gte: 1
        redact: false

    maxIndexBuildDrainMemoryUsageMegabytes:
        description: >-
            Limits the amount of memory that a hybrid index build on one collection may
            consume during the drain phase. A higher value will exert more cache pressure on the storage
            engine.
        set_at:
            - runtime
            - startup
        cpp_varname: maxIndexBuildDrainMemoryUsageMegabytes
        cpp_vartype: AtomicWord<int>
        default: 16
        validator:
            gte: 16
            lt: 2048
        redact: false
