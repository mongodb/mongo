# Copyright (C) 2023-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# This file defines the format of documents stored in
# config.localReshardingOperations.recipient_resume on the recipient shard for a resharding
# operation  This table is separate from the mutable RecipientShardContext because we need to
# write it transactionally with the data, and doing so in RecipientShardContext would serialize
# our writes.

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/s/resharding/common_types.idl"
    - "mongo/db/sharding_environment/sharding_types.idl"
    - "mongo/util/net/hostandport.idl"

structs:
    ReshardingRecipientResumeDataId:
        description: Primary key for recipient resume data
        fields:
            reshardingUUID:
                type: uuid
                description: "A unique identifier for the resharding operation"
            shardId:
                type: shard_id
                description: "Shard identifier for the donor shard"

    ReshardingRecipientResumeData:
        description: Represents the resume data for a particular donor shard for this recipient.
        generate_comparison_operators: false
        # Use strict:false to avoid complications around upgrade/downgrade. This isn't technically
        # required for resharding because durable state from all resharding operations is cleaned up
        # before the upgrade or downgrade can complete.
        strict: false
        fields:
            _id:
                cpp_name: id
                type: ReshardingRecipientResumeDataId
            donorHost:
                description: >-
                    The particular host being used for this shard ID in this resharding operation.
                optional: true
                type: HostAndPort
            resumeToken:
                description: >-
                    The opaque resume token for the batch most recently written to the temporary
                    collection.  If this is missing, no data has been written to the temporary
                    collection for this shard and donorHost may be ignored.  If it is present
                    but empty, all data for this shard has already been cloned.
                optional: true
                type: object
            documentsCopied:
                type: long
                description: The number of documents cloned from this shard.
                optional: true
            bytesCopied:
                type: long
                description: The number of bytes for the documents cloned from this shard.
                optional: true
