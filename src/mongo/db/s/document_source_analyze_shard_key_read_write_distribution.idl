# Copyright (C) 2023-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo::analyze_shard_key"
    cpp_includes:
        - "mongo/db/s/analyze_shard_key_util.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/s/analyze_shard_key_cmd.idl"
    - "mongo/db/sharding_environment/sharding_types.idl"

structs:
    DocumentSourceAnalyzeShardKeyReadWriteDistributionSpec:
        description: Specification for a $_analyzeShardKeyReadWriteDistribution stage.
        strict: false
        query_shape_component: true
        fields:
            key:
                description: The shard key to evaluate.
                type: KeyPattern
                query_shape: custom
                validator:
                    callback: validateShardKeyPattern
            splitPointsFilter:
                query_shape: literal
                description:
                    The filter to use to fetch the split point documents generated by the command
                    running this aggregation stage.
                type: object_owned
            splitPointsAfterClusterTime:
                query_shape: literal
                description:
                    The afterClusterTime to use when fetching the split point documents. This must
                    be greater or equal to the timestamp at which the insert for the last split
                    point document occurred.
                type: timestamp
            splitPointsShardId:
                query_shape: anonymize
                description:
                    The id of the shard that the analyzeShardKey command is running on, and
                    therefore contains the temporary collection storing the split points for the
                    shard key. Only set when running on a sharded cluster.
                type: shard_id
                optional: true

    DocumentSourceAnalyzeShardKeyReadWriteDistributionResponse:
        description: The document that a $_analyzeShardKeyReadWriteDistribution stage outputs.
        strict: false
        fields:
            readDistribution:
                type: ReadDistributionMetrics
            writeDistribution:
                type: WriteDistributionMetrics
