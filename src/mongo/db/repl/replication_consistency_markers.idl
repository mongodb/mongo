# Copyright (C) 2018-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# Replication Consistency Markers IDL File

global:
    cpp_namespace: "mongo::repl"
    mod_visibility: pub_for_technical_reasons

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/repl/replication_types.idl"

structs:
    MinValidDocument:
        description: A document in which the server stores its minValid and appliedThrough information.
        fields:
            ts:
                cpp_name: minValidTimestamp
                type: timestamp
                description: "The timestamp for the OpTime at which the data on disk will be consistent"
            t:
                cpp_name: minValidTerm
                type: safeInt64
                description: "The term for the OpTime at which the data on disk will be consistent; -1 for PV0."
            begin:
                cpp_name: appliedThrough
                type: optime
                optional: true # This field is unset when we want to mark that we are consistent at the top of the oplog
                description: "The OpTime of the last oplog entry we applied"
            doingInitialSync:
                cpp_name: initialSyncFlag
                type: bool
                optional: true # This field is unset when we are not doing initial sync
                description: "A flag for if we are in the middle of initial sync"
            _id:
                type: objectid
                optional: true # This is automatically created when the document is upserted
                description: "An objectid that is not used but is automatically generated"
    OplogTruncateAfterPointDocument:
        description: A document in which the server stores information on where to truncate the oplog on unclean shutdown.
        fields:
            oplogTruncateAfterPoint:
                type: timestamp
                description: "The timestamp of an oplog entry after which the oplog may be inconsistent (have holes due to parallel writes)."
            _id:
                type: string
                description: "Always set to 'oplogTruncateAfterPoint' to easily retrieve it."

    InitialSyncIdDocument:
        description: A document in which the server stores data related to the initial sync of the server.
        fields:
            _id:
                type: uuid
                description: "An arbitrary unique identifier associated with the initial sync of the server."
            wallTime:
                type: date
                optional: true
                description: "The walltime at which the initial sync document was written."
