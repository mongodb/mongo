# Copyright (C) 2023-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# This file contains all the types that are authoritatively written in the shard server's
# config.shard.xxx collections.

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/db/basic_types.idl"

structs:
    ShardAuthoritativeCollectionType:
        description:
            "Represents the layout and contents of documents contained in the shard
            server's config.shard.collections collection. This type must be
            authoritatively written in shards. All manipulation of documents coming
            from that collection should be done with this class."
        strict: false
        fields:
            _id:
                cpp_name: nss
                type: namespacestring
                description: "The full namespace (with the database prefix)."
                optional: false
            uuid:
                cpp_name: uuid
                type: uuid
                description:
                    "The UUID that will be used to create the local collection on each of
                    the shards which have chunks."
                optional: false
            indexVersion:
                type: timestamp
                description:
                    "Current collection index version. It will tick everytime a global
                    index is created or dropped."
                optional: true
