# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/matcher/schema/encrypt_schema_types.h"
        - "mongo/db/query/compiler/parsers/matcher/schema/encrypt_schema_types_parser.h"
    mod_visibility: pub
imports:
    - "mongo/db/basic_types.idl"
    - "mongo/crypto/encryption_fields.idl"

types:
    encryptSchemaKeyId:
        bson_serialization_type: any
        description: "A string pointing to the key id or an array UUIDs identifying a set of keys."
        cpp_type: "mongo::EncryptSchemaKeyId"
        serializer: mongo::EncryptSchemaKeyId::serializeToBSON
        deserializer: mongo::parsers::matcher::schema::parseEncryptSchemaKeyId
        # EncryptSchemaKeyId has only non view members.
        is_view: false

    bsonTypeSet:
        bson_serialization_type: any
        description: "A string or array of strings representing BSONType names."
        cpp_type: "mongo::BSONTypeSet"
        serializer: mongo::BSONTypeSet::serializeToBSON
        deserializer: mongo::parsers::matcher::schema::parseBSONTypeSet
        # BSONTypeSet initialized with non view objects.
        is_view: false

enums:
    FleAlgorithm:
        description: "The algorithm used to encrypt fields for field level encryption."
        type: string
        values:
            kDeterministic: "AEAD_AES_256_CBC_HMAC_SHA_512-Deterministic"
            kRandom: "AEAD_AES_256_CBC_HMAC_SHA_512-Random"

structs:
    # Maps to the encrypt keyword in JSON Schema.
    EncryptionInfo:
        description:
            "Represents the fields that users can specify within the encryptMetadata
            subobject in a JSON Schema."
        strict: true
        fields:
            bsonType:
                description: "Specifies the type of the to-be-encrypted value."
                type: bsonTypeSet
                optional: true
            algorithm:
                description: "The encryption algorithm to be used."
                type: FleAlgorithm
                optional: true
            keyId:
                description: "A JSONPointer to a key or an array of UUIDs identifying a set of keys."
                type: encryptSchemaKeyId
                optional: true

    # Maps to "encryptMetadata" in JSON Schema.
    EncryptionMetadata:
        description: "The fields that can be applied to children in the schema
            with the encrypt keyword."
        strict: true
        generate_comparison_operators: true
        fields:
            algorithm:
                description: "The encryption algorithm to be used."
                type: FleAlgorithm
                optional: true
            keyId:
                description: "A JSONPointer to a key or an array of UUIDs identifying a set of keys."
                type: encryptSchemaKeyId
                optional: true
