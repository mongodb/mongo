# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/namespace_string.h"
        - "mongo/db/query/count_request.h"
    mod_visibility: pub

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/crypto/fle_field_schema.idl"
    - "mongo/db/auth/action_type.idl"
    - "mongo/db/auth/access_checks.idl"
    - "mongo/db/query/hint.idl"

types:
    countLimit:
        bson_serialization_type: any
        description: "The absolute value of an int for limit."
        cpp_type: "std::int64_t"
        deserializer: ::count_request::countParseLimit
        # std::int64_t is not a view.
        is_view: false

structs:
    CountCommandReply:
        description: "Reply from the {count: ...} command"
        strict: true
        is_command_reply: true
        fields:
            n:
                description: "Number of documents"
                type:
                    variant: [int, long]
                optional: false
                cpp_name: count
                stability: stable
            metrics:
                description: "The metrics for the count command"
                type: object_owned
                optional: true
                stability: unstable

commands:
    count:
        description: "Parser for the 'count' command."
        command_name: count
        cpp_name: CountCommandRequest
        strict: true
        # Note: calling count with a UUID is not part of the stable API v1.
        namespace: concatenate_with_db_or_uuid
        api_version: "1"
        access_check:
            complex:
                - check: should_ignore_auth_checks
                - check: is_authorized_to_parse_namespace_element
                - privilege:
                      resource_pattern: exact_namespace
                      action_type: find
                - privilege:
                      resource_pattern: cluster
                      action_type: useUUID
        reply_type: CountCommandReply
        fields:
            query:
                description: >-
                    A query that selects which documents to count in the collection or
                    view.
                type: object_owned
                default: BSONObj()
                stability: stable
            limit:
                description: "The maximum number of matching documents to count."
                type: countLimit
                optional: true
                stability: stable
            skip:
                description:
                    "The number of matching documents to skip before counting subsequent
                    results."
                type: safeInt64
                optional: true
                validator: {gte: 0}
                stability: stable
            hint:
                description: "The index name to use or the index specification document."
                type: indexHint
                default: BSONObj()
                stability: stable
            collation:
                description: "The collation to use in the count command."
                type: object_owned
                optional: true
                stability: stable
            fields:
                description: "A BSONObj added by the shell. Left in for backwards compatibility."
                type: object
                ignore: true
                stability: unstable
            encryptionInformation:
                description: "Encryption Information schema and other tokens for CRUD commands"
                type: EncryptionInformation
                optional: true
                stability: unstable
            mirrored:
                description: "Indicates whether the operation is a mirrored read"
                type: optionalBool
                stability: unstable
            sampleId:
                description: "The unique sample id for the operation if it has been chosen for sampling."
                type: uuid
                optional: true
                stability: unstable
            includeQueryStatsMetrics:
                description: "Indicates whether or not query stats metrics should be included in the response."
                type: optionalBool
                stability: internal
