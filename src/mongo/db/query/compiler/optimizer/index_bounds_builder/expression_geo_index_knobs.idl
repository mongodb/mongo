# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    mod_visibility: private

server_parameters:
    internalGeoPredicateQuery2DMaxCoveringCells:
        description: "Maximum number of cells to use for 2D geo query covering for predicate queries"
        set_at: [startup, runtime]
        cpp_vartype: "AtomicWord<int>"
        cpp_varname: gInternalGeoPredicateQuery2DMaxCoveringCells
        default: 16
        redact: false

    internalGeoNearQuery2DMaxCoveringCells:
        description: "Maximum number of cells to use for 2D geo query covering for near queries"
        set_at: [startup, runtime]
        cpp_vartype: "AtomicWord<int>"
        cpp_varname: gInternalGeoNearQuery2DMaxCoveringCells
        default: 16
        redact: false

    internalQueryS2GeoFinestLevel:
        description: "Finest level we will cover a queried region or geoNear annulus"
        set_at: [startup, runtime]
        cpp_vartype: "AtomicWord<int>"
        cpp_varname: gInternalQueryS2GeoFinestLevel
        default: 23
        redact: false

    internalQueryS2GeoCoarsestLevel:
        description: "Coarsest level we will cover a queried region or geoNear annulus"
        set_at: [startup, runtime]
        cpp_vartype: "AtomicWord<int>"
        cpp_varname: gInternalQueryS2GeoCoarsestLevel
        default: 0
        redact: false

    internalQueryS2GeoMaxCells:
        description: "Maximum cell count that we want? (advisory, not a hard threshold)"
        set_at: [startup, runtime]
        cpp_vartype: "AtomicWord<int>"
        cpp_varname: gInternalQueryS2GeoMaxCells
        default: 20
        redact: false
