# Copyright (C) 2022-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#
global:
    cpp_namespace: "mongo"
    mod_visibility: private

imports:
    - "mongo/db/basic_types.idl"

structs:
    StatsBucket:
        description: "Histogram bucket"
        fields:
            boundaryCount:
                type: double
            rangeCount:
                type: double
            rangeDistincts:
                type: double
            cumulativeCount:
                type: double
            cumulativeDistincts:
                type: double

    StatsHistogram:
        description: "MaxDiff Histogram"
        fields:
            buckets:
                type: array<StatsBucket>
            bounds:
                type: array<IDLAnyType>

    TypeTag:
        description: "SBE types and their corresponding frequencies in the histogram"
        fields:
            typeName:
                type: string
            count:
                type: long

    StatsArrayHistogram:
        description: "Array Histogram"
        fields:
            minHistogram:
                type: StatsHistogram
            maxHistogram:
                type: StatsHistogram
            uniqueHistogram:
                type: StatsHistogram
            typeCount:
                type: array<TypeTag>

    Statistics:
        description: "Serialized representation of data statistics for a key path"
        fields:
            documents:
                type: double
            sampleRate:
                type: double
                validator: {gte: 0.0, lte: 1.0}
            trueCount:
                type: long
            falseCount:
                type: long
            nanCount:
                type: long
            emptyArrayCount:
                type: long
            typeCount:
                type: array<TypeTag>
            scalarHistogram:
                type: StatsHistogram
            arrayStatistics:
                type: StatsArrayHistogram
                optional: true

    StatsPath:
        description: "Key path to statstics"
        fields:
            _id:
                type: string
            statistics:
                type: Statistics

    InternalConstructStatsAccumulatorParams:
        description: "Schema for the $_internalConstructStats accumulator"
        fields:
            val:
                type: string
            sampleRate:
                type: double
                default: 1.0
            numberBuckets:
                type: int
