# Copyright (C) 2023-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo::query_settings"
    cpp_includes:
        - "mongo/db/query/query_settings/query_framework_serialization.h"
        - "mongo/db/query/query_settings/index_hints_serialization.h"
        - "mongo/db/query/query_settings/query_settings_comment.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/namespace_spec.idl"
    - "mongo/db/query/index_hint.idl"
    - "mongo/db/query/query_knobs.idl"
    - "mongo/db/query/query_shape/query_shape_hash.idl"

types:
    QueryFramework:
        description: >-
            Enum representing the query engine version as a combination of execution
            engine and optimizer being used when executing the query.
        bson_serialization_type: string
        cpp_type: "mongo::QueryFrameworkControlEnum"
        deserializer: "::mongo::query_settings::query_framework::parse"
        serializer: "::mongo::query_settings::query_framework::serialize"
        is_view: false
    IndexHintSpecs:
        description: Array representing the index hints specified for different collections.
        bson_serialization_type: any
        cpp_type: "query_settings::IndexHintSpecs"
        serializer: "::mongo::query_settings::index_hints::serialize"
        deserializer: "::mongo::query_settings::index_hints::parse"
        deserialize_with_tenant: true
        is_view: false
    Comment:
        description: Any type object representing the comment left on a particular instance of query settings.
        bson_serialization_type: any
        cpp_type: "query_settings::Comment"
        serializer: "mongo::query_settings::Comment::serializeToBSON"
        deserializer: "mongo::query_settings::Comment::parseFromBSON"
        is_view: false

structs:
    IndexHintSpec:
        description: "Struct representing the index hint spec."
        generate_comparison_operators: true
        strict: false
        fields:
            ns:
                type: NamespaceSpec
                stability: internal
            allowedIndexes:
                non_const_getter: true
                type: array<IndexHint>
                stability: internal

    QuerySettings:
        description: >-
            Struct representing possible settings that may be applied to a given query.
        generate_comparison_operators: true
        strict: false
        fields:
            indexHints:
                non_const_getter: true
                type: IndexHintSpecs
                optional: true
                stability: internal
            queryFramework:
                type: QueryFramework
                optional: true
                stability: internal
            reject:
                type: optionalBool
                stability: internal
            comment:
                type: Comment
                optional: true
                stability: internal

    QueryShapeConfiguration:
        description: >-
            Struct representing configuration for a particular query shape of the
            'representativeQuery'. Configuration consists of query settings that will
            be applied to all query instances of the query shape.
        strict: false
        fields:
            queryShapeHash: QueryShapeHash
            settings: QuerySettings
            representativeQuery:
                type: object_owned
                optional: true

    QueryShapeRepresentativeQuery:
        description: >-
            A structure to store 'QueryShapeHash' with the corresponding 'QueryInstance'.
        strict: false
        fields:
            _id:
                type: QueryShapeHash
                stability: internal
            representativeQuery:
                type: object_owned
                stability: internal
            lastModifiedTime:
                type: logicalTime
                stability: internal
