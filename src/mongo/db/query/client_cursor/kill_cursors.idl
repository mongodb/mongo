# Copyright (C) 2020-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/query/client_cursor/cursor_id.h"

imports:
    - "mongo/db/auth/access_checks.idl"
    - "mongo/db/auth/action_type.idl"
    - "mongo/db/basic_types.idl"

types:
    cursorId:
        bson_serialization_type: long
        description: "Uniquely identifies a single cursor on a particular mongoS or mongoD."
        cpp_type: mongo::CursorId
        deserializer: "mongo::BSONElement::_numberLong"
        is_view: false

structs:
    KillCursorsCommandReply:
        description: "Response from killCursors command"
        strict: false
        is_command_reply: true
        fields:
            cursorsKilled:
                description: "Cursors successfully killed"
                type: array<cursorId>
                stability: stable
            cursorsNotFound:
                description: "Cursors not found"
                type: array<cursorId>
                stability: stable
            cursorsAlive:
                description: "Cursors still alive"
                type: array<cursorId>
                stability: stable
            cursorsUnknown:
                # This is a legacy field and always returns an empty array.
                description: "Unknown cursors"
                type: array<cursorId>
                stability: stable

commands:
    killCursors:
        description: "Kills a specified set of cursors by ID."
        command_name: killCursors
        cpp_name: KillCursorsCommandRequest
        reply_type: KillCursorsCommandReply
        api_version: "1"
        access_check:
            complex:
                - check: is_coauthorized_with
                - privilege:
                      resource_pattern: cluster
                      action_type: killAnyCursor
                - privilege:
                      resource_pattern: database
                      action_type: killAnyCursor
                - privilege:
                      resource_pattern: exact_namespace
                      action_type: killAnyCursor
        strict: true
        namespace: concatenate_with_db
        fields:
            cursors:
                description: "An array of cursor IDs to be killed."
                type: array<cursorId>
                cpp_name: cursorIds
                optional: false
                stability: stable
