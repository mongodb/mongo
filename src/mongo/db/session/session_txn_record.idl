# Copyright (C) 2018-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# Session Transaction Entry IDL File

global:
    cpp_namespace: "mongo"
    mod_visibility: pub
    cpp_includes:
        - "mongo/db/session/logical_session_id.h"
        - "mongo/db/repl/optime.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/session/logical_session_id.idl"
    - "mongo/db/repl/replication_types.idl"

enums:
    DurableTxnState:
        description: "The state of the most recent durable transaction on a session"
        type: string
        values:
            kPrepared: "prepared"
            kCommitted: "committed"
            kAborted: "aborted"
            kInProgress: "inProgress"

structs:
    sessionTxnRecord:
        description: "A document used for storing session transaction states."
        strict: false
        fields:
            _id:
                cpp_name: sessionId
                type: LogicalSessionId
                description: "The id of the session this transaction belongs to."
            parentLsid:
                cpp_name: parentSessionId
                type: LogicalSessionId
                description:
                    "If this transaction is a retryable internal transaction, stores the id
                    of the parent session for the session the transaction belongs to."
                optional: true
            txnNum:
                type: TxnNumber
                description: "The id representing this transaction."
            txnRetryCounter:
                description: "The last seen transaction retry counter for this transaction."
                type: TxnRetryCounter
                optional: true # Retryable writes do not have a txnRetryCounter field.
            startOpTime:
                type: optime
                description: "The optime of this transaction's first oplog entry."
                optional: true
            lastWriteOpTime:
                type: optime
                description:
                    "The optime timestamp component of the last write on this
                    transaction."
            lastWriteDate:
                type: date
                description:
                    "Wall clock time of the last write which happened on on this
                    transaction."
            state:
                type: DurableTxnState
                optional: true # Retryable writes do not have a state field.
                description: "The state of the most recent durable transaction on the session"
