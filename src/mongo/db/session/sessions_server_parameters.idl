# Copyright (C) 2024-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# Server parameters for configuring the refresh of the session colelction.

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/db/basic_types.idl"

server_parameters:
    sessionWriteConcernTimeoutSystemMillis:
        description: Controls the write concern timeout (in milliseconds) for the refresh or removal of items from the session collection.
        set_at: [startup, runtime]
        cpp_vartype: AtomicWord<int>
        cpp_varname: gSessionWriteConcernTimeoutSystemMillis
        default: 60000
        validator:
            gte: 0
        redact: false

    sessionMaxBatchSize:
        description: >-
            Controls the maximum batch size (number of elements) for the sessions' refresh. 
            This batch size is chosen to ensure that we don't form requests larger than the 16mb limit. 
            Especially for refreshes, the updates we send include the full user name (user@db), and user
            names can be quite large (we enforce a max 10k limit for usernames used with sessions).
            At a default of 1000 elements, a 16mb payload gives us a budget of 16000 bytes per user, which we should
            comfortably be able to stay under, even with 10k user names. so we do not form requests larger than the 16mb limit.
        set_at: [startup, runtime]
        cpp_vartype: AtomicWord<int>
        cpp_varname: gSessionMaxBatchSize
        default: 1000
        validator:
            gte: 100
            lte: 10000
        redact: false
