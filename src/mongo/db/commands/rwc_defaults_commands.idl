# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#
global:
    cpp_namespace: "mongo"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/repl/read_concern_args.idl"
    - "mongo/db/read_write_concern_defaults.idl"
    - "mongo/db/write_concern_options.idl"

structs:
    GetDefaultRWConcernResponse:
        description: "Describes the response for the getDefaultRWConcern command"
        strict: false
        chained_structs:
            RWConcernDefault: RWConcernDefault
        fields:
            inMemory:
                description:
                    "Whether the value came from the in-memory cache or it reflects the
                    defaults which were persisted as of the time of invocation."
                optional: true
                type: bool
            localUpdateWallClockTime:
                description:
                    "The wallclock time of when the default read or write concern was
                    applied to the cache of the node, which returned the response. This
                    value is only informational and must not be used for any recency
                    comparisons."
                type: date

commands:
    setDefaultRWConcern:
        description: "Set the current read/write concern defaults (cluster-wide)"
        command_name: setDefaultRWConcern
        namespace: ignored
        api_version: ""
        fields:
            defaultReadConcern:
                description: "The new default read concern"
                type: ReadConcern
                optional: true
            defaultWriteConcern:
                description: "The new default write concern"
                type: WriteConcern
                optional: true

    getDefaultRWConcern:
        description: "Get the current read/write concern defaults being applied by this node"
        command_name: getDefaultRWConcern
        namespace: ignored
        api_version: ""
        fields:
            inMemory:
                type: bool
                description: "If true, return the locally cached read/write concern defaults"
                optional: true
