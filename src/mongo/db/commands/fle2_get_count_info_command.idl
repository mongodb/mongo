# Copyright (C) 2023-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    mod_visibility: private

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/crypto/fle_stats.idl"

structs:
    ESCPositionsPair:
        description: "A pair of non-anchor and anchor positions"
        strict: true
        fields:
            cpos:
                description: "non-anchor position"
                type: long
            apos:
                description: "anchor position"
                type: long

    ESCOptionalPositionsPair:
        description: "A pair of optional non-anchor and anchor positions"
        strict: true
        fields:
            cpos:
                description: "non-anchor position"
                type: long
                optional: true
            apos:
                description: "anchor position"
                type: long
                optional: true

    QECountInfoReplyTokens:
        description: "A tokens of ESC information"
        strict: true
        fields:
            t:
                description: "ESCTwiceDerivedTagToken"
                type: bindata_generic
                cpp_name: ESCTwiceDerivedTagToken
            c:
                description: "ESC count"
                type: long
                cpp_name: count
            td:
                description: "EDCDerivedFromDataTokenAndContentionFactorToken"
                type: bindata_generic
                cpp_name: EDCDerivedFromDataTokenAndContentionFactorToken
                optional: true
            spos:
                description: "positions returned from emuBinary"
                type: ESCOptionalPositionsPair
                cpp_name: SearchedPositions
                optional: true
            npos:
                description: "position pair retrieved from the null anchor"
                type: ESCPositionsPair
                cpp_name: NullAnchorPositions
                optional: true
            stats:
                description: "stats returned for compaction or cleanup algorithms"
                type: ECStats
                optional: true

    QECountInfoReplyTokenSet:
        description: "Array of tokens sets"
        strict: true
        fields:
            tokens: array<QECountInfoReplyTokens>

    QECountInfoRequestTokens:
        description: "A ESC token to lookup in ESC"
        strict: true
        fields:
            d:
                description: "EDCDerivedFromDataTokenAndContentionFactorToken"
                type: bindata_generic
                cpp_name: EDCDerivedFromDataTokenAndContentionFactorToken
                optional: true
            s:
                description: "ESCDerivedFromDataTokenAndContentionFactorToken"
                type: bindata_generic
                cpp_name: ESCDerivedFromDataTokenAndContentionFactorToken

    QECountInfoRequestTokenSet:
        description: An array of tag sets to lookup
        strict: true
        fields:
            tokens: array<QECountInfoRequestTokens>

    QECountInfosReply:
        description: "Reply from the {getQueryableEncryptionCountInfo: ...} command"
        # MongoS/Txn add fields to the reply we want to ignore
        strict: false
        is_command_reply: true
        fields:
            counts: array<QECountInfoReplyTokenSet>

enums:
    QECountInfoQueryType:
        description: "query types"
        type: string
        values:
            Insert: "insert"
            Query: "query"
            Compact: "compact"
            Cleanup: "cleanup"
            Padding: "padding"

commands:
    getQueryableEncryptionCountInfo:
        description: "Parser for the 'getQueryableEncryptionCountInfo' command"
        command_name: getQueryableEncryptionCountInfo
        api_version: ""
        namespace: concatenate_with_db
        strict: true
        reply_type: QECountInfosReply
        fields:
            tokens:
                description: "Array of tokens to fetch"
                type: array<QECountInfoRequestTokenSet>
            queryType:
                description: "Purpose of command, either for insert, query, compact, or cleanup"
                type: QECountInfoQueryType
