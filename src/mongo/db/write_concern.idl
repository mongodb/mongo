# Copyright (C) 2024-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#
global:
    cpp_namespace: "mongo"
    mod_visibility: pub
    cpp_includes:
        - "mongo/db/write_concern_idl.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/read_write_concern_provenance_base.idl"

types:
    writeConcernW:
        bson_serialization_type: any
        description: >-
            A string or integer representing the 'w' option in a document specifying write concern.
            See https://docs.mongodb.com/manual/reference/write-concern/"
        cpp_type: "mongo::WriteConcernW"
        serializer: "::mongo::serializeWriteConcernW"
        deserializer: "::mongo::deserializeWriteConcernW"
        is_view: false

    writeConcernWTimeout:
        bson_serialization_type: any
        description: >-
            An integer representing the 'wtimeout' option in a document specifying write concern.
            See https://docs.mongodb.com/manual/reference/write-concern/"
        cpp_type: std::int64_t
        deserializer: "::mongo::parseWTimeoutFromBSON"
        serializer: "::mongo::serializeWTimeout"
        is_view: false

structs:
    WriteConcernIdl:
        description:
            "An object representing a write concern document, used only for mapping to
            and from BSON."
        strict: true
        fields:
            w:
                type: writeConcernW
                cpp_name: writeConcernW
                optional: true
                stability: stable
            j:
                type: safeBool
                optional: true
                stability: stable
            wtimeout:
                type: writeConcernWTimeout
                default: 0
                stability: stable
            fsync:
                type: safeBool
                optional: true
                stability: stable
            # Fields with names wElectionId, wOpTime, and getLastError are accepted in the WriteConcern document for
            # backwards-compatibility reasons, but their values are entirely ignored.
            wElectionId:
                type: any
                ignore: true
                stability: stable
            wOpTime:
                type: any
                ignore: true
                stability: stable
            getLastError:
                type: any
                ignore: true
                stability: stable
            provenance:
                description: "The source for this provenance"
                cpp_name: source
                type: ReadWriteConcernProvenanceSource
                optional: true
                stability: stable
