# Copyright (C) 2025-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/admission/ingress_request_rate_limiter.h"
        - "mongo/db/server_options.h"

server_parameters:
    ingressRequestRateLimiterEnabled:
        description: Controls whether ingress request rate limiter mechanism is enabled.
        set_at: [startup, runtime]
        cpp_varname: gIngressRequestRateLimiterEnabled
        cpp_vartype: AtomicWord<bool>
        default: true
        redact: false

    ingressRequestAdmissionRatePerSec:
        description: "The number of new requests that will be admitted per second"
        set_at: [startup, runtime]
        cpp_varname: gIngressRequestRateLimiterRatePerSec
        cpp_vartype: Atomic<int32_t>
        on_update: IngressRequestRateLimiter::onUpdateAdmissionRatePerSec
        default:
            expr: std::numeric_limits<int32_t>::max()
        validator: {gte: 1}
        redact: false

    ingressRequestAdmissionBurstCapacitySecs:
        description: >-
            Describes how many seconds worth of unutilized rate limit can be stored away to admit
            additional ingress requests during periods where the rate limit is temporarily
            exceeded.
        set_at: [startup, runtime]
        cpp_varname: gIngressRequestRateLimiterBurstCapacitySecs
        cpp_vartype: Atomic<double>
        on_update: IngressRequestRateLimiter::onUpdateAdmissionBurstCapacitySecs
        default:
            expr: std::numeric_limits<double>::max()
        validator: {gt: 0}
        redact: false

    ingressRequestRateLimiterExemptions:
        description: "A document containing a list of CIDR ranges to be exempted from ingress request rate limiting."
        set_at: [startup, runtime]
        cpp_class:
            name: "IngressRequestRateLimiterExemptions"
            # Expects the payload to be an instance of `CIDRRangeListParameters`.
            override_set: true
        redact: false
