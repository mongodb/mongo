#    Copyright (C) 2018-present MongoDB, Inc.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the Server Side Public License, version 1,
#    as published by MongoDB, Inc.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    Server Side Public License for more details.
#
#    You should have received a copy of the Server Side Public License
#    along with this program. If not, see
#    <http://www.mongodb.com/licensing/server-side-public-license>.
#
#    As a special exception, the copyright holders give permission to link the
#    code of portions of this program with the OpenSSL library under certain
#    conditions as described in each individual source file and distribute
#    linked combinations including the program with the OpenSSL library. You
#    must comply with the Server Side Public License in all respects for
#    all of the code used other than as permitted herein. If you modify file(s)
#    with this exception, you may extend this exception to your version of the
#    file(s), but you are not obligated to do so. If you do not wish to do so,
#    delete this exception statement from your version. If you delete this
#    exception statement from all source files in the program, then also delete
#    it in the license file.
#

global:
    cpp_namespace: "mongo::test"
    cpp_includes:
        - "mongo/idl/server_parameter_with_storage_test.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/idl/server_parameter_with_storage_test_structs.idl"

server_parameters:
    stdIntPreallocated:
        set_at: [startup, runtime]
        description: "Standard anytime settable int declared elsewhere"
        cpp_varname: gStdIntPreallocated
        default: 11
        validator:
            callback: "validateOddSP"
            gt: 0
        on_update: "onUpdateStdIntPreallocated"
        redact: false

    stdIntDeclared:
        set_at: [startup, runtime]
        description: "Create a simple int value, and declare storage"
        cpp_vartype: AtomicWord<int>
        cpp_varname: gStdIntDeclared
        default: 42
        validator:
            gte: 0
            lt: 1000
        redact: false

    startupString:
        set_at: startup
        description: "Create a startup-only string, and declare storage"
        cpp_vartype: "std::string"
        cpp_varname: gStartupString
        redact: false

    runtimeBoostDouble:
        set_at: runtime
        description: "Create a runtime-only string, using boost::synchronized_value"
        cpp_vartype: "synchronized_value<double>"
        cpp_varname: gRuntimeBoostDouble
        redact: false

    startupStringRedacted:
        set_at: startup
        description: "Redacted param with storage"
        cpp_vartype: "std::string"
        cpp_varname: gStartupStringRedacted
        redact: true

    startupIntWithExpressions:
        set_at: startup
        description: "Use of c++ expressions in default and validators"
        cpp_vartype: "std::int32_t"
        cpp_varname: gStartupIntWithExpressions
        default: 100
        validator:
            gte: {expr: kStartupIntWithExpressionsMinimum, is_constexpr: false}
            lte: {expr: kStartupIntWithExpressionsMaximum, is_constexpr: true}
        redact: false

    "ugly complicated-name.sp":
        set_at: startup
        description: "Verify exported symbols are properly reformatted"
        cpp_vartype: bool
        cpp_varname: gUglyComplicatedNameSp
        default: true
        redact: false

    testClusterServerParameter:
        set_at: cluster
        description: "IDL-generated cluster server parameter"
        cpp_vartype: TestClusterParamStruct
        cpp_varname: clusterParamStorage
        validator:
            callback: "validateNonNegativeExpireAfterSeconds"
        on_update: "onUpdateTestClusterServerParameter"
        redact: false
        omit_in_ftdc: false

    storageIntDeprecated:
        set_at: [startup, runtime]
        description: "Server parameter with storage marked deprecated."
        cpp_vartype: AtomicWord<int>
        cpp_varname: gIntDeprecated
        default: 42
        validator:
            gte: 0
            lt: 1000
        redact: false
        is_deprecated: true
