# Copyright (C) 2020-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/client/read_preference_validators.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/client/hedging_mode.idl"

enums:
    ReadPreference:
        description: Enumeration representing Read Preference Modes
        type: string
        values:
            # Read from primary only. All operations produce an error (throw an exception where
            # applicable) if primary is unavailable. Cannot be combined with tags.
            PrimaryOnly: "primary"
            #
            # Read from primary if available, otherwise a secondary. Tags will only be applied in the
            # event that the primary is unavailable and a secondary is read from. In this event only
            # secondaries matching the tags provided would be read from.
            PrimaryPreferred: "primaryPreferred"
            #
            # Read from secondary if available, otherwise error.
            SecondaryOnly: "secondary"
            #
            # Read from a secondary if available, otherwise read from the primary.
            SecondaryPreferred: "secondaryPreferred"
            #
            # Read from any member.
            Nearest: "nearest"

structs:
    ReadPreferenceIdl:
        description:
            "An object representing a read preference document, used only for mapping to
            and from BSON."
        strict: false
        fields:
            mode:
                description: Read preference mode.
                type: ReadPreference
            tags:
                description: List of tags requested by $readPreference.
                type: array
                optional: true
            hedge:
                description: Hedging mode determines whether or not hedging is enabled.
                type: HedgingMode
                optional: true
            maxStalenessSeconds:
                description: Specifies a maximum replication lag for reads from secondaries.
                type: safeInt64
                optional: true
                validator:
                    callback: validateMaxStalenessSecondsExternal
            $_isPretargeted:
                description:
                    "Used by the replica set endpoint in sharding to mark commands that it
                    forces to go through the router as needing to target the local mongod."
                cpp_name: isPretargeted
                type: bool
                optional: true
