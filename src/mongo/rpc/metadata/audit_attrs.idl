# Copyright (C) 2025-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo::rpc"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/auth/auth_types.idl"
    - "mongo/util/net/hostandport.idl"

types:
    AuditClientAttrs:
        description: "Container type for all per-operation client information needed for auditing"
        bson_serialization_type: object
        cpp_type: AuditClientAttrs
        serializer: "mongo::rpc::AuditClientAttrs::toBSON"
        deserializer: "mongo::rpc::AuditClientAttrs"
        # Deserializer uses getOwned.
        is_view: false

    AuditUserAttrs:
        description: "Container for per-operation user information for auditing."
        cpp_type: rpc::AuditUserAttrs
        bson_serialization_type: object
        serializer: "mongo::rpc::AuditUserAttrs::toBSON"
        deserializer: "mongo::rpc::AuditUserAttrs"
        # No view members.
        is_view: false

structs:
    AuditUserAttrsBase:
        description: "Stores per-operation user information needed for auditing."
        strict: false
        fields:
            user:
                type: UserName
                description: "The username to audit"
                optional: false
            roles:
                type: array<RoleName>
                description: "Roles to audit"
                optional: false
            isImpersonating:
                type: bool
                description: "Whether impersonation is active"

    AuditClientAttrsBase:
        description: "Stores per-operation client information needed for auditing."
        strict: false
        fields:
            local:
                type: HostAndPort
                description: The local address.
                optional: false
            remote:
                type: HostAndPort
                description: The remote address.
                optional: false
            proxies:
                type: array<HostAndPort>
                description: "The intermediate load balancers or mongos addresses that the request passed through between 'remote' and 'local'"
                optional: false
            isImpersonating:
                type: bool
                description: "Set to true if the information came from $audit.$impersonatedClient"
