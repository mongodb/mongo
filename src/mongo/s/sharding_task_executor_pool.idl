# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/s/sharding_task_executor_pool_controller.h"
        - "mongo/executor/connection_pool.h"

server_parameters:
    ShardingTaskExecutorPoolMinSize:
        description: <-
            The minimum number of connections for each executor in the pool for the sharding grid.
        set_at: [startup, runtime]
        cpp_varname: "ShardingTaskExecutorPoolController::gParameters.minConnections"
        validator:
            gte: 0
        default: 1
        redact: false

    ShardingTaskExecutorPoolMaxSize:
        description: <-
            The maximum number of connections for each executor in the pool for the sharding grid.
        set_at: [startup, runtime]
        cpp_varname: "ShardingTaskExecutorPoolController::gParameters.maxConnections"
        validator:
            gte: 1
        default: 32767
        redact: false

    ShardingTaskExecutorPoolMaxConnecting:
        description: <-
            The maximum number of in-flight connections for each executor
            in the pool for the sharding grid.
        set_at: [startup, runtime]
        cpp_varname: "ShardingTaskExecutorPoolController::gParameters.maxConnecting"
        validator:
            gte: 1
        default: 2
        redact: false

    ShardingTaskExecutorPoolHostTimeoutMS:
        description: <-
            The timeout for dropping a host for each executor in the pool for the sharding grid.
        set_at: [startup, runtime]
        cpp_varname: "ShardingTaskExecutorPoolController::gParameters.hostTimeoutMS"
        validator:
            callback: "ShardingTaskExecutorPoolController::validateHostTimeout"
            gte: 1
        default: 300000 # 5mins
        redact: false

    ShardingTaskExecutorPoolRefreshRequirementMS:
        description: <-
            The timeout before a connection needs to be refreshed for each executor
            in the pool for the sharding grid.
        set_at: [startup, runtime]
        cpp_varname: "ShardingTaskExecutorPoolController::gParameters.toRefreshTimeoutMS"
        validator:
            gte: 1
        default: 60000 # 1min
        redact: false

    ShardingTaskExecutorPoolRefreshTimeoutMS:
        description: <-
            The timeout for refreshing a connection for each executor in the pool for the sharding grid.
        set_at: [startup, runtime]
        cpp_varname: "ShardingTaskExecutorPoolController::gParameters.pendingTimeoutMS"
        validator:
            callback: "ShardingTaskExecutorPoolController::validatePendingTimeout"
            gte: 1
        default: 20000 # 20secs
        redact: false

    ShardingTaskExecutorPoolReplicaSetMatching:
        description: <-
            Enables ReplicaSet member connection matching.
        set_at: [startup, runtime]
        cpp_varname: "ShardingTaskExecutorPoolController::gParameters.matchingStrategyString"
        on_update: "ShardingTaskExecutorPoolController::onUpdateMatchingStrategy"
        default: "automatic" # matchPrimaryNode on mongos; disabled on mongod
        redact: false

    ShardingTaskExecutorPoolMinSizeForConfigServers:
        description: <-
            Overrides ShardingTaskExecutorPoolMinSize for pools targeting config servers.
            Has no effect if set to -1 (the default).
        set_at: [startup, runtime]
        cpp_varname: "ShardingTaskExecutorPoolController::gParameters.minConnectionsForConfigServers"
        validator:
            gte: -1
        default: -1
        redact: false

    ShardingTaskExecutorPoolMaxSizeForConfigServers:
        description: <-
            Overrides ShardingTaskExecutorPoolMaxSize for pools targeting config servers.
            Has no effect if set to -1 (the default).
        set_at: [startup, runtime]
        cpp_varname: "ShardingTaskExecutorPoolController::gParameters.maxConnectionsForConfigServers"
        validator:
            gte: -1
        default: -1
        redact: false

    ShardingTaskExecutorPoolMaxQueueDepth:
        description: <-
            The maximum number of connection acquisition requests that an executor will queue before it begins
            rejecting further requests. A value of 0 indicates there is no limit to the size of the queue.
        set_at: [startup, runtime]
        cpp_varname: "ShardingTaskExecutorPoolController::gParameters.connectionRequestsMaxQueueDepth"
        validator:
            gte: 0
        default:
            {
                expr: "mongo::executor::ConnectionPool::kDefaultConnectionRequestsMaxQueueDepth",
            }
        redact: false

    ShadingTaskExecutorPoolBaseEstablishmentBackoffMS:
        description: <-
            The base backoff delay for connection establishment retries for each executor in the sharding pool.
            Actual retry delays are computed as an exponential backoff with jitter based on this value.
        set_at: [startup, runtime]
        cpp_varname: "ShardingTaskExecutorPoolController::gParameters.baseEstablishmentBackoffMS"
        validator:
            gte: 0
        default: 50 # 50 ms
        redact: false

    ShardingTaskExecutorPoolMaxEstablishmentBackoffMS:
        description: <-
            The maximum backoff delay for connection establishment retries for each executor in the sharding pool.
        set_at: [startup, runtime]
        cpp_varname: "ShardingTaskExecutorPoolController::gParameters.maxEstablishmentBackoffMS"
        validator:
            gte: 0
        default: 10000 # 10 secs
        redact: false
