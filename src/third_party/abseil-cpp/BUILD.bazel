# AUTO-GENERATED FILE DO NOT MANUALLY EDIT
# generated from the parse_libs_from_ninja.py script in scripts directory via `python ./parse_libs_from_ninja.py`
load("//bazel:mongo_src_rules.bzl", "mongo_cc_library")

package(default_visibility = ["//visibility:public"])

ABSEIL_HEADERS = [
    "dist/absl/algorithm/algorithm.h",
    "dist/absl/algorithm/container.h",
    "dist/absl/base/attributes.h",
    "dist/absl/base/call_once.h",
    "dist/absl/base/casts.h",
    "dist/absl/base/config.h",
    "dist/absl/base/const_init.h",
    "dist/absl/base/dynamic_annotations.h",
    "dist/absl/base/fast_type_id.h",
    "dist/absl/base/internal/atomic_hook.h",
    "dist/absl/base/internal/atomic_hook_test_helper.h",
    "dist/absl/base/internal/cycleclock.h",
    "dist/absl/base/internal/cycleclock_config.h",
    "dist/absl/base/internal/direct_mmap.h",
    "dist/absl/base/internal/dynamic_annotations.h",
    "dist/absl/base/internal/endian.h",
    "dist/absl/base/internal/errno_saver.h",
    "dist/absl/base/internal/exception_safety_testing.h",
    "dist/absl/base/internal/exception_testing.h",
    "dist/absl/base/internal/hide_ptr.h",
    "dist/absl/base/internal/identity.h",
    "dist/absl/base/internal/iterator_traits.h",
    "dist/absl/base/internal/iterator_traits_test_helper.h",
    "dist/absl/base/internal/low_level_alloc.h",
    "dist/absl/base/internal/low_level_scheduling.h",
    "dist/absl/base/internal/nullability_deprecated.h",
    "dist/absl/base/internal/per_thread_tls.h",
    "dist/absl/base/internal/poison.h",
    "dist/absl/base/internal/pretty_function.h",
    "dist/absl/base/internal/raw_logging.h",
    "dist/absl/base/internal/scheduling_mode.h",
    "dist/absl/base/internal/scoped_set_env.h",
    "dist/absl/base/internal/spinlock.h",
    "dist/absl/base/internal/spinlock_akaros.inc",
    "dist/absl/base/internal/spinlock_linux.inc",
    "dist/absl/base/internal/spinlock_posix.inc",
    "dist/absl/base/internal/spinlock_wait.h",
    "dist/absl/base/internal/spinlock_win32.inc",
    "dist/absl/base/internal/strerror.h",
    "dist/absl/base/internal/sysinfo.h",
    "dist/absl/base/internal/thread_identity.h",
    "dist/absl/base/internal/throw_delegate.h",
    "dist/absl/base/internal/tracing.h",
    "dist/absl/base/internal/tsan_mutex_interface.h",
    "dist/absl/base/internal/unaligned_access.h",
    "dist/absl/base/internal/unscaledcycleclock.h",
    "dist/absl/base/internal/unscaledcycleclock_config.h",
    "dist/absl/base/log_severity.h",
    "dist/absl/base/macros.h",
    "dist/absl/base/no_destructor.h",
    "dist/absl/base/nullability.h",
    "dist/absl/base/optimization.h",
    "dist/absl/base/options.h",
    "dist/absl/base/policy_checks.h",
    "dist/absl/base/port.h",
    "dist/absl/base/prefetch.h",
    "dist/absl/base/thread_annotations.h",
    "dist/absl/cleanup/cleanup.h",
    "dist/absl/cleanup/internal/cleanup.h",
    "dist/absl/container/btree_map.h",
    "dist/absl/container/btree_set.h",
    "dist/absl/container/btree_test.h",
    "dist/absl/container/fixed_array.h",
    "dist/absl/container/flat_hash_map.h",
    "dist/absl/container/flat_hash_set.h",
    "dist/absl/container/hash_container_defaults.h",
    "dist/absl/container/inlined_vector.h",
    "dist/absl/container/internal/btree.h",
    "dist/absl/container/internal/btree_container.h",
    "dist/absl/container/internal/common.h",
    "dist/absl/container/internal/common_policy_traits.h",
    "dist/absl/container/internal/compressed_tuple.h",
    "dist/absl/container/internal/container_memory.h",
    "dist/absl/container/internal/hash_function_defaults.h",
    "dist/absl/container/internal/hash_generator_testing.h",
    "dist/absl/container/internal/hash_policy_testing.h",
    "dist/absl/container/internal/hash_policy_traits.h",
    "dist/absl/container/internal/hashtable_control_bytes.h",
    "dist/absl/container/internal/hashtable_debug.h",
    "dist/absl/container/internal/hashtable_debug_hooks.h",
    "dist/absl/container/internal/hashtablez_sampler.h",
    "dist/absl/container/internal/inlined_vector.h",
    "dist/absl/container/internal/layout.h",
    "dist/absl/container/internal/node_slot_policy.h",
    "dist/absl/container/internal/raw_hash_map.h",
    "dist/absl/container/internal/raw_hash_set.h",
    "dist/absl/container/internal/raw_hash_set_resize_impl.h",
    "dist/absl/container/internal/test_allocator.h",
    "dist/absl/container/internal/test_instance_tracker.h",
    "dist/absl/container/internal/tracked.h",
    "dist/absl/container/internal/unordered_map_constructor_test.h",
    "dist/absl/container/internal/unordered_map_lookup_test.h",
    "dist/absl/container/internal/unordered_map_members_test.h",
    "dist/absl/container/internal/unordered_map_modifiers_test.h",
    "dist/absl/container/internal/unordered_set_constructor_test.h",
    "dist/absl/container/internal/unordered_set_lookup_test.h",
    "dist/absl/container/internal/unordered_set_members_test.h",
    "dist/absl/container/internal/unordered_set_modifiers_test.h",
    "dist/absl/container/node_hash_map.h",
    "dist/absl/container/node_hash_set.h",
    "dist/absl/crc/crc32c.h",
    "dist/absl/crc/internal/cpu_detect.h",
    "dist/absl/crc/internal/crc.h",
    "dist/absl/crc/internal/crc32_x86_arm_combined_simd.h",
    "dist/absl/crc/internal/crc32c.h",
    "dist/absl/crc/internal/crc32c_inline.h",
    "dist/absl/crc/internal/crc_cord_state.h",
    "dist/absl/crc/internal/crc_internal.h",
    "dist/absl/crc/internal/crc_memcpy.h",
    "dist/absl/crc/internal/non_temporal_arm_intrinsics.h",
    "dist/absl/crc/internal/non_temporal_memcpy.h",
    "dist/absl/debugging/failure_signal_handler.h",
    "dist/absl/debugging/internal/address_is_readable.h",
    "dist/absl/debugging/internal/addresses.h",
    "dist/absl/debugging/internal/bounded_utf8_length_sequence.h",
    "dist/absl/debugging/internal/decode_rust_punycode.h",
    "dist/absl/debugging/internal/demangle.h",
    "dist/absl/debugging/internal/demangle_rust.h",
    "dist/absl/debugging/internal/elf_mem_image.h",
    "dist/absl/debugging/internal/examine_stack.h",
    "dist/absl/debugging/internal/stack_consumption.h",
    "dist/absl/debugging/internal/stacktrace_aarch64-inl.inc",
    "dist/absl/debugging/internal/stacktrace_arm-inl.inc",
    "dist/absl/debugging/internal/stacktrace_config.h",
    "dist/absl/debugging/internal/stacktrace_generic-inl.inc",
    "dist/absl/debugging/internal/stacktrace_powerpc-inl.inc",
    "dist/absl/debugging/internal/stacktrace_riscv-inl.inc",
    "dist/absl/debugging/internal/stacktrace_unimplemented-inl.inc",
    "dist/absl/debugging/internal/stacktrace_win32-inl.inc",
    "dist/absl/debugging/internal/stacktrace_x86-inl.inc",
    "dist/absl/debugging/internal/symbolize.h",
    "dist/absl/debugging/internal/utf8_for_code_point.h",
    "dist/absl/debugging/internal/vdso_support.h",
    "dist/absl/debugging/leak_check.h",
    "dist/absl/debugging/stacktrace.h",
    "dist/absl/debugging/symbolize.h",
    "dist/absl/debugging/symbolize_darwin.inc",
    "dist/absl/debugging/symbolize_elf.inc",
    "dist/absl/debugging/symbolize_emscripten.inc",
    "dist/absl/debugging/symbolize_unimplemented.inc",
    "dist/absl/debugging/symbolize_win32.inc",
    "dist/absl/flags/commandlineflag.h",
    "dist/absl/flags/config.h",
    "dist/absl/flags/declare.h",
    "dist/absl/flags/flag.h",
    "dist/absl/flags/internal/commandlineflag.h",
    "dist/absl/flags/internal/flag.h",
    "dist/absl/flags/internal/parse.h",
    "dist/absl/flags/internal/path_util.h",
    "dist/absl/flags/internal/private_handle_accessor.h",
    "dist/absl/flags/internal/program_name.h",
    "dist/absl/flags/internal/registry.h",
    "dist/absl/flags/internal/sequence_lock.h",
    "dist/absl/flags/internal/usage.h",
    "dist/absl/flags/marshalling.h",
    "dist/absl/flags/parse.h",
    "dist/absl/flags/reflection.h",
    "dist/absl/flags/usage.h",
    "dist/absl/flags/usage_config.h",
    "dist/absl/functional/any_invocable.h",
    "dist/absl/functional/bind_front.h",
    "dist/absl/functional/function_ref.h",
    "dist/absl/functional/internal/any_invocable.h",
    "dist/absl/functional/internal/front_binder.h",
    "dist/absl/functional/internal/function_ref.h",
    "dist/absl/functional/overload.h",
    "dist/absl/hash/hash.h",
    "dist/absl/hash/hash_testing.h",
    "dist/absl/hash/internal/city.h",
    "dist/absl/hash/internal/hash.h",
    "dist/absl/hash/internal/hash_test.h",
    "dist/absl/hash/internal/low_level_hash.h",
    "dist/absl/hash/internal/spy_hash_state.h",
    "dist/absl/hash/internal/weakly_mixed_integer.h",
    "dist/absl/log/absl_check.h",
    "dist/absl/log/absl_log.h",
    "dist/absl/log/absl_vlog_is_on.h",
    "dist/absl/log/log_basic_test_impl.inc",
    "dist/absl/log/check.h",
    "dist/absl/log/check_test_impl.inc",
    "dist/absl/log/die_if_null.h",
    "dist/absl/log/flags.h",
    "dist/absl/log/globals.h",
    "dist/absl/log/initialize.h",
    "dist/absl/log/internal/append_truncated.h",
    "dist/absl/log/internal/check_impl.h",
    "dist/absl/log/internal/check_op.h",
    "dist/absl/log/internal/conditions.h",
    "dist/absl/log/internal/config.h",
    "dist/absl/log/internal/flags.h",
    "dist/absl/log/internal/fnmatch.h",
    "dist/absl/log/internal/globals.h",
    "dist/absl/log/internal/log_format.h",
    "dist/absl/log/internal/log_impl.h",
    "dist/absl/log/internal/log_message.h",
    "dist/absl/log/internal/log_sink_set.h",
    "dist/absl/log/internal/nullguard.h",
    "dist/absl/log/internal/nullstream.h",
    "dist/absl/log/internal/proto.h",
    "dist/absl/log/internal/strip.h",
    "dist/absl/log/internal/structured.h",
    "dist/absl/log/internal/structured_proto.h",
    "dist/absl/log/internal/test_actions.h",
    "dist/absl/log/internal/test_helpers.h",
    "dist/absl/log/internal/test_matchers.h",
    "dist/absl/log/internal/vlog_config.h",
    "dist/absl/log/internal/voidify.h",
    "dist/absl/log/log.h",
    "dist/absl/log/log_entry.h",
    "dist/absl/log/log_sink.h",
    "dist/absl/log/log_sink_registry.h",
    "dist/absl/log/log_streamer.h",
    "dist/absl/log/scoped_mock_log.h",
    "dist/absl/log/structured.h",
    "dist/absl/log/vlog_is_on.h",
    "dist/absl/memory/memory.h",
    "dist/absl/meta/type_traits.h",
    "dist/absl/numeric/bits.h",
    "dist/absl/numeric/int128.h",
    "dist/absl/numeric/int128_have_intrinsic.inc",
    "dist/absl/numeric/int128_no_intrinsic.inc",
    "dist/absl/numeric/internal/bits.h",
    "dist/absl/numeric/internal/representation.h",
    "dist/absl/profiling/internal/exponential_biased.h",
    "dist/absl/profiling/internal/periodic_sampler.h",
    "dist/absl/profiling/internal/sample_recorder.h",
    "dist/absl/random/bernoulli_distribution.h",
    "dist/absl/random/beta_distribution.h",
    "dist/absl/random/bit_gen_ref.h",
    "dist/absl/random/discrete_distribution.h",
    "dist/absl/random/distributions.h",
    "dist/absl/random/exponential_distribution.h",
    "dist/absl/random/gaussian_distribution.h",
    "dist/absl/random/internal/chi_square.h",
    "dist/absl/random/internal/distribution_caller.h",
    "dist/absl/random/internal/distribution_test_util.h",
    "dist/absl/random/internal/entropy_pool.h",
    "dist/absl/random/internal/explicit_seed_seq.h",
    "dist/absl/random/internal/fast_uniform_bits.h",
    "dist/absl/random/internal/fastmath.h",
    "dist/absl/random/internal/generate_real.h",
    "dist/absl/random/internal/iostream_state_saver.h",
    "dist/absl/random/internal/mock_helpers.h",
    "dist/absl/random/internal/mock_overload_set.h",
    "dist/absl/random/internal/mock_validators.h",
    "dist/absl/random/internal/nanobenchmark.h",
    "dist/absl/random/internal/nonsecure_base.h",
    "dist/absl/random/internal/pcg_engine.h",
    "dist/absl/random/internal/platform.h",
    "dist/absl/random/internal/randen.h",
    "dist/absl/random/internal/randen_detect.h",
    "dist/absl/random/internal/randen_engine.h",
    "dist/absl/random/internal/randen_hwaes.h",
    "dist/absl/random/internal/randen_slow.h",
    "dist/absl/random/internal/randen_traits.h",
    "dist/absl/random/internal/salted_seed_seq.h",
    "dist/absl/random/internal/seed_material.h",
    "dist/absl/random/internal/sequence_urbg.h",
    "dist/absl/random/internal/traits.h",
    "dist/absl/random/internal/uniform_helper.h",
    "dist/absl/random/internal/wide_multiply.h",
    "dist/absl/random/log_uniform_int_distribution.h",
    "dist/absl/random/mock_distributions.h",
    "dist/absl/random/mocking_bit_gen.h",
    "dist/absl/random/poisson_distribution.h",
    "dist/absl/random/random.h",
    "dist/absl/random/seed_gen_exception.h",
    "dist/absl/random/seed_sequences.h",
    "dist/absl/random/uniform_int_distribution.h",
    "dist/absl/random/uniform_real_distribution.h",
    "dist/absl/random/zipf_distribution.h",
    "dist/absl/status/internal/status_internal.h",
    "dist/absl/status/internal/status_matchers.h",
    "dist/absl/status/internal/statusor_internal.h",
    "dist/absl/status/status.h",
    "dist/absl/status/status_matchers.h",
    "dist/absl/status/status_payload_printer.h",
    "dist/absl/status/statusor.h",
    "dist/absl/strings/ascii.h",
    "dist/absl/strings/charconv.h",
    "dist/absl/strings/charset.h",
    "dist/absl/strings/cord.h",
    "dist/absl/strings/cord_analysis.h",
    "dist/absl/strings/cord_buffer.h",
    "dist/absl/strings/cord_test_helpers.h",
    "dist/absl/strings/cordz_test_helpers.h",
    "dist/absl/strings/escaping.h",
    "dist/absl/strings/has_absl_stringify.h",
    "dist/absl/strings/has_ostream_operator.h",
    "dist/absl/strings/internal/charconv_bigint.h",
    "dist/absl/strings/internal/charconv_parse.h",
    "dist/absl/strings/internal/cord_data_edge.h",
    "dist/absl/strings/internal/cord_internal.h",
    "dist/absl/strings/internal/cord_rep_btree.h",
    "dist/absl/strings/internal/cord_rep_btree_navigator.h",
    "dist/absl/strings/internal/cord_rep_btree_reader.h",
    "dist/absl/strings/internal/cord_rep_consume.h",
    "dist/absl/strings/internal/cord_rep_crc.h",
    "dist/absl/strings/internal/cord_rep_flat.h",
    "dist/absl/strings/internal/cord_rep_test_util.h",
    "dist/absl/strings/internal/cordz_functions.h",
    "dist/absl/strings/internal/cordz_handle.h",
    "dist/absl/strings/internal/cordz_info.h",
    "dist/absl/strings/internal/cordz_sample_token.h",
    "dist/absl/strings/internal/cordz_statistics.h",
    "dist/absl/strings/internal/cordz_update_scope.h",
    "dist/absl/strings/internal/cordz_update_tracker.h",
    "dist/absl/strings/internal/damerau_levenshtein_distance.h",
    "dist/absl/strings/internal/escaping.h",
    "dist/absl/strings/internal/escaping_test_common.h",
    "dist/absl/strings/internal/memutil.h",
    "dist/absl/strings/internal/numbers_test_common.h",
    "dist/absl/strings/internal/ostringstream.h",
    "dist/absl/strings/internal/pow10_helper.h",
    "dist/absl/strings/internal/resize_uninitialized.h",
    "dist/absl/strings/internal/stl_type_traits.h",
    "dist/absl/strings/internal/str_format/arg.h",
    "dist/absl/strings/internal/str_format/bind.h",
    "dist/absl/strings/internal/str_format/checker.h",
    "dist/absl/strings/internal/str_format/constexpr_parser.h",
    "dist/absl/strings/internal/str_format/extension.h",
    "dist/absl/strings/internal/str_format/float_conversion.h",
    "dist/absl/strings/internal/str_format/output.h",
    "dist/absl/strings/internal/str_format/parser.h",
    "dist/absl/strings/internal/str_join_internal.h",
    "dist/absl/strings/internal/str_split_internal.h",
    "dist/absl/strings/internal/string_constant.h",
    "dist/absl/strings/internal/stringify_sink.h",
    "dist/absl/strings/internal/utf8.h",
    "dist/absl/strings/match.h",
    "dist/absl/strings/numbers.h",
    "dist/absl/strings/str_cat.h",
    "dist/absl/strings/str_format.h",
    "dist/absl/strings/str_join.h",
    "dist/absl/strings/str_replace.h",
    "dist/absl/strings/str_split.h",
    "dist/absl/strings/string_view.h",
    "dist/absl/strings/strip.h",
    "dist/absl/strings/substitute.h",
    "dist/absl/synchronization/barrier.h",
    "dist/absl/synchronization/blocking_counter.h",
    "dist/absl/synchronization/internal/create_thread_identity.h",
    "dist/absl/synchronization/internal/futex.h",
    "dist/absl/synchronization/internal/futex_waiter.h",
    "dist/absl/synchronization/internal/graphcycles.h",
    "dist/absl/synchronization/internal/kernel_timeout.h",
    "dist/absl/synchronization/internal/per_thread_sem.h",
    "dist/absl/synchronization/internal/pthread_waiter.h",
    "dist/absl/synchronization/internal/sem_waiter.h",
    "dist/absl/synchronization/internal/stdcpp_waiter.h",
    "dist/absl/synchronization/internal/thread_pool.h",
    "dist/absl/synchronization/internal/waiter.h",
    "dist/absl/synchronization/internal/waiter_base.h",
    "dist/absl/synchronization/internal/win32_waiter.h",
    "dist/absl/synchronization/mutex.h",
    "dist/absl/synchronization/notification.h",
    "dist/absl/time/civil_time.h",
    "dist/absl/time/clock.h",
    "dist/absl/time/internal/cctz/include/cctz/civil_time.h",
    "dist/absl/time/internal/cctz/include/cctz/civil_time_detail.h",
    "dist/absl/time/internal/cctz/include/cctz/time_zone.h",
    "dist/absl/time/internal/cctz/include/cctz/zone_info_source.h",
    "dist/absl/time/internal/cctz/src/time_zone_fixed.h",
    "dist/absl/time/internal/cctz/src/time_zone_if.h",
    "dist/absl/time/internal/cctz/src/time_zone_impl.h",
    "dist/absl/time/internal/cctz/src/time_zone_info.h",
    "dist/absl/time/internal/cctz/src/time_zone_libc.h",
    "dist/absl/time/internal/cctz/src/time_zone_posix.h",
    "dist/absl/time/internal/cctz/src/tzfile.h",
    "dist/absl/time/internal/get_current_time_chrono.inc",
    "dist/absl/time/internal/get_current_time_posix.inc",
    "dist/absl/time/internal/test_util.h",
    "dist/absl/time/time.h",
    "dist/absl/types/any.h",
    "dist/absl/types/compare.h",
    "dist/absl/types/internal/span.h",
    "dist/absl/types/optional.h",
    "dist/absl/types/span.h",
    "dist/absl/types/variant.h",
    "dist/absl/utility/utility.h",
]

mongo_cc_library(
    name = "absl_local_repo_deps",
    header_deps = select({
        "//bazel/config:build_grpc_enabled": [
            "@com_google_absl//absl/algorithm:algorithm",
            "@com_google_absl//absl/algorithm:container",
            "@com_google_absl//absl/base:base",
            "@com_google_absl//absl/base:config",
            "@com_google_absl//absl/base:core_headers",
            "@com_google_absl//absl/base:dynamic_annotations",
            "@com_google_absl//absl/base:log_severity",
            "@com_google_absl//absl/base:malloc_internal",
            "@com_google_absl//absl/base:nullability",
            "@com_google_absl//absl/base:prefetch",
            "@com_google_absl//absl/cleanup:cleanup",
            "@com_google_absl//absl/cleanup:cleanup_internal",
            "@com_google_absl//absl/container:btree",
            "@com_google_absl//absl/container:common",
            "@com_google_absl//absl/container:compressed_tuple",
            "@com_google_absl//absl/container:container_memory",
            "@com_google_absl//absl/container:fixed_array",
            "@com_google_absl//absl/container:flat_hash_map",
            "@com_google_absl//absl/container:flat_hash_set",
            "@com_google_absl//absl/container:hash_policy_traits",
            "@com_google_absl//absl/container:hashtable_debug",
            "@com_google_absl//absl/container:hashtable_debug_hooks",
            "@com_google_absl//absl/container:hashtablez_sampler",
            "@com_google_absl//absl/container:inlined_vector",
            "@com_google_absl//absl/container:inlined_vector_internal",
            "@com_google_absl//absl/container:layout",
            "@com_google_absl//absl/container:node_hash_map",
            "@com_google_absl//absl/container:node_hash_set",
            "@com_google_absl//absl/container:node_slot_policy",
            "@com_google_absl//absl/container:raw_hash_map",
            "@com_google_absl//absl/container:raw_hash_set",
            "@com_google_absl//absl/crc:crc32c",
            "@com_google_absl//absl/debugging:failure_signal_handler",
            "@com_google_absl//absl/debugging:leak_check",
            "@com_google_absl//absl/debugging:stacktrace",
            "@com_google_absl//absl/debugging:symbolize",
            "@com_google_absl//absl/flags:commandlineflag",
            "@com_google_absl//absl/flags:config",
            "@com_google_absl//absl/flags:flag",
            "@com_google_absl//absl/flags:marshalling",
            "@com_google_absl//absl/flags:parse",
            "@com_google_absl//absl/flags:reflection",
            "@com_google_absl//absl/flags:usage",
            "@com_google_absl//absl/functional:any_invocable",
            "@com_google_absl//absl/functional:bind_front",
            "@com_google_absl//absl/functional:function_ref",
            "@com_google_absl//absl/hash:city",
            "@com_google_absl//absl/hash:hash",
            "@com_google_absl//absl/log:absl_check",
            "@com_google_absl//absl/log:absl_log",
            "@com_google_absl//absl/log:check",
            "@com_google_absl//absl/log:die_if_null",
            "@com_google_absl//absl/log:flags",
            "@com_google_absl//absl/log:globals",
            "@com_google_absl//absl/log:initialize",
            "@com_google_absl//absl/log:log",
            "@com_google_absl//absl/log:log_entry",
            "@com_google_absl//absl/log:log_sink",
            "@com_google_absl//absl/log:log_sink_registry",
            "@com_google_absl//absl/log:log_streamer",
            "@com_google_absl//absl/log:structured",
            "@com_google_absl//absl/memory:memory",
            "@com_google_absl//absl/meta:type_traits",
            "@com_google_absl//absl/numeric:bits",
            "@com_google_absl//absl/numeric:int128",
            "@com_google_absl//absl/numeric:representation",
            "@com_google_absl//absl/random:bit_gen_ref",
            "@com_google_absl//absl/random:distributions",
            "@com_google_absl//absl/random:random",
            "@com_google_absl//absl/random:seed_gen_exception",
            "@com_google_absl//absl/random:seed_sequences",
            "@com_google_absl//absl/status:status",
            "@com_google_absl//absl/status:statusor",
            "@com_google_absl//absl/strings:cord",
            "@com_google_absl//absl/strings:internal",
            "@com_google_absl//absl/strings:str_format",
            "@com_google_absl//absl/strings:string_view",
            "@com_google_absl//absl/strings:strings",
            "@com_google_absl//absl/synchronization:synchronization",
            "@com_google_absl//absl/time:time",
            "@com_google_absl//absl/time/internal/cctz:civil_time",
            "@com_google_absl//absl/time/internal/cctz:time_zone",
            "@com_google_absl//absl/types:any",
            "@com_google_absl//absl/types:compare",
            "@com_google_absl//absl/types:optional",
            "@com_google_absl//absl/types:span",
            "@com_google_absl//absl/types:variant",
            "@com_google_absl//absl/utility:utility",
        ],
        "//conditions:default": [],
    }),
)

ABSEIL_SKIP_GLOBAL_DEPS = [
    # This is a globally injected dependency.
    # Skip depending on all globally injected dependencies to avoid circular dependencies.
    "allocator",
    "libunwind",
]

# absl_strerror added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_strerror",
    srcs = [
        "dist/absl/base/internal/strerror.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
)

# absl_scoped_set_env added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_scoped_set_env",
    srcs = [
        "dist/absl/base/internal/scoped_set_env.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_log_severity",
        ":absl_raw_logging_internal",
    ],
)

# absl_spinlock_wait is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_spinlock_wait",
    srcs = [
        "dist/absl/base/internal/spinlock_wait.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
)

# absl_log_severity is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_log_severity",
    srcs = [
        "dist/absl/base/log_severity.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
)

# absl_base is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_base",
    srcs = [
        "dist/absl/base/internal/cycleclock.cc",
        "dist/absl/base/internal/spinlock.cc",
        "dist/absl/base/internal/sysinfo.cc",
        "dist/absl/base/internal/thread_identity.cc",
        "dist/absl/base/internal/unscaledcycleclock.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    copts = select({
        "//bazel/config:ppc_or_s390x": ["-Wno-sign-conversion"],
        "//conditions:default": [],
    }),
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
    ],
)

# absl_raw_logging_internal is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_raw_logging_internal",
    srcs = [
        "dist/absl/base/internal/raw_logging.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_log_severity",
    ],
)

# absl_malloc_internal is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_malloc_internal",
    srcs = [
        "dist/absl/base/internal/low_level_alloc.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
    ],
)

# absl_throw_delegate is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_throw_delegate",
    srcs = [
        "dist/absl/base/internal/throw_delegate.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_log_severity",
        ":absl_raw_logging_internal",
    ],
)

# absl_raw_hash_set is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_raw_hash_set",
    srcs = [
        "dist/absl/container/internal/raw_hash_set.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_civil_time",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_exponential_biased",
        ":absl_graphcycles_internal",
        ":absl_hash",
        ":absl_hashtablez_sampler",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_low_level_hash",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_hashtablez_sampler is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_hashtablez_sampler",
    srcs = [
        "dist/absl/container/internal/hashtablez_sampler.cc",
        "dist/absl/container/internal/hashtablez_sampler_force_weak_definition.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_exponential_biased",
        ":absl_graphcycles_internal",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_crc_cord_state added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_crc_cord_state",
    srcs = [
        "dist/absl/crc/internal/crc_cord_state.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_crc32c",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_crc32c added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_crc32c",
    srcs = [
        "dist/absl/crc/crc32c.cc",
        "dist/absl/crc/internal/crc_memcpy_fallback.cc",
        "dist/absl/crc/internal/crc_memcpy_x86_arm_combined.cc",
        "dist/absl/crc/internal/crc_non_temporal_memcpy.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    copts = select({
        "//bazel/config:gcc_or_clang": ["-Wno-ignored-attributes"],
        "//conditions:default": [],
    }),
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_crc_internal added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_crc_internal",
    srcs = [
        "dist/absl/crc/internal/crc.cc",
        "dist/absl/crc/internal/crc_x86_arm_combined.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_crc_cpu_detect",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
    ],
)

# absl_crc_cpu_detect added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_crc_cpu_detect",
    srcs = [
        "dist/absl/crc/internal/cpu_detect.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
    ],
)

# absl_stacktrace is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_stacktrace",
    srcs = [
        "dist/absl/debugging/stacktrace.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    copts = select({
        "//bazel/config:ppc_or_s390x": ["-Wno-shorten-64-to-32"],
        "//conditions:default": [],
    }),
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_debugging_internal",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
    ],
)

# absl_examine_stack added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_examine_stack",
    srcs = [
        "dist/absl/debugging/internal/examine_stack.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_throw_delegate",
    ],
)

# absl_symbolize is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_symbolize",
    srcs = [
        "dist/absl/debugging/symbolize.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_debugging_internal is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_debugging_internal",
    srcs = [
        "dist/absl/debugging/internal/address_is_readable.cc",
        "dist/absl/debugging/internal/elf_mem_image.cc",
        "dist/absl/debugging/internal/vdso_support.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_log_severity",
        ":absl_raw_logging_internal",
    ],
)

# absl_demangle_internal is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_demangle_internal",
    srcs = [
        "dist/absl/debugging/internal/decode_rust_punycode.cc",
        "dist/absl/debugging/internal/demangle.cc",
        "dist/absl/debugging/internal/demangle_rust.cc",
        "dist/absl/debugging/internal/utf8_for_code_point.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
    ],
)

# absl_leak_check added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_leak_check",
    srcs = [
        "dist/absl/debugging/leak_check.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
)

# absl_failure_signal_handler added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_failure_signal_handler",
    srcs = [
        "dist/absl/debugging/failure_signal_handler.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_examine_stack",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_throw_delegate",
    ],
)

# absl_flags_config added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_flags_config",
    srcs = [
        "dist/absl/flags/usage_config.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_flags_program_name",
        ":absl_graphcycles_internal",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_flags_marshalling added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_flags_marshalling",
    srcs = [
        "dist/absl/flags/marshalling.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_flags_private_handle_accessor added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_flags_private_handle_accessor",
    srcs = [
        "dist/absl/flags/internal/private_handle_accessor.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_flags_commandlineflag",
        ":absl_flags_commandlineflag_internal",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_flags_commandlineflag_internal added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_flags_commandlineflag_internal",
    srcs = [
        "dist/absl/flags/internal/commandlineflag.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
)

# absl_flags_commandlineflag added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_flags_commandlineflag",
    srcs = [
        "dist/absl/flags/commandlineflag.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_flags_commandlineflag_internal",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_flags_program_name added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_flags_program_name",
    srcs = [
        "dist/absl/flags/internal/program_name.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_graphcycles_internal",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_flags_reflection added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_flags_reflection",
    srcs = [
        "dist/absl/flags/reflection.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_civil_time",
        ":absl_cord",
        ":absl_cord_internal",
        ":absl_cordz_functions",
        ":absl_cordz_handle",
        ":absl_cordz_info",
        ":absl_crc32c",
        ":absl_crc_cord_state",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_exponential_biased",
        ":absl_flags_commandlineflag",
        ":absl_flags_commandlineflag_internal",
        ":absl_flags_config",
        ":absl_flags_private_handle_accessor",
        ":absl_flags_program_name",
        ":absl_graphcycles_internal",
        ":absl_hash",
        ":absl_hashtablez_sampler",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_low_level_hash",
        ":absl_malloc_internal",
        ":absl_raw_hash_set",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_flags_internal added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_flags_internal",
    srcs = [
        "dist/absl/flags/internal/flag.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_flags_commandlineflag",
        ":absl_flags_commandlineflag_internal",
        ":absl_flags_config",
        ":absl_flags_marshalling",
        ":absl_flags_program_name",
        ":absl_graphcycles_internal",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_flags_usage added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_flags_usage",
    srcs = [
        "dist/absl/flags/usage.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_civil_time",
        ":absl_cord",
        ":absl_cord_internal",
        ":absl_cordz_functions",
        ":absl_cordz_handle",
        ":absl_cordz_info",
        ":absl_crc32c",
        ":absl_crc_cord_state",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_exponential_biased",
        ":absl_flags_commandlineflag",
        ":absl_flags_commandlineflag_internal",
        ":absl_flags_config",
        ":absl_flags_internal",
        ":absl_flags_marshalling",
        ":absl_flags_private_handle_accessor",
        ":absl_flags_program_name",
        ":absl_flags_reflection",
        ":absl_flags_usage_internal",
        ":absl_graphcycles_internal",
        ":absl_hash",
        ":absl_hashtablez_sampler",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_low_level_hash",
        ":absl_malloc_internal",
        ":absl_raw_hash_set",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_flags_usage_internal added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_flags_usage_internal",
    srcs = [
        "dist/absl/flags/internal/usage.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_civil_time",
        ":absl_cord",
        ":absl_cord_internal",
        ":absl_cordz_functions",
        ":absl_cordz_handle",
        ":absl_cordz_info",
        ":absl_crc32c",
        ":absl_crc_cord_state",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_exponential_biased",
        ":absl_flags_commandlineflag",
        ":absl_flags_commandlineflag_internal",
        ":absl_flags_config",
        ":absl_flags_internal",
        ":absl_flags_marshalling",
        ":absl_flags_private_handle_accessor",
        ":absl_flags_program_name",
        ":absl_flags_reflection",
        ":absl_graphcycles_internal",
        ":absl_hash",
        ":absl_hashtablez_sampler",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_low_level_hash",
        ":absl_malloc_internal",
        ":absl_raw_hash_set",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_flags_parse added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_flags_parse",
    srcs = [
        "dist/absl/flags/parse.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_civil_time",
        ":absl_cord",
        ":absl_cord_internal",
        ":absl_cordz_functions",
        ":absl_cordz_handle",
        ":absl_cordz_info",
        ":absl_crc32c",
        ":absl_crc_cord_state",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_exponential_biased",
        ":absl_flags_commandlineflag",
        ":absl_flags_commandlineflag_internal",
        ":absl_flags_config",
        ":absl_flags_internal",
        ":absl_flags_marshalling",
        ":absl_flags_private_handle_accessor",
        ":absl_flags_program_name",
        ":absl_flags_reflection",
        ":absl_flags_usage",
        ":absl_flags_usage_internal",
        ":absl_graphcycles_internal",
        ":absl_hash",
        ":absl_hashtablez_sampler",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_low_level_hash",
        ":absl_malloc_internal",
        ":absl_raw_hash_set",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_low_level_hash is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_low_level_hash",
    srcs = [
        "dist/absl/hash/internal/low_level_hash.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
    ],
)

# absl_city is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_city",
    srcs = [
        "dist/absl/hash/internal/city.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
    ],
)

# absl_hash is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_hash",
    srcs = [
        "dist/absl/hash/internal/hash.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_low_level_hash",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_die_if_null added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_die_if_null",
    srcs = [
        "dist/absl/log/die_if_null.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_civil_time",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_examine_stack",
        ":absl_graphcycles_internal",
        ":absl_hash",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_globals",
        ":absl_log_internal_conditions",
        ":absl_log_internal_format",
        ":absl_log_internal_globals",
        ":absl_log_internal_log_sink_set",
        ":absl_log_internal_message",
        ":absl_log_internal_nullguard",
        ":absl_log_internal_proto",
        ":absl_log_severity",
        ":absl_log_sink",
        ":absl_low_level_hash",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_strerror",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_log_internal_message added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_log_internal_message",
    srcs = [
        "dist/absl/log/internal/log_message.cc",
        "dist/absl/log/internal/structured_proto.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_civil_time",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_examine_stack",
        ":absl_graphcycles_internal",
        ":absl_hash",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_globals",
        ":absl_log_internal_format",
        ":absl_log_internal_globals",
        ":absl_log_internal_log_sink_set",
        ":absl_log_internal_nullguard",
        ":absl_log_internal_proto",
        ":absl_log_severity",
        ":absl_log_sink",
        ":absl_low_level_hash",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_strerror",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_log_internal_nullguard added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_log_internal_nullguard",
    srcs = [
        "dist/absl/log/internal/nullguard.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
)

# absl_log_internal_globals added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_log_internal_globals",
    srcs = [
        "dist/absl/log/internal/globals.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_log_internal_log_sink_set added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_log_internal_log_sink_set",
    srcs = [
        "dist/absl/log/internal/log_sink_set.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_civil_time",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_graphcycles_internal",
        ":absl_hash",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_globals",
        ":absl_log_internal_globals",
        ":absl_log_severity",
        ":absl_log_sink",
        ":absl_low_level_hash",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_log_internal_proto added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_log_internal_proto",
    srcs = [
        "dist/absl/log/internal/proto.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_log_internal_format added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_log_internal_format",
    srcs = [
        "dist/absl/log/internal/log_format.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_int128",
        ":absl_log_internal_globals",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_log_internal_check_op added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_log_internal_check_op",
    srcs = [
        "dist/absl/log/internal/check_op.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_civil_time",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_examine_stack",
        ":absl_graphcycles_internal",
        ":absl_hash",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_leak_check",
        ":absl_log_globals",
        ":absl_log_internal_format",
        ":absl_log_internal_globals",
        ":absl_log_internal_log_sink_set",
        ":absl_log_internal_message",
        ":absl_log_internal_nullguard",
        ":absl_log_internal_proto",
        ":absl_log_severity",
        ":absl_log_sink",
        ":absl_low_level_hash",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_strerror",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_log_internal_conditions added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_log_internal_conditions",
    srcs = [
        "dist/absl/log/internal/conditions.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
    ],
)

# absl_log_initialize added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_log_initialize",
    srcs = [
        "dist/absl/log/initialize.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_civil_time",
        ":absl_hash",
        ":absl_int128",
        ":absl_log_globals",
        ":absl_log_internal_globals",
        ":absl_log_severity",
        ":absl_low_level_hash",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_log_sink added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_log_sink",
    srcs = [
        "dist/absl/log/log_sink.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_log_globals added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_log_globals",
    srcs = [
        "dist/absl/log/globals.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_hash",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_low_level_hash",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_log_flags added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_log_flags",
    srcs = [
        "dist/absl/log/flags.cc",
        "dist/absl/log/internal/fnmatch.cc",
        "dist/absl/log/internal/vlog_config.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_city",
        ":absl_civil_time",
        ":absl_cord",
        ":absl_cord_internal",
        ":absl_cordz_functions",
        ":absl_cordz_handle",
        ":absl_cordz_info",
        ":absl_crc32c",
        ":absl_crc_cord_state",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_exponential_biased",
        ":absl_flags_commandlineflag",
        ":absl_flags_commandlineflag_internal",
        ":absl_flags_config",
        ":absl_flags_internal",
        ":absl_flags_marshalling",
        ":absl_flags_private_handle_accessor",
        ":absl_flags_program_name",
        ":absl_flags_reflection",
        ":absl_graphcycles_internal",
        ":absl_hash",
        ":absl_hashtablez_sampler",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_globals",
        ":absl_log_severity",
        ":absl_low_level_hash",
        ":absl_malloc_internal",
        ":absl_raw_hash_set",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_int128 is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_int128",
    srcs = [
        "dist/absl/numeric/int128.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
)

# absl_periodic_sampler added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_periodic_sampler",
    srcs = [
        "dist/absl/profiling/internal/periodic_sampler.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_exponential_biased",
    ],
)

# absl_exponential_biased is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_exponential_biased",
    srcs = [
        "dist/absl/profiling/internal/exponential_biased.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
)

# absl_random_internal_randen_hwaes is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_random_internal_randen_hwaes",
    srcs = [
        "dist/absl/random/internal/randen_detect.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_random_internal_platform",
        ":absl_random_internal_randen_hwaes_impl",
    ],
)

# absl_random_internal_seed_material is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_random_internal_seed_material",
    srcs = [
        "dist/absl/random/internal/seed_material.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_random_internal_randen_slow is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_random_internal_randen_slow",
    srcs = [
        "dist/absl/random/internal/randen_slow.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_random_internal_platform",
    ],
)

# absl_random_seed_gen_exception is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_random_seed_gen_exception",
    srcs = [
        "dist/absl/random/seed_gen_exception.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
)

# absl_random_distributions is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_random_distributions",
    srcs = [
        "dist/absl/random/discrete_distribution.cc",
        "dist/absl/random/gaussian_distribution.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_random_internal_randen_hwaes_impl is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_random_internal_randen_hwaes_impl",
    srcs = [
        "dist/absl/random/internal/randen_hwaes.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    copts = select({
        "//bazel/config:gcc_or_clang": [
            "-Wno-pass-failed",
        ],
        "//conditions:default": [],
    }) + select({
        "//bazel/config:ppc_or_s390x": [
            "-Wno-deprecate-lax-vec-conv-all",
        ],
        "//conditions:default": [],
    }),
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_random_internal_platform",
    ],
)

# absl_random_seed_sequences is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_random_seed_sequences",
    srcs = [
        "dist/absl/random/internal/entropy_pool.cc",
        "dist/absl/random/seed_sequences.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_random_internal_platform",
        ":absl_random_internal_randen",
        ":absl_random_internal_randen_hwaes",
        ":absl_random_internal_randen_hwaes_impl",
        ":absl_random_internal_randen_slow",
        ":absl_random_internal_seed_material",
        ":absl_random_seed_gen_exception",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_random_internal_randen is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_random_internal_randen",
    srcs = [
        "dist/absl/random/internal/randen.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_random_internal_platform",
        ":absl_random_internal_randen_hwaes",
        ":absl_random_internal_randen_hwaes_impl",
        ":absl_random_internal_randen_slow",
    ],
)

# absl_random_internal_distribution_test_util added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_random_internal_distribution_test_util",
    srcs = [
        "dist/absl/random/internal/chi_square.cc",
        "dist/absl/random/internal/distribution_test_util.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_random_internal_platform is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_random_internal_platform",
    srcs = [
        "dist/absl/random/internal/randen_round_keys.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
)

# absl_statusor is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_statusor",
    srcs = [
        "dist/absl/status/statusor.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_cord",
        ":absl_cord_internal",
        ":absl_cordz_functions",
        ":absl_cordz_handle",
        ":absl_cordz_info",
        ":absl_crc32c",
        ":absl_crc_cord_state",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_exponential_biased",
        ":absl_graphcycles_internal",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_status",
        ":absl_str_format_internal",
        ":absl_strerror",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_status is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_status",
    srcs = [
        "dist/absl/status/internal/status_internal.cc",
        "dist/absl/status/status.cc",
        "dist/absl/status/status_payload_printer.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_cord",
        ":absl_cord_internal",
        ":absl_cordz_functions",
        ":absl_cordz_handle",
        ":absl_cordz_info",
        ":absl_crc32c",
        ":absl_crc_cord_state",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_exponential_biased",
        ":absl_graphcycles_internal",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_leak_check",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_strerror",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_cord is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_cord",
    srcs = [
        "dist/absl/strings/cord.cc",
        "dist/absl/strings/cord_analysis.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_cord_internal",
        ":absl_cordz_functions",
        ":absl_cordz_handle",
        ":absl_cordz_info",
        ":absl_crc32c",
        ":absl_crc_cord_state",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_exponential_biased",
        ":absl_graphcycles_internal",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_string_view added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_string_view",
    srcs = [
        "dist/absl/strings/string_view.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_throw_delegate",
    ],
)

# absl_strings is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_strings",
    srcs = [
        "dist/absl/strings/ascii.cc",
        "dist/absl/strings/charconv.cc",
        "dist/absl/strings/escaping.cc",
        "dist/absl/strings/internal/charconv_bigint.cc",
        "dist/absl/strings/internal/charconv_parse.cc",
        "dist/absl/strings/internal/damerau_levenshtein_distance.cc",
        "dist/absl/strings/internal/memutil.cc",
        "dist/absl/strings/internal/stringify_sink.cc",
        "dist/absl/strings/match.cc",
        "dist/absl/strings/numbers.cc",
        "dist/absl/strings/str_cat.cc",
        "dist/absl/strings/str_replace.cc",
        "dist/absl/strings/str_split.cc",
        "dist/absl/strings/substitute.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    copts = select({
        "//bazel/config:compiler_type_gcc": ["-Wno-array-bounds"],
        "//conditions:default": [],
    }),
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_strings_internal is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_strings_internal",
    srcs = [
        "dist/absl/strings/internal/escaping.cc",
        "dist/absl/strings/internal/ostringstream.cc",
        "dist/absl/strings/internal/utf8.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
    ],
)

# absl_cordz_functions is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_cordz_functions",
    srcs = [
        "dist/absl/strings/internal/cordz_functions.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_exponential_biased",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
    ],
)

# absl_cordz_info is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_cordz_info",
    srcs = [
        "dist/absl/strings/internal/cordz_info.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_cord_internal",
        ":absl_cordz_functions",
        ":absl_cordz_handle",
        ":absl_crc32c",
        ":absl_crc_cord_state",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_exponential_biased",
        ":absl_graphcycles_internal",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_cord_internal is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_cord_internal",
    srcs = [
        "dist/absl/strings/internal/cord_internal.cc",
        "dist/absl/strings/internal/cord_rep_btree.cc",
        "dist/absl/strings/internal/cord_rep_btree_navigator.cc",
        "dist/absl/strings/internal/cord_rep_btree_reader.cc",
        "dist/absl/strings/internal/cord_rep_consume.cc",
        "dist/absl/strings/internal/cord_rep_crc.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_crc32c",
        ":absl_crc_cord_state",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_str_format_internal is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_str_format_internal",
    srcs = [
        "dist/absl/strings/internal/str_format/arg.cc",
        "dist/absl/strings/internal/str_format/bind.cc",
        "dist/absl/strings/internal/str_format/extension.cc",
        "dist/absl/strings/internal/str_format/float_conversion.cc",
        "dist/absl/strings/internal/str_format/output.cc",
        "dist/absl/strings/internal/str_format/parser.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
    ],
)

# absl_cordz_sample_token added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_cordz_sample_token",
    srcs = [
        "dist/absl/strings/internal/cordz_sample_token.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_cord_internal",
        ":absl_cordz_functions",
        ":absl_cordz_handle",
        ":absl_cordz_info",
        ":absl_crc32c",
        ":absl_crc_cord_state",
        ":absl_crc_cpu_detect",
        ":absl_crc_internal",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_exponential_biased",
        ":absl_graphcycles_internal",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_str_format_internal",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_cordz_handle is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_cordz_handle",
    srcs = [
        "dist/absl/strings/internal/cordz_handle.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_graphcycles_internal",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_synchronization",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_synchronization is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_synchronization",
    srcs = [
        "dist/absl/base/internal/tracing.cc",
        "dist/absl/synchronization/barrier.cc",
        "dist/absl/synchronization/blocking_counter.cc",
        "dist/absl/synchronization/internal/create_thread_identity.cc",
        "dist/absl/synchronization/internal/futex_waiter.cc",
        "dist/absl/synchronization/internal/per_thread_sem.cc",
        "dist/absl/synchronization/internal/pthread_waiter.cc",
        "dist/absl/synchronization/internal/sem_waiter.cc",
        "dist/absl/synchronization/internal/stdcpp_waiter.cc",
        "dist/absl/synchronization/internal/waiter_base.cc",
        "dist/absl/synchronization/internal/win32_waiter.cc",
        "dist/absl/synchronization/mutex.cc",
        "dist/absl/synchronization/notification.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_debugging_internal",
        ":absl_demangle_internal",
        ":absl_graphcycles_internal",
        ":absl_int128",
        ":absl_kernel_timeout_internal",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_stacktrace",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_symbolize",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_kernel_timeout_internal added as a dependency of other abseil libraries
mongo_cc_library(
    name = "absl_kernel_timeout_internal",
    srcs = [
        "dist/absl/synchronization/internal/kernel_timeout.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
        ":absl_time",
        ":absl_time_zone",
    ],
)

# absl_graphcycles_internal is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_graphcycles_internal",
    srcs = [
        "dist/absl/synchronization/internal/graphcycles.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_log_severity",
        ":absl_malloc_internal",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
    ],
)

# absl_time_zone is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_time_zone",
    srcs = [
        "dist/absl/time/internal/cctz/src/time_zone_fixed.cc",
        "dist/absl/time/internal/cctz/src/time_zone_format.cc",
        "dist/absl/time/internal/cctz/src/time_zone_if.cc",
        "dist/absl/time/internal/cctz/src/time_zone_impl.cc",
        "dist/absl/time/internal/cctz/src/time_zone_info.cc",
        "dist/absl/time/internal/cctz/src/time_zone_libc.cc",
        "dist/absl/time/internal/cctz/src/time_zone_lookup.cc",
        "dist/absl/time/internal/cctz/src/time_zone_posix.cc",
        "dist/absl/time/internal/cctz/src/zone_info_source.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
)

# absl_civil_time is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_civil_time",
    srcs = [
        "dist/absl/time/internal/cctz/src/civil_time_detail.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
)

# absl_time is an explicit dependency to the server build
mongo_cc_library(
    name = "absl_time",
    srcs = [
        "dist/absl/time/civil_time.cc",
        "dist/absl/time/clock.cc",
        "dist/absl/time/duration.cc",
        "dist/absl/time/format.cc",
        "dist/absl/time/time.cc",
    ],
    hdrs = ABSEIL_HEADERS,
    includes = ["dist"],
    skip_global_deps = ABSEIL_SKIP_GLOBAL_DEPS,
    deps = [
        ":absl_base",
        ":absl_civil_time",
        ":absl_int128",
        ":absl_log_severity",
        ":absl_raw_logging_internal",
        ":absl_spinlock_wait",
        ":absl_string_view",
        ":absl_strings",
        ":absl_strings_internal",
        ":absl_throw_delegate",
        ":absl_time_zone",
    ],
)
