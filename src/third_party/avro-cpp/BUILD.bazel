load("//bazel:mongo_src_rules.bzl", "mongo_cc_library", "mongo_cc_unit_test")

package(default_visibility = ["//visibility:public"])

TARGET_COMPATIBILITY = select({
    "//bazel/config:linux_aarch64": [],
    "//bazel/config:linux_x86_64": [],
    "//conditions:default": ["@platforms//:incompatible"],
})

mongo_cc_library(
    name = "avro-cpp",
    srcs = glob(
        [
            "dist/impl/*.cc",
            "dist/impl/parsing/*.cc",
            "dist/impl/json/*.cc",
        ],
        exclude = [
            "dist/impl/avrogencpp.cc",  # Code generator tool with heavy boost deps
        ],
    ) + [
        "//src/third_party/boost:headers",  # For boost headers
    ],
    hdrs = glob([
        "dist/include/avro/*.hh",
        "dist/include/avro/buffer/*.hh",
        "dist/include/avro/buffer/detail/*.hh",
        "dist/impl/json/*.hh",
        "dist/impl/parsing/*.hh",
    ]),
    copts = [
        "-DAVRO_SOURCE",
        # Disable warnings that might cause build failures
        "-Wno-unused-but-set-variable",
        "-Wno-implicit-fallthrough",
    ],
    includes = [
        "dist/impl",  # For impl internal headers
        "dist/impl/json",  # For json internal headers
        "dist/impl/parsing",  # For parsing internal headers
        "dist/include",
        "dist/include/avro",  # For relative includes in source files
        "dist/include/avro/buffer",  # For buffer detail headers
    ],
    target_compatible_with = TARGET_COMPATIBILITY,
    deps = [
        "//src/third_party/fmt",
        "//src/third_party/zlib",
        "//src/mongo/util:boost_assert_shim",  # Required when using boost headers
        "//src/third_party/boost:boost_program_options",  # For boost/program_options.hpp
        "//src/third_party/boost:boost_iostreams",  # For boost/iostreams/*
        # Note: Other boost headers (algorithm, any, utility, etc.) are header-only
        # and should be available through the boost libraries above
        # Note: Snappy and zstd are optional compression codecs
    ],
    # Optional: Add linkopts if needed
    # linkopts = [],
)

# test compilation for Avro C++ library
mongo_cc_unit_test(
    name = "avro_tests",
    srcs = ["test_compilation.cc"],
    tags = ["mongo_unittest_fourth_group"],
    target_compatible_with = TARGET_COMPATIBILITY,
    deps = [":avro-cpp"],
)
