/*-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 */

#ifndef __WIREDTIGER_CONFIG_H_
#define __WIREDTIGER_CONFIG_H_

/* Define to 1 to pause for debugger attach on failure. */
#cmakedefine HAVE_ATTACH 1

/* LZ4 support automatically loaded. */
#cmakedefine HAVE_BUILTIN_EXTENSION_LZ4 1

/* Snappy support automatically loaded. */
#cmakedefine HAVE_BUILTIN_EXTENSION_SNAPPY 1

/* ZLIB support automatically loaded. */
#cmakedefine HAVE_BUILTIN_EXTENSION_ZLIB 1

/* ZSTD support automatically loaded. */
#cmakedefine HAVE_BUILTIN_EXTENSION_ZSTD 1

/* IAA support automatically loaded. */
#cmakedefine HAVE_BUILTIN_EXTENSION_IAA 1

/* libsodium support automatically loaded. */
#cmakedefine HAVE_BUILTIN_EXTENSION_SODIUM 1

/* Define to 1 for diagnostic tests. */
#cmakedefine HAVE_DIAGNOSTIC 1

#cmakedefine HAVE_CALL_LOG 1

/* Define to 1 for ref tracking */
#cmakedefine HAVE_REF_TRACK 1

/* Define to 1 to remove full memory barriers on diagnostic yields. */
#cmakedefine NON_BARRIER_DIAGNOSTIC_YIELDS 0

/* Define to 1 for unit tests. */
#cmakedefine HAVE_UNITTEST 0

/*
 * Define to 1 to when measuring code coverage to make measurements more accurate, by switching code where needed,
 * for example from macros to inline functions.
 *
 * An #ifdef guard for CODE_COVERAGE_MEASUREMENT macro can be used as a temporary measure while evaluating the
 * performance of inline functions vs the original macros.
 *
 * Once inline functions have been validated as providing similar (or better) performance than the original macros
 * the macro versions can be removed and the #ifdef guard using CODE_COVERAGE_MEASUREMENT removed to make the inline
 * functions the only version.
 */
#cmakedefine CODE_COVERAGE_MEASUREMENT 0

/* define 1 to to switch code that exists in both inline function and macro versions to use the inline versions. */
#cmakedefine INLINE_FUNCTIONS_INSTEAD_OF_MACROS 0

/* 
 * Define to 1 for unit testing assertions. 
 * This overrides normal abort logic and should be used *only* when unit testing assertions.
 */
#cmakedefine HAVE_UNITTEST_ASSERTS 0

/* Define to 1 if you have the `fallocate' function. */
#cmakedefine HAVE_FALLOCATE 1

/* Define to 1 if you have the `fdatasync' function. */
#cmakedefine HAVE_FDATASYNC 1

/* Define to 1 if you have the `clock_gettime' function. */
#cmakedefine HAVE_CLOCK_GETTIME 1

/* Define to 1 if you have the `gettimeofday' function. */
#cmakedefine HAVE_GETTIMEOFDAY 1

/* Define to 1 if you have the `dl' library (-ldl). */
#cmakedefine HAVE_LIBDL 1

/* Define to 1 if you have the `stdc++' library (-lstdc++). */
#cmakedefine HAVE_LIBCXX 1

/* Define to 1 if you have the `accel-config' library (-laccel-config). */
#cmakedefine HAVE_LIBACCEL_CONFIG 1

/* Define to 1 if you have the `lz4' library (-llz4). */
#cmakedefine HAVE_LIBLZ4 1

/* Define to 1 if you have the `memkind' library (-lmemkind). */
#cmakedefine HAVE_LIBMEMKIND 1

/* Define to 1 if the user has explicitly enable memkind builds. */
#cmakedefine ENABLE_MEMKIND 1

/* Define to 1 if you have the `pthread' library (-lpthread). */
#cmakedefine HAVE_LIBPTHREAD 1

/* Define to 1 if you have the `rt' library (-lrt). */
#cmakedefine HAVE_LIBRT 1

/* Define to 1 if you have the `snappy' library (-lsnappy). */
#cmakedefine HAVE_LIBSNAPPY 1

/* Define to 1 if the user has set enable antithesis. */
#cmakedefine ENABLE_ANTITHESIS 1

/* Define to 1 if you have the `z' library (-lz). */
#cmakedefine HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#cmakedefine HAVE_LIBZSTD 1

/* Define to 1 if you have the `qpl' library (-lqpl). */
#cmakedefine HAVE_LIBQPL 1

/* Define to 1 if you have the `sodium' library (-lsodium). */
#cmakedefine HAVE_LIBSODIUM 1

/* Automatically set by the build system, turns on or off optional RCpc ARM instructions. */
#cmakedefine HAVE_RCPC 0

/* Define to 1 to disable any crc32 hardware support. */
#cmakedefine HAVE_NO_CRC32_HARDWARE

/* Define to 1 if you have the `posix_fadvise' function. */
#cmakedefine HAVE_POSIX_FADVISE 1

/* Define to 1 if you have the `posix_fallocate' function. */
#cmakedefine HAVE_POSIX_FALLOCATE 1

/* Define to 1 if you have the `posix_madvise' function. */
#cmakedefine HAVE_POSIX_MADVISE 1

/* Define to 1 if `posix_memalign' works. */
#cmakedefine HAVE_POSIX_MEMALIGN 1

/* Define to 1 if pthread condition variables support monotonic clocks. */
#cmakedefine HAVE_PTHREAD_COND_MONOTONIC 1;

/* Define to 1 if you have the `setrlimit' function. */
#cmakedefine HAVE_SETRLIMIT 1

/* Define to 1 if you have the `sync_file_range' function. */
#cmakedefine HAVE_SYNC_FILE_RANGE 1

/* Define to 1 if you have the `timer_create' function. */
#cmakedefine HAVE_TIMER_CREATE 1

/* Define to 1 if you have the <x86intrin.h> header file. */
#cmakedefine HAVE_X86INTRIN_H 1

/* Define to 1 if you have the <arm_neon.h> header file. */
#cmakedefine HAVE_ARM_NEON_INTRIN_H 1

/* Spinlock type from mutex.h. */
#cmakedefine SPINLOCK_TYPE @SPINLOCK_TYPE_CONFIG_VAR@

/* Define to 1 if the target system is big endian */
#cmakedefine WORDS_BIGENDIAN 1

/* Version number of package */
#define VERSION "@VERSION_MAJOR@.@VERSION_MINOR@.@VERSION_PATCH@"

/* Define to 1 to support standalone build. */
#cmakedefine WT_STANDALONE_BUILD 1

#ifndef _DARWIN_USE_64_BIT_INODE
# define _DARWIN_USE_64_BIT_INODE 1
#endif

#endif /* __WIREDTIGER_CONFIG_H_ */
