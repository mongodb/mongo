/*! @page cursors Cursors

Common operations in WiredTiger are performed using WT_CURSOR handles.
A cursor includes:

- a position within a data source
- getter/setters for key and value fields
- encoding of fields to store in the data source
- methods to navigate within and iterate through the data

See @subpage cursor_ops for a description of how to use cursors.

@section cursor_types Cursor types

@copydoc doc_cursor_types

See the following for more details:

- @subpage data_sources
- @ref metadata
- @ref cursor_log

@section cursors_eviction Cursors and Eviction

Cursor positions hold resources that can inhibit the eviction of memory
pages. If a cursor is active on a page being considered for eviction,
the eviction will defer until the cursor is moved or reset. To avoid
this and to keep resources freed in general, an application should call
WT_CURSOR::reset during times it does not need to keep the cursor
positioned.  A cursor that has been reset is not active and will not
inhibit eviction.

@section cursor_raw Raw mode

Cursors can be configured for raw mode by specifying the \c "raw" config
keyword to WT_SESSION::open_cursor.  In this mode, the methods
WT_CURSOR::get_key, WT_CURSOR::get_value, WT_CURSOR::set_key and
WT_CURSOR::set_value all take a single
WT_ITEM
in the variable-length
argument list instead of a separate argument for each column.

WT_ITEM structures do not need to be cleared before use.

For WT_CURSOR::get_key and WT_CURSOR::get_value in raw mode, the WT_ITEM
can be split into columns by calling WT_EXTENSION_API::struct_unpack
with the cursor's \c key_format or \c value_format, respectively.  For
WT_CURSOR::set_key and WT_CURSOR::set_value in raw mode, the WT_ITEM
should be equivalent to calling WT_EXTENSION_API::struct_pack for the
cursor's \c key_format or \c value_format, respectively.

WT_CURSOR::get_raw_key_value can be used to obtain both the key and value
in raw format in a single function call.

The @ex_ref{ex_schema.c} example creates a table where the value format is
\c "5sHq", where the initial string is the country, the short is a year,
and the long is a population.
The following example lists the table record
values, using raw mode:

@snippet ex_schema.c List the records in the table using raw mode.

@section metadata Reading WiredTiger Metadata

WiredTiger cursors provide access to data from a variety of sources.
One of these sources is the list of objects in the database.

To retrieve the list of database objects, open a cursor on the uri
<code>metadata:</code>.  Each returned key will be a database object and
each returned value will be the information stored in the metadata for
object named by the key.

For example:

@snippet ex_all.c Open a cursor on the metadata

To retrieve value strings that are valid arguments for calls to
WT_SESSION::create, open a cursor on <code>metadata:create</code>.

The metadata cursor is read-only, and the metadata cannot be modified.

*/
