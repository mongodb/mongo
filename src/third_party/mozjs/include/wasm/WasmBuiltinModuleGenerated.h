/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#ifndef wasm_WasmBuiltinModuleGenerated_h
#define wasm_WasmBuiltinModuleGenerated_h

/* This file is generated by wasm/GenerateBuiltinModules.py. Do not edit! */

#define FOR_EACH_BUILTIN_MODULE_FUNC(M) \
    M(I8VecMul, "i8vecmul", IntrI8VecMul, Args_Int32_GeneralInt32Int32Int32Int32General, Instance::intrI8VecMul, true, 0)\
    M(StringTest, "test", StringTest, Args_Int32_GeneralGeneral, Instance::stringTest, false, 1)\
    M(StringCast, "cast", StringCast, Args_General2, Instance::stringCast, false, 2)\
    M(StringFromCharCodeArray, "fromCharCodeArray", StringFromCharCodeArray, Args_General_GeneralGeneralInt32Int32, Instance::stringFromCharCodeArray, false, 3)\
    M(StringIntoCharCodeArray, "intoCharCodeArray", StringIntoCharCodeArray, Args_Int32_GeneralGeneralGeneralInt32, Instance::stringIntoCharCodeArray, false, 4)\
    M(StringFromCharCode, "fromCharCode", StringFromCharCode, Args_General_GeneralInt32, Instance::stringFromCharCode, false, 5)\
    M(StringFromCodePoint, "fromCodePoint", StringFromCodePoint, Args_General_GeneralInt32, Instance::stringFromCodePoint, false, 6)\
    M(StringCharCodeAt, "charCodeAt", StringCharCodeAt, Args_Int32_GeneralGeneralInt32, Instance::stringCharCodeAt, false, 7)\
    M(StringCodePointAt, "codePointAt", StringCodePointAt, Args_Int32_GeneralGeneralInt32, Instance::stringCodePointAt, false, 8)\
    M(StringLength, "length", StringLength, Args_Int32_GeneralGeneral, Instance::stringLength, false, 9)\
    M(StringConcat, "concat", StringConcat, Args_General3, Instance::stringConcat, false, 10)\
    M(StringSubstring, "substring", StringSubstring, Args_General_GeneralGeneralInt32Int32, Instance::stringSubstring, false, 11)\
    M(StringEquals, "equals", StringEquals, Args_Int32_GeneralGeneralGeneral, Instance::stringEquals, false, 12)\
    M(StringCompare, "compare", StringCompare, Args_Int32_GeneralGeneralGeneral, Instance::stringCompare, false, 13)\

#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_I8VecMul {ValType::i32(), ValType::i32(), ValType::i32(), ValType::i32()}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_I8VecMul 6, {MIRType::Pointer, ValType::i32().toMIRType(), ValType::i32().toMIRType(), ValType::i32().toMIRType(), ValType::i32().toMIRType(), MIRType::Pointer, MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_I8VecMul Nothing()
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_I8VecMul MIRType::None
#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_I8VecMul FailureMode::FailOnNegI32
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringTest {ValType(RefType::extern_())}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringTest 2, {MIRType::Pointer, MIRType::WasmAnyRef, MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringTest Some(ValType::i32())

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringTest ValType::i32().toMIRType()

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringTest FailureMode::Infallible
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringCast {ValType(RefType::extern_())}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringCast 2, {MIRType::Pointer, MIRType::WasmAnyRef, MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringCast Some(ValType(RefType::fromTypeCode(TypeCode(RefType::Extern), false)))

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringCast MIRType::WasmAnyRef

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringCast FailureMode::FailOnNullPtr
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringFromCharCodeArray {ValType(RefType::fromTypeDef(StaticTypeDefs::arrayMutI16, true)), ValType::i32(), ValType::i32()}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringFromCharCodeArray 4, {MIRType::Pointer, MIRType::WasmAnyRef, ValType::i32().toMIRType(), ValType::i32().toMIRType(), MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringFromCharCodeArray Some(ValType(RefType::fromTypeCode(TypeCode(RefType::Extern), false)))

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringFromCharCodeArray MIRType::WasmAnyRef

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringFromCharCodeArray FailureMode::FailOnNullPtr
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringIntoCharCodeArray {ValType(RefType::extern_()), ValType(RefType::fromTypeDef(StaticTypeDefs::arrayMutI16, true)), ValType::i32()}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringIntoCharCodeArray 4, {MIRType::Pointer, MIRType::WasmAnyRef, MIRType::WasmAnyRef, ValType::i32().toMIRType(), MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringIntoCharCodeArray Some(ValType::i32())

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringIntoCharCodeArray ValType::i32().toMIRType()

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringIntoCharCodeArray FailureMode::FailOnNegI32
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringFromCharCode {ValType::i32()}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringFromCharCode 2, {MIRType::Pointer, ValType::i32().toMIRType(), MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringFromCharCode Some(ValType(RefType::fromTypeCode(TypeCode(RefType::Extern), false)))

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringFromCharCode MIRType::WasmAnyRef

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringFromCharCode FailureMode::FailOnNullPtr
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringFromCodePoint {ValType::i32()}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringFromCodePoint 2, {MIRType::Pointer, ValType::i32().toMIRType(), MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringFromCodePoint Some(ValType(RefType::fromTypeCode(TypeCode(RefType::Extern), false)))

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringFromCodePoint MIRType::WasmAnyRef

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringFromCodePoint FailureMode::FailOnNullPtr
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringCharCodeAt {ValType(RefType::extern_()), ValType::i32()}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringCharCodeAt 3, {MIRType::Pointer, MIRType::WasmAnyRef, ValType::i32().toMIRType(), MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringCharCodeAt Some(ValType::i32())

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringCharCodeAt ValType::i32().toMIRType()

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringCharCodeAt FailureMode::FailOnNegI32
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringCodePointAt {ValType(RefType::extern_()), ValType::i32()}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringCodePointAt 3, {MIRType::Pointer, MIRType::WasmAnyRef, ValType::i32().toMIRType(), MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringCodePointAt Some(ValType::i32())

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringCodePointAt ValType::i32().toMIRType()

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringCodePointAt FailureMode::FailOnNegI32
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringLength {ValType(RefType::extern_())}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringLength 2, {MIRType::Pointer, MIRType::WasmAnyRef, MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringLength Some(ValType::i32())

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringLength ValType::i32().toMIRType()

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringLength FailureMode::FailOnNegI32
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringConcat {ValType(RefType::extern_()), ValType(RefType::extern_())}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringConcat 3, {MIRType::Pointer, MIRType::WasmAnyRef, MIRType::WasmAnyRef, MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringConcat Some(ValType(RefType::fromTypeCode(TypeCode(RefType::Extern), false)))

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringConcat MIRType::WasmAnyRef

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringConcat FailureMode::FailOnNullPtr
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringSubstring {ValType(RefType::extern_()), ValType::i32(), ValType::i32()}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringSubstring 4, {MIRType::Pointer, MIRType::WasmAnyRef, ValType::i32().toMIRType(), ValType::i32().toMIRType(), MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringSubstring Some(ValType(RefType::fromTypeCode(TypeCode(RefType::Extern), false)))

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringSubstring MIRType::WasmAnyRef

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringSubstring FailureMode::FailOnNullPtr
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringEquals {ValType(RefType::extern_()), ValType(RefType::extern_())}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringEquals 3, {MIRType::Pointer, MIRType::WasmAnyRef, MIRType::WasmAnyRef, MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringEquals Some(ValType::i32())

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringEquals ValType::i32().toMIRType()

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringEquals FailureMode::FailOnNegI32
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_VALTYPES_StringCompare {ValType(RefType::extern_()), ValType(RefType::extern_())}
#define DECLARE_BUILTIN_MODULE_FUNC_PARAM_MIRTYPES_StringCompare 3, {MIRType::Pointer, MIRType::WasmAnyRef, MIRType::WasmAnyRef, MIRType::None}
#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_VALTYPE_StringCompare Some(ValType::i32())

#define DECLARE_BUILTIN_MODULE_FUNC_RESULT_MIRTYPE_StringCompare ValType::i32().toMIRType()

#define DECLARE_BUILTIN_MODULE_FUNC_FAILMODE_StringCompare FailureMode::FailOnMaxI32


#endif // wasm_WasmBuiltinModuleGenerated_h
