/**
 * Tests that sharding or moving a buckets collection missing the `timeseries` options fails.
 * Those inconsistent collections may be generated by implicit creation bugs (e.g. SERVER-87678).
 * @tags: [
 *   # This inconsistency that can only happen with legacy timeseries collections,
 *   # which allowed a system.buckets namespace to exist without timeseries options.
 *   featureFlagCreateViewlessTimeseriesCollections_incompatible,
 * ]
 */

import {configureFailPoint} from "jstests/libs/fail_point_util.js";
import {FixtureHelpers} from "jstests/libs/fixture_helpers.js";
import {ShardingTest} from "jstests/libs/shardingtest.js";

// Attempting to track a buckets collection without timeseries options triggers a tassert.
// Disable the behavior of aborting on exit so that we can stop the sharded cluster normally.
TestData.testingDiagnosticsEnabled = false;

let st = new ShardingTest({shards: 2, mongos: 1, config: 1});

const db = st.s.getDB(jsTestName());
const coll = db.coll;
const bucketsColl = db.system.buckets.coll;

assert.commandWorked(st.s.adminCommand({enableSharding: db.getName(), primaryShard: st.shard0.shardName}));

configureFailPoint(st.rs0.getPrimary(), "skipCreateTimeseriesBucketsWithoutOptionsCheck");

assert.commandWorked(db.createCollection(bucketsColl.getName()));

// Attempting to shard the collection either directly or through the buckets namespace will fail.
assert.commandFailedWithCode(db.adminCommand({shardCollection: coll.getFullName(), key: {meta: 1}}), 9934501);
assert.commandFailedWithCode(db.adminCommand({shardCollection: bucketsColl.getFullName(), key: {meta: 1}}), 5731501);

// Attempting to move the collection either directly or through the buckets namespace will fail.
assert.commandFailedWithCode(
    db.adminCommand({moveCollection: coll.getFullName(), toShard: st.shard1.shardName}),
    9934501,
);
assert.commandFailedWithCode(
    db.adminCommand({moveCollection: bucketsColl.getFullName(), toShard: st.shard1.shardName}),
    9934501,
);

// Make sure none of the operations tracked the collection despite failing.
assert(!FixtureHelpers.isTracked(coll));
assert(!FixtureHelpers.isTracked(bucketsColl));

// The view can't be created as the buckets collection is incompatible.
assert.commandFailedWithCode(
    db.createCollection(coll.getName(), {timeseries: {timeField: "t", metaField: "m"}}),
    ErrorCodes.NamespaceExists,
);

assert(bucketsColl.drop());

st.stop();
