# Copyright (C) 2021-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/db/basic_types.idl"
    - "../buildscripts/idl/tests/compatibility_test_pass/new/imports.idl"

types:
    intStringToInt:
        bson_serialization_type: int
        description:
            "The bson_serialization_type changes from [int, string] in the old command's
            reply field type to int in the new command's reply field type"
        cpp_type: "std::int32_t"
        is_view: false

    intStringBoolToIntString:
        bson_serialization_type:
            - int
            - string
        description:
            "The bson_serialization_type changes from [int, string, bool] in the old
            command's reply field type to [int, string] in the new command's reply
            field type"
        cpp_type: "std::int32_t"
        is_view: false

    intStringToIntStringBool:
        bson_serialization_type:
            - int
            - string
            - bool
        description:
            "The bson_serialization_type changes from [int, string] in the old command's
            reply field type to [int, string, bool] in the new command's reply field
            type"
        cpp_type: "std::int32_t"
        is_view: false

    intToIntString:
        bson_serialization_type:
            - int
            - string
        description:
            "The bson_serialization_type changes from [int] in the old command
            parameter's type to [int, string] in the new command parameter's type"
        cpp_type: "std::int32_t"
        is_view: false

    bsonSerializationTypeAnyAllowed:
        bson_serialization_type:
            - int
            - any
        description: "The bson_serialization_type contains 'any'"
        cpp_type: "std::int32_t"
        is_view: false

enums:
    NewReplyFieldEnumSubset:
        description:
            "The new reply type is an enum that is a subset of the old reply type's
            enum values"
        type: string
        values:
            valueOne: "one"
            valueTwo: "two"

    EnumSuperset:
        description: "The new enum is a superset of the old enum values"
        type: string
        values:
            valueOne: "one"
            valueTwo: "two"
            valueThree: "three"

structs:
    StableNewFieldReply:
        description:
            "This reply contains a field that is unstable in the old command but is
            stable in the new command."
        is_command_reply: true
        fields:
            stableNewField:
                type: string
                stability: stable

    UnstableNewFieldReplyIgnoreList:
        description:
            "This reply contains a field that is stable in the old command and is
            unstable in the new command, but the change is explicitly allowed."
        is_command_reply: true
        fields:
            unstableNewFieldIgnoreList:
                type: string
                stability: unstable

    NewReplyTypeEnumOrStructIgnoreList:
        description:
            "the type is a non-enum or struct type in the old command, and an enum or struct
            in the new command, but the change is explicitly allowed"
        is_command_reply: true
        fields:
            newReplyTypeEnumOrStructIgnoreList:
                type: StructType
                stability: unstable

    RequiredNewFieldReply:
        description:
            "This reply contains a field that is optional in the old command but is
            required in the new command."
        is_command_reply: true
        fields:
            requiredNewField:
                type: string
                stability: stable

    OptionalNewField:
        description:
            "This struct contains a field that is required in the old command but is
            optional in the new command."
        fields:
            optionalNewField:
                type: string
                optional: true
                stability: stable

    AddedNewFieldReply:
        description: "This reply contains a field that is added in the new command."
        is_command_reply: true
        fields:
            addedNewField:
                type: string
                stability: stable

    UnstableOldFieldReply:
        description:
            "This reply contains a field that is unstable in the old command and is
            unstable and optional in the new command."
        is_command_reply: true
        fields:
            unstableOldField:
                type: string
                stability: unstable
                optional: true

    UnstableOptionalNewFieldReplyIgnoreList:
        description:
            "This reply contains a field that is stable in the old command and is
            unstable and optional in the new command, but the change is allowed"
        is_command_reply: true
        fields:
            unstableOptionalNewFieldIgnoreList:
                type: string
                stability: unstable
                optional: true

    EnumSubsetReply:
        description:
            "This reply contains an enum field where the new enum values is a subset
            of the old reply type's enum values"
        is_command_reply: true
        fields:
            replyField:
                type: NewReplyFieldEnumSubset
                stability: stable

    BsonSubsetReply:
        description:
            "This reply contains a field type where the new bson_serialization_type
            is a subset of the old bson_serialization_type"
        is_command_reply: true
        fields:
            bsonSubsetReplyField:
                type: intStringToInt
                stability: stable

    BsonSubsetReplyTwo:
        description:
            "This reply contains a field type where the new bson_serialization_type
            is a subset of the old bson_serialization_type"
        is_command_reply: true
        fields:
            bsonSubsetReplyFieldTwo:
                type: intStringBoolToIntString
                stability: stable

    StructFieldTypeRecursiveReplyIgnoreList:
        description:
            "This reply contains a field whose new type is a struct that is not
            compatible with the old field type, but this is explicitly allowed"
        is_command_reply: true
        fields:
            structReplyField:
                type: UnstableNewFieldReplyIgnoreList
                stability: unstable

    StructFieldTypeRecursiveReplyOne:
        description:
            "This reply contains a field whose new type is a struct that is
            compatible with the old field type"
        is_command_reply: true
        fields:
            structReplyField:
                type: StableNewFieldReply
                stability: stable

    StructFieldTypeRecursiveReplyTwo:
        description:
            "This reply contains a field whose new type is a struct that is
            compatible with the old field type"
        is_command_reply: true
        fields:
            structReplyField:
                type: StructType
                stability: stable

    StructType:
        description:
            "This struct contains a field whose new type is compatible with the
            old field type"
        fields:
            fieldOne:
                type: BsonSubsetReply
                stability: stable

    OldVariantTypeReply:
        description:
            "This reply contains an old field that has a variant type while the new field
            is not a variant type"
        is_command_reply: true
        fields:
            oldVariantTypeReplyField:
                type: int
                stability: stable

    NewVariantNotSubsetReplyIgnoreList:
        description:
            "This reply contains a field whose new variant types are not a subset
            of the old variant types"
        is_command_reply: true
        fields:
            variantNotSubsetReplyFieldIgnoreList:
                type:
                    variant: [int, string]
                stability: unstable

    NewVariantSubsetReply:
        description:
            "This reply contains a field whose new variant types are a subset
            of the old variant types"
        is_command_reply: true
        fields:
            variantSubsetReplyField:
                stability: stable
                type:
                    variant: [int, string, array<string>]

    NewVariantSubsetReplyTwo:
        description:
            "This reply contains a field whose new variant types are a subset
            of the old variant types"
        is_command_reply: true
        fields:
            variantSubsetReplyFieldTwo:
                stability: stable
                type:
                    variant: [int, string, array<string>]

    NewVariantSubsetReplyThree:
        description:
            "This reply contains a field whose new variant types are a subset
            of the old variant types"
        is_command_reply: true
        fields:
            variantSubsetReplyFieldThree:
                stability: stable
                type:
                    variant: [int, string, intStringBoolToIntString]

    NewArrayVariantSubsetReply:
        description:
            "This reply contains a field whose new array<variant> types are a subset
            of the old array<variant> types"
        is_command_reply: true
        fields:
            variantSubsetReplyFieldThree:
                stability: stable
                type: array<variant<int, string, intStringBoolToIntString>>

    VariantRecursiveReply:
        description:
            "This reply contains a field that has a new variant type that is compatible
            with the old variant type"
        is_command_reply: true
        fields:
            variantRecursiveReplyField:
                stability: stable
                type:
                    variant:
                        [
                            int,
                            intStringBoolToIntString,
                            array<intStringBoolToIntString>,
                            array<string>,
                        ]

    OldVariantStructReply:
        description:
            "This reply contains a field whose new variant type does not have a variant
            struct type while the old one does"
        is_command_reply: true
        fields:
            variantStructReplyField:
                stability: stable
                type:
                    variant: [int, string, array<string>]

    VariantStructRecursiveReply:
        description:
            "This reply contains a field that has a new variant struct type that is
            compatible with the old variant struct type"
        is_command_reply: true
        fields:
            variantStructRecursiveReplyField:
                stability: stable
                type:
                    variant:
                        [
                            int,
                            StructFieldTypeRecursiveReplyTwo,
                            array<StructFieldTypeRecursiveReplyTwo>,
                            array<string>,
                        ]

    VariantDifferentStructReplyIgnoreList:
        description:
            "This reply contains a field that has a new variant struct type that is
            different from the old variant struct type"
        is_command_reply: true
        fields:
            variantStructRecursiveReplyFieldIgnoreList:
                stability: unstable
                type:
                    variant: [int, StructFieldTypeRecursiveReplyTwo]

    NonVariantToVariantReplyIgnoreList:
        description:
            "This reply contains a field that changes from a non-variant type to a variant
            type, but the field is in the ignore list"
        is_command_reply: true
        fields:
            nonVariantToVariantReplyFieldIgnoreList:
                stability: unstable
                type:
                    variant: [int, StructFieldTypeRecursiveReplyOne]

    NonEnumToEnumReplyIgnoreList:
        description:
            "This reply contains a field that changes from a non-enum type to an enum
            type, but the field is in the ignore list"
        is_command_reply: true
        fields:
            nonEnumToEnumReplyIgnoreList:
                type: EnumSubsetReply
                stability: unstable

    CommandParamStructRecursiveOne:
        description:
            "This command parameter struct type contains a stable and optional
            field while the old struct field is unstable"
        fields:
            unstableToStableOptionalField:
                type: string
                optional: true
                stability: stable

    CommandParamStructRecursiveTwo:
        description:
            "This command parameter struct type contains a field whose new type is
            a superset of the old field type"
        fields:
            supersetField:
                type: intToIntString
                stability: stable

    OldValidatorStruct:
        description:
            "This struct contains a field where the old version contains a validator while
            the new version does not"
        is_command_reply: true
        fields:
            oldValidatorField:
                type: int
                stability: stable

    ValidatorsEqualStruct:
        description: "This struct contains a field where the new and old validator are exactly equal"
        is_command_reply: true
        fields:
            validatorsEqualField:
                type: double
                stability: stable
                validator:
                    lt: 0.0
                    gt: -1.1
                    lte: 2.0
                    gte: -2.98
                    callback: "callback"

    NewCommandParameterStruct:
        description: "The new command parameter's type and the
            old command parameter's type are both structs"

    InsertParameterStruct:
        description: "The new command parameter's type and the
            old command parameter's type are both structs"
        fields:
            insert:
                type: int
                stability: stable

    UpdateParameterStruct:
        description: "The new command parameter's type and the
            old command parameter's type are both structs"
        fields:
            update:
                type: int
                stability: stable

    AddedOptionalTypeFieldStruct:
        description: "This struct contains a field that is added and optional in the new version"
        fields:
            addedOptionalTypeField:
                type: string
                optional: true
                stability: stable

    StableOptionalTypeFieldStruct:
        description:
            "This struct contains a field that is stable and optional in the new version
            but unstable in the corresponding old version"
        fields:
            stableOptionalTypeField:
                type: string
                optional: true
                stability: stable

    StableWithDefaultTypeFieldStruct:
        description:
            "This struct contains a field that is stable and required with a default value
            in the new version but unstable in the corresponding old version"
        fields:
            stableWithDefaultTypeField:
                type: string
                default: ""
                stability: stable

    RemovedUnstableTypeFieldStruct:
        description:
            "This struct contains a field that is unstable in the old version and
            is removed in the new version"

    RemovedInternalTypeFieldStruct:
        description:
            "This struct contains a field that is internal in the old version and
            is removed in the new version"

    AddedUnstableTypeFieldStruct:
        description: "This struct contains a field that is added and unstable in the new version"
        fields:
            addedUnstableTypeField:
                type: string
                stability: unstable
                optional: true

    AddedInternalTypeFieldStruct:
        description: "This struct contains a field that is added and internal in the new version"
        fields:
            addedInternalTypeField:
                type: string
                stability: internal
                optional: true

    KeptUnstableTypeFieldStruct:
        description:
            "This struct contains a field that is unstable in the new version and also
            exists in the old version"
        fields:
            keptUnstableTypeField:
                type: string
                stability: unstable

    KeptInternalTypeFieldStruct:
        description:
            "This struct contains a field that is internal in the new version and also
            exists in the old version"
        fields:
            keptInternalTypeField:
                type: string
                stability: internal

    StructCommandParameterTypeRecursive:
        description:
            "This param struct type contains a field that is compatible between the
            old and new versions"
        fields:
            structCommandParameterTypeRecursiveField:
                type: intStringToIntStringBool
                stability: stable

    VariantSupersetStruct:
        description:
            "This struct contains a field where the new variant types are a superset
            of the old variant types"
        fields:
            variantSupersetField:
                stability: stable
                type:
                    variant: [int, bool, string, array<string>]

    VariantSupersetStructTwo:
        description:
            "This struct contains a field where the new variant types are a superset
            of the old variant types"
        fields:
            variantSupersetFieldTwo:
                stability: stable
                type:
                    variant: [int, bool, string, double, array<string>]

    OldTypeNotVariantStruct:
        description:
            "This struct contains a field where the new type is variant while the
            old one is not"
        fields:
            variantField:
                stability: stable
                type:
                    variant: [int, bool, array<string>]

    VariantRecursiveStruct:
        description:
            "This struct contains a field where the new variant types are
            compatible with the old variant types"
        fields:
            variantRecursiveField:
                stability: stable
                type:
                    variant:
                        [
                            int,
                            intStringToIntStringBool,
                            array<intStringToIntStringBool>,
                            array<string>,
                        ]

    VariantStructSupersetStruct:
        description:
            "This struct contains a field where the new variant types contains a struct
            while the old one does not"
        fields:
            variantStructSupersetField:
                stability: stable
                type:
                    variant:
                        [
                            int,
                            string,
                            NewCommandParameterStruct,
                            array<NewCommandParameterStruct>,
                            array<string>,
                        ]

    VariantStructSupersetTwoStruct:
        description:
            "This struct contains a field where the new variant types contains two structs
            while the old one contains one"
        fields:
            variantStructSupersetField:
                stability: stable
                type:
                    variant:
                        [
                            int,
                            string,
                            InsertParameterStruct,
                            UpdateParameterStruct,
                        ]

    ArrayVariantStructSupersetTwoStruct:
        description:
            "This struct contains a field where the new array<variant> types contains two structs
            while the old one contains one"
        fields:
            variantStructSupersetField:
                stability: stable
                type: array<variant<int, string, InsertParameterStruct, UpdateParameterStruct>>

    VariantStructRecursiveStruct:
        description:
            "This struct contains a field where the old variant struct and the new
            variant struct are compatible"
        fields:
            variantStructRecursiveField:
                stability: stable
                type:
                    variant:
                        [
                            int,
                            string,
                            StructCommandParameterTypeRecursive,
                            array<StructCommandParameterTypeRecursive>,
                            array<string>,
                        ]

    BsonSerializationTypeAnyReply:
        description: "This reply contains a field whose type is 'any' and is explicitly allowed"
        is_command_reply: true
        fields:
            anyTypeField:
                type: bsonSerializationTypeAnyAllowed
                stability: stable

    NewlyAddedBsonSerializationTypeAnyReply:
        description:
            "This reply contains a newly added field whose type has a bson_serialization_type
            that contains 'any' that is explicitly allowed"
        is_command_reply: true
        fields:
            newlyAddedBsonSerializationTypeAnyReplyField:
                type: bsonSerializationTypeAnyAllowed
                stability: stable

    OldUnstableTypeChangesReply:
        description: "This reply contains a field that is unstable in the old version and has type changes"
        fields:
            oldUnstableTypeChangesReplyField:
                stability: unstable
                type: intStringToIntStringBool
                validator:
                    lt: 0

    OldInternalTypeChangesReply:
        description: "This reply contains a field that is internal in the old version and has type changes"
        is_command_reply: true
        fields:
            oldInternalTypeChangesReplyField:
                stability: internal
                type: intStringToIntStringBool
                validator:
                    lt: 0

    NewUnstableTypeChangesReplyIgnoreList:
        description:
            "This reply contains a field that is stable in the old version and has type changes,
            but is also in the ignore list"
        is_command_reply: true
        fields:
            newUnstableTypeChangesReplyFieldIgnoreList:
                stability: unstable
                type: intStringToIntStringBool
                validator:
                    lt: 0

    NewlyAddedBsonSerializationTypeAnyStruct:
        description:
            "This struct contains a newly added field whose type has a bson_serialization_type
            that contains 'any' that is explicitly allowed"
        fields:
            newlyAddedBsonSerializationTypeAnyStructField:
                type: bsonSerializationTypeAnyAllowed
                optional: true
                stability: stable

    OldUnstableTypeChangesStruct:
        description: "This struct contains a field that is unstable in the old version and has type changes"
        fields:
            oldUnstableTypeChangesField:
                type: intStringBoolToIntString
                optional: true
                stability: stable
                validator:
                    lt: 0

    NewUnstableTypeChangesStructIgnoreList:
        description:
            "This struct contains a field that is stable in the old version and has type,
            changes but is also in the ignore list"
        fields:
            newUnstableTypeChangesFieldIgnoreList:
                type: intStringBoolToIntString
                stability: unstable
                validator:
                    lt: 0

    BsonSerializationTypeAnyWithVariantReply:
        description:
            "This reply contains a new reply field with variant types where one of the
            bson serialization types is 'any' and is explicitly allowed"
        is_command_reply: true
        fields:
            anyTypeField:
                stability: stable
                type:
                    variant:
                        [
                            bsonSerializationTypeAnyAllowed,
                            StructFieldTypeRecursiveReplyTwo,
                            array<bsonSerializationTypeAnyAllowed>,
                            array<StructFieldTypeRecursiveReplyTwo>,
                        ]

    ArrayTypeStruct:
        description: "Struct with ArrayType field."
        is_command_reply: true
        fields:
            ArrayCommandParameter:
                type: array<string>
                stability: stable

    MissingUnstableFieldNewFieldStruct:
        description:
            "This struct contains a field that missing the 'stability' field in the new
            command."
        is_command_reply: true
        fields:
            missingUnstableFieldNewField:
                type: string

    MissingUnstableFieldOldFieldStruct:
        description:
            "This struct contains a field that missing the 'stability' field in the old
            command."
        is_command_reply: true
        fields:
            missingUnstableFieldNewField:
                type: string
                stability: stable

    CompatibleChainedStructReply:
        description: "This reply contains an compatible chained struct"
        is_command_reply: true
        chained_structs:
            StructFieldTypeRecursiveReplyTwo: StructFieldTypeRecursiveReplyTwo

    CompatibleChainedStructType:
        description: "This struct type contains an compatible chained struct"
        chained_structs:
            StructCommandParameterTypeRecursive: StructCommandParameterTypeRecursive

    NewOptionalBoolStruct:
        description: "This struct gets another field of type optionalBool."
        is_command_reply: true
        fields:
            ok1:
                type: bool
                stability: stable
                optional: true
            ok2:
                type: optionalBool
                stability: stable

    OptionalBoolEquivalenceStruct:
        description: "First two fields get the types swapped."
        is_command_reply: true
        fields:
            ok1:
                type: optionalBool
                stability: stable
            ok2:
                type: bool
                stability: stable
                optional: true
            ok3:
                type: optionalBool
                stability: stable

    OptionalBoolToBoolStruct:
        description: "optionalBool field replaced by bool"
        is_command_reply: true
        fields:
            ok:
                type: bool
                stability: stable

    BoolToOptionalBoolStruct:
        description: "bool field replaced by optionalBool"
        is_command_reply: true
        fields:
            ok:
                type: optionalBool
                stability: stable

    ReplyWithNewArrayTypeField:
        description: "new field is of ArrayType"
        is_command_reply: true
        fields:
            ok:
                type: bool
                stability: stable
            newArrayTypeField:
                type: array<int>
                optional: true
                stability: stable

    ReplyWithNewNestedArrayTypeField:
        description: "new field is a struct with a field of ArrayType"
        is_command_reply: true
        fields:
            ok:
                type: bool
                stability: stable
            newStructWithArrayTypeField:
                type: ArrayTypeStruct
                optional: true
                stability: stable

commands:
    testCommand:
        description: "new passing test command, there was no change from the old version"
        command_name: testCommand
        namespace: ignored
        cpp_name: testCommand
        strict: true
        api_version: "1"
        reply_type: OkReply

    addedCommand:
        description: "new command is added and should pass"
        command_name: addedCommand
        namespace: ignored
        cpp_name: addedCommand
        strict: true
        api_version: "1"
        reply_type: OkReply

    strictFalseCommand:
        description: "command passes with strict: false in both versions of the command"
        command_name: strictFalseCommand
        namespace: ignored
        cpp_name: strictFalseCommand
        strict: false
        api_version: "1"
        reply_type: OkReply

    strictTrueToFalseCommand:
        description: "command passes when it switches from strict: true to switch: false"
        command_name: strictTrueToFalseCommand
        namespace: ignored
        cpp_name: strictTrueToFalseCommand
        strict: false
        api_version: "1"
        reply_type: OkReply

    addedCommandParameter:
        description: "new optional command parameter is added and should pass"
        command_name: addedCommandParameter
        namespace: ignored
        cpp_name: addedCommandParameter
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newParameter:
                type: string
                optional: true
                stability: stable

    addedCommandParameterDefault:
        description: "new command parameter with a default is added and should pass"
        command_name: addedCommandParameterDefault
        namespace: ignored
        cpp_name: addedCommandParameterDefault
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newStableParameter:
                type: string
                default: ""
                stability: stable

    addedCommandParameterStable:
        description:
            "new command has an optional stable parameter that is unstable
            in the corresponding old command and still passes"
        command_name: addedCommandParameterStable
        namespace: ignored
        cpp_name: addedCommandParameterStable
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newOptionalStableParam:
                type: string
                optional: true
                stability: stable

    addedCommandParameterStableRequired:
        description:
            "new command has a stable parameter that is unstable and required
            in the corresponding old command and still passes"
        command_name: addedCommandParameterStableRequired
        namespace: ignored
        cpp_name: addedCommandParameterStableRequired
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newStableParam:
                type: string
                stability: stable

    addedCommandParameterStableWithDefault:
        description:
            "new command has a required stable parameter with a default value
            that is unstable in the corresponding old command and still passes"
        command_name: addedCommandParameterStableWithDefault
        namespace: ignored
        cpp_name: addedCommandParameterStableWithDefault
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newStableParamWithDefault:
                type: string
                default: ""
                stability: stable

    commandParameterUnstableIgnoreList:
        description:
            "new unstable command parameter is stable in the corresponding old
            command, but the change is explcitly allowed"
        command_name: commandParameterUnstableIgnoreList
        namespace: ignored
        cpp_name: commandParameterUnstableIgnoreList
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newUnstableParameterIgnoreList:
                type: string
                stability: unstable

    removeCommandParameterUnstable:
        description: "new command removes parameter that is unstable
            in the corresponding old command and still passes"
        command_name: removeCommandParameterUnstable
        namespace: ignored
        cpp_name: removeCommandParameterUnstable
        strict: true
        api_version: "1"
        reply_type: OkReply

    addedCommandParameterOptional:
        description: "new command has an optional parameter that is required
            in the corresponding old command and still passes"
        command_name: addedCommandParameterOptional
        namespace: ignored
        cpp_name: addedCommandParameterOptional
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newOptionalParam:
                type: string
                optional: true
                stability: stable

    addedUnstableCommandParameter:
        description: "new command has a new unstable parameter that did not
            exist in the corresponding old command and still passes"
        command_name: addedUnstableCommandParameter
        namespace: ignored
        cpp_name: addedUnstableCommandParameter
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newUnstableParam:
                type: string
                stability: unstable
                optional: true

    keptUnstableCommandParameter:
        description: "new command has an unstable parameter that also
            exists in the corresponding old command and still passes"
        command_name: keptUnstableCommandParameter
        namespace: ignored
        cpp_name: keptUnstableCommandParameter
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            unstableParam:
                type: string
                stability: unstable

    newCommandParameterType:
        description:
            "new command passes because its command parameter type is compatible with
            the corresponding old command's parameter type"
        command_name: newCommandParameterType
        namespace: ignored
        cpp_name: newCommandParameterType
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            compatibleParameter:
                type: string
                stability: stable

    newCommandParameterTypeEnumSuperset:
        description:
            "new command passes because its command parameter type is an enum that is
            a superset of the corresponding old command parameter's type's enum values"
        command_name: newCommandParameterTypeEnumSuperset
        namespace: ignored
        cpp_name: newCommandParameterTypeEnumSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            parameterEnumSuperset:
                type: EnumSuperset
                stability: stable

    newCommandParameterTypeStruct:
        description:
            "new command passes because its command parameter type is a struct and the
            corresponding old command parameter type is also a struct"
        command_name: newCommandParameterTypeStruct
        namespace: ignored
        cpp_name: newCommandParameterTypeStruct
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            parameterStruct:
                type: NewCommandParameterStruct
                stability: stable

    newCommandParameterTypeBsonSuperset:
        description:
            "new command passes because its parameter type has a bson_serialization_type
            that is a superset of the corresponding old command parameter type's
            bson_serialization_type"
        command_name: newCommandParameterTypeBsonSuperset
        namespace: ignored
        cpp_name: newCommandParameterTypeBsonSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            bsonSupersetParam:
                type: intToIntString
                stability: stable

    newCommandParameterTypeStructRecursiveOne:
        description:
            "new command passes because its parameter type is a struct that is
            compatible with the old parameter type struct"
        command_name: newCommandParameterTypeStructRecursiveOne
        namespace: ignored
        cpp_name: newCommandParameterTypeStructRecursiveOne
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            unstableToStableOptionalStructParameter:
                type: CommandParamStructRecursiveOne
                stability: stable

    newCommandParameterTypeStructRecursiveTwo:
        description:
            "new command passes because its parameter type is a struct that is
            compatible with the old parameter type struct"
        command_name: newCommandParameterTypeStructRecursiveTwo
        namespace: ignored
        cpp_name: newCommandParameterTypeStructRecursiveTwo
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            supersetStructParameter:
                type: CommandParamStructRecursiveTwo
                stability: stable

    newlyAddedParamBsonAnyAllowList:
        description:
            "command passes when its parameter is newly added and has bson type 'any'
            that is explicitly allowed"
        command_name: newlyAddedParamBsonAnyAllowList
        namespace: ignored
        cpp_name: newlyAddedParamBsonAnyAllowList
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newlyAddedBsonAnyAllowListParam:
                type: bsonSerializationTypeAnyAllowed
                optional: true
                stability: stable

    oldUnstableParamTypeChanges:
        description: "command passes when it has an old unstable param with incompatible type changes"
        command_name: oldUnstableParamTypeChanges
        namespace: ignored
        cpp_name: oldUnstableParamTypeChanges
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            oldUnstableTypeChangesParam:
                type: intStringBoolToIntString
                optional: true
                stability: stable
                validator:
                    lt: 0

    oldInternalParamTypeChanges:
        description: "command passes when it has an old internal param with incompatible type changes"
        command_name: oldInternalParamTypeChanges
        namespace: ignored
        cpp_name: oldInternalParamTypeChanges
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            oldInternalTypeChangesParam:
                type: intStringBoolToIntString
                optional: true
                stability: internal
                validator:
                    lt: 0

    newUnstableParamTypeChangesIgnoreList:
        description:
            "command has param with incompatible type changes, but is in the stable-to-unstable
            ignore list"
        command_name: newUnstableParamTypeChangesIgnoreList
        namespace: ignored
        cpp_name: newUnstableParamTypeChangesIgnoreList
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newUnstableTypeChangesParamIgnoreList:
                type: intStringBoolToIntString
                stability: unstable
                validator:
                    lt: 0

    newlyAddedTypeFieldBsonAnyAllowList:
        description:
            "command passes when its type field is newly added and has bson type 'any'
            that is explicitly allowed"
        command_name: newlyAddedTypeFieldBsonAnyAllowList
        namespace: type
        type: NewlyAddedBsonSerializationTypeAnyStruct
        cpp_name: newlyAddedTypeFieldBsonAnyAllowList
        strict: true
        api_version: "1"
        reply_type: OkReply

    oldUnstableTypeChanges:
        description: "command passes when it has an old unstable type field with incompatible type changes"
        command_name: oldUnstableTypeChanges
        namespace: type
        type: OldUnstableTypeChangesStruct
        cpp_name: oldUnstableParamTypeChanges
        strict: true
        api_version: "1"
        reply_type: OkReply

    newUnstableTypeChangesIgnoreList:
        description:
            "command has type with incompatible changes, but is in the stable-to-unstable
            ignore list"
        command_name: newUnstableTypeChangesIgnoreList
        namespace: type
        type: NewUnstableTypeChangesStructIgnoreList
        cpp_name: newUnstableTypeChangesIgnoreList
        strict: true
        api_version: "1"
        reply_type: OkReply

    oldCommandParameterValidator:
        description:
            "new command passes when it contains a parameter that does not contain a validator
            that is present in the old parameter"
        command_name: oldCommandParameterValidator
        namespace: ignored
        cpp_name: oldCommandParameterValidator
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newParam:
                type: int
                stability: stable

    commandParameterValidatorsEqual:
        description:
            "new command passes because it contains a parameter that contains a validator
            that is exactly equal to the old parameter validator"
        command_name: commandParameterValidatorsEqual
        namespace: ignored
        cpp_name: commandParameterValidatorsEqual
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            newParam:
                type: double
                stability: stable
                validator:
                    lt: 0.0
                    gt: -1.1
                    lte: 2.0
                    gte: -2.98
                    callback: "callback"

    oldCommandTypeValidator:
        description:
            "new command passes because it contains a type that does not contain a validator
            that is present in the old type"
        command_name: oldCommandTypeValidator
        namespace: type
        type: OldValidatorStruct
        cpp_name: oldCommandTypeValidator
        strict: true
        api_version: "1"
        reply_type: OkReply

    commandTypeValidatorsEqual:
        description:
            "new command passes because it contains a type that contains a validator
            that is exactly equal to the old type validator"
        command_name: commandTypeValidatorsEqual
        namespace: type
        type: ValidatorsEqualStruct
        cpp_name: commandTypeValidatorsEqual
        strict: true
        api_version: "1"
        reply_type: OkReply

    newReplyFieldStable:
        description: "new command contains a stable reply field that is unstable
            in the corresponding old command and still passes"
        command_name: newReplyFieldStable
        namespace: ignored
        cpp_name: newReplyFieldStable
        strict: true
        api_version: "1"
        reply_type: StableNewFieldReply

    newReplyFieldUnstableIgnoreList:
        description:
            "new command contains an unstable reply field that is stable
            in the corresponding old command but is explicitly allowed"
        command_name: newReplyFieldUnstableIgnoreList
        namespace: ignored
        cpp_name: newReplyFieldUnstableIgnoreList
        strict: true
        api_version: "1"
        reply_type: UnstableNewFieldReplyIgnoreList

    newReplyFieldRequired:
        description:
            "new command contains a required reply field that is optional
            in the corresponding old command and still passes"
        command_name: newReplyFieldRequired
        namespace: ignored
        cpp_name: newReplyFieldRequired
        strict: true
        api_version: "1"
        reply_type: RequiredNewFieldReply

    newReplyFieldAdded:
        description: "new command adds a new reply field and still passes"
        command_name: newReplyFieldAdded
        namespace: ignored
        cpp_name: newReplyFieldAdded
        strict: true
        api_version: "1"
        reply_type: AddedNewFieldReply

    oldReplyFieldUnstable:
        description:
            "old reply field is unstable so new command passes even if its new reply
            field is unstable"
        command_name: oldReplyFieldUnstable
        namespace: ignored
        cpp_name: oldReplyFieldUnstable
        strict: true
        api_version: "1"
        reply_type: UnstableOldFieldReply

    newReplyFieldUnstableOptionalIgnoreList:
        description:
            "old reply field is stable but is included in the ignore list so new command
            passes even if its new reply field is unstable and optional"
        command_name: newReplyFieldUnstableOptionalIgnoreList
        namespace: ignored
        cpp_name: newReplyFieldUnstableOptionalIgnoreList
        strict: true
        api_version: "1"
        reply_type: UnstableOptionalNewFieldReplyIgnoreList

    importedReplyCommand:
        description: "reply is imported and should pass"
        command_name: importedReplyCommand
        namespace: ignored
        cpp_name: importedReplyCommand
        strict: true
        api_version: "1"
        reply_type: ImportedStableNewFieldReply

    newReplyFieldTypeEnumSubset:
        description:
            "new command passes because its reply field type is an enum that is
            a subset of the corresponding old reply field type's enum values"
        command_name: newReplyFieldTypeEnumSubset
        namespace: ignored
        cpp_name: newReplyFieldTypeEnumSubset
        strict: true
        api_version: "1"
        reply_type: EnumSubsetReply

    newReplyFieldTypeBsonSubset:
        description: "new command passes because its reply field type has a
            bson_serialization_type that is a subset of the corresponding
            old reply field type's bson_serialization_type"
        command_name: newReplyFieldTypeBsonSubset
        namespace: ignored
        cpp_name: newReplyFieldTypeBsonSubset
        strict: true
        api_version: "1"
        reply_type: BsonSubsetReply

    newReplyFieldTypeBsonSubsetTwo:
        description: "new command passes because its reply field type has a
            bson_serialization_type that is a subset of the corresponding
            old reply field type's bson_serialization_type"
        command_name: newReplyFieldTypeBsonSubsetTwo
        namespace: ignored
        cpp_name: newReplyFieldTypeBsonSubsetTwo
        strict: true
        api_version: "1"
        reply_type: BsonSubsetReplyTwo

    newReplyFieldTypeStructRecursiveOne:
        description:
            "new command passes because its reply field type is a struct that is
            compatible with the old reply field type struct"
        command_name: newReplyFieldTypeStructRecursiveOne
        namespace: ignored
        cpp_name: newReplyFieldTypeStructRecursiveOne
        strict: true
        api_version: "1"
        reply_type: StructFieldTypeRecursiveReplyOne

    newReplyFieldTypeStructRecursiveTwo:
        description:
            "new command passes because its reply field type is a struct that is
            compatible with the old reply field type struct"
        command_name: newReplyFieldTypeStructRecursiveTwo
        namespace: ignored
        cpp_name: newReplyFieldTypeStructRecursiveTwo
        strict: true
        api_version: "1"
        reply_type: StructFieldTypeRecursiveReplyTwo

    newReplyFieldTypeStructIgnoreList:
        description:
            "command has a reply contains a field whose new type is a struct that is not
            compatible with the old field type, but this is explicitly allowed"
        command_name: newReplyFieldTypeStructIgnoreList
        namespace: ignored
        cpp_name: newReplyFieldTypeStructIgnoreList
        strict: true
        api_version: "1"
        reply_type: StructFieldTypeRecursiveReplyIgnoreList

    newNamespaceIgnored:
        description: "new command passes when its namespace is changed to ignored"
        command_name: newNamespaceIgnored
        namespace: ignored
        cpp_name: newNamespaceIgnored
        strict: true
        api_version: "1"
        reply_type: OkReply

    newNamespaceConcatenateWithDbOrUuid:
        description: "new command passes when its namespace is changed to
            concatenate_with_db_or_uuid from concatenate_with_db"
        command_name: newNamespaceConcatenateWithDbOrUuid
        namespace: concatenate_with_db_or_uuid
        cpp_name: newNamespaceConcatenateWithDbOrUuid
        strict: true
        api_version: "1"
        reply_type: OkReply

    newNamespaceTypeToIgnored:
        description: "new command passes when its namespace is changed from type to ignored"
        command_name: newNamespaceTypeToIgnored
        namespace: ignored
        cpp_name: newNamespaceTypeToIgnored
        strict: true
        api_version: "1"
        reply_type: OkReply

    oldNamespaceTypeNamespaceString:
        description:
            "If old command has namespace: type and type: namespacestring,
            the new namespace can be changed to concatenate_with_db"
        command_name: oldNamespaceTypeNamespaceString
        namespace: concatenate_with_db
        cpp_name: oldNamespaceTypeNamespaceString
        strict: true
        api_version: "1"
        reply_type: OkReply

    oldNamespaceTypeNamespaceStringTwo:
        description:
            "If old command has namespace: type and type: namespacestring,
            the new namespace can be changed to concatenate_with_db_or_uuid"
        command_name: oldNamespaceTypeNamespaceStringTwo
        namespace: concatenate_with_db_or_uuid
        cpp_name: oldNamespaceTypeNamespaceStringTwo
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeSuperset:
        description: "new command passes because its type is a superset
            of the old type"
        command_name: newTypeSuperset
        namespace: type
        type: intStringToIntStringBool
        cpp_name: newTypeSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeEnumSuperset:
        description: "new command passes because its type is an enum that is
            a superset of the corresponding old type's enum values"
        command_name: newTypeEnumSuperset
        namespace: type
        type: EnumSuperset
        cpp_name: newTypeEnumSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply

    newReplyTypeEnumOrStructIgnoreList:
        description:
            "the type is a non-enum or struct type in the old command, and an enum or struct
            in the new command, but the change is explicitly allowed"
        command_name: newReplyTypeEnumOrStructIgnoreList
        namespace: type
        type: namespacestring
        cpp_name: newReplyTypeEnumOrStructIgnoreList
        strict: true
        api_version: "1"
        reply_type: NewReplyTypeEnumOrStructIgnoreList

    newTypeFieldOptional:
        description:
            "new command type contains an optional field that is required
            in the corresponding old command and still passes"
        command_name: newTypeFieldOptional
        namespace: type
        type: OptionalNewField
        cpp_name: newTypeFieldOptional
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeFieldAddedOptional:
        description: "new optional type field is added and should pass"
        command_name: newTypeFieldAddedOptional
        namespace: type
        type: AddedOptionalTypeFieldStruct
        cpp_name: newTypeFieldAddedOptional
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeFieldStableOptional:
        description: "new command has an optional type field that is unstable
            in the corresponding old command and still passes"
        command_name: newTypeFieldStableOptional
        namespace: type
        type: StableOptionalTypeFieldStruct
        cpp_name: newTypeFieldStableOptional
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeFieldStableWithDefault:
        description: "new command has a required type field with a default value
            that is unstable in the corresponding old command and still passes"
        command_name: newTypeFieldStableWithDefault
        namespace: type
        type: StableWithDefaultTypeFieldStruct
        cpp_name: newTypeFieldStableWithDefault
        strict: true
        api_version: "1"
        reply_type: OkReply

    newTypeFieldUnstableIgnoreList:
        description:
            "new command contains an unstable type field that is stable in the corresponding
            old command but that is explicitly allowed"
        command_name: newTypeFieldUnstableIgnoreList
        namespace: type
        type: UnstableNewFieldReplyIgnoreList
        cpp_name: newTypeFieldUnstableIgnoreList
        strict: true
        api_version: "1"
        reply_type: OkReply

    removeTypeFieldUnstable:
        description: "new command removes type field that is unstable
            in the corresponding old command and still passes"
        command_name: removeTypeFieldUnstable
        namespace: type
        type: RemovedUnstableTypeFieldStruct
        cpp_name: removeTypeFieldUnstable
        strict: true
        api_version: "1"
        reply_type: OkReply

    removeTypeFieldInternal:
        description: "new command removes type field that is internal
            in the corresponding old command and still passes"
        command_name: removeTypeFieldInternal
        namespace: type
        type: RemovedInternalTypeFieldStruct
        cpp_name: removeTypeFieldInternal
        strict: true
        api_version: "1"
        reply_type: OkReply

    addedUnstableTypeField:
        description: "new command has a new unstable type field that does not
            exist in the corresponding old command and still passes"
        command_name: addedUnstableTypeField
        namespace: type
        type: AddedUnstableTypeFieldStruct
        cpp_name: addedUnstableTypeField
        strict: true
        api_version: "1"
        reply_type: OkReply

    addedInternalTypeField:
        description: "new command has a new internal type field that does not
            exist in the corresponding old command and still passes"
        command_name: addedInternalTypeField
        namespace: type
        type: AddedInternalTypeFieldStruct
        cpp_name: addedInternalTypeField
        strict: true
        api_version: "1"
        reply_type: OkReply

    keptUnstableTypeField:
        description: "new command has an unstable type field that also
            exists in the corresponding old command and still passes"
        command_name: keptUnstableTypeField
        namespace: type
        type: KeptUnstableTypeFieldStruct
        cpp_name: keptUnstableTypeField
        strict: true
        api_version: "1"
        reply_type: OkReply

    keptInternalTypeField:
        description: "new command has an internal type field that also
            exists in the corresponding old command and still passes"
        command_name: keptInternalTypeField
        namespace: type
        type: KeptInternalTypeFieldStruct
        cpp_name: keptInternalTypeField
        strict: true
        api_version: "1"
        reply_type: OkReply

    oldReplyFieldVariantType:
        description:
            "new command passes when its reply field type is not a variant type while
            the old reply field is a variant type"
        command_name: oldReplyFieldVariantType
        namespace: ignored
        cpp_name: oldReplyFieldVariantType
        strict: true
        api_version: "1"
        reply_type: OldVariantTypeReply

    newReplyFieldVariantNotSubsetIgnoreList:
        description:
            "the command's reply field type is a variant type that is not a subset of the old reply
            field variant types, but it's also on the unstable ignore list"
        command_name: newReplyFieldVariantNotSubsetIgnoreList
        namespace: ignored
        cpp_name: newReplyFieldVariantNotSubsetIgnoreList
        strict: true
        api_version: "1"
        reply_type: NewVariantNotSubsetReplyIgnoreList

    newReplyFieldVariantSubset:
        description:
            "new command when its reply field type is a variant type that is
            a subset of the old reply field variant types"
        command_name: newReplyFieldVariantSubset
        namespace: ignored
        cpp_name: newReplyFieldVariantSubset
        strict: true
        api_version: "1"
        reply_type: NewVariantSubsetReply

    newReplyFieldVariantSubsetTwo:
        description:
            "new command when its reply field type is a variant type that is
            a subset of the old reply field variant types"
        command_name: newReplyFieldVariantSubsetTwo
        namespace: ignored
        cpp_name: newReplyFieldVariantSubsetTwo
        strict: true
        api_version: "1"
        reply_type: NewVariantSubsetReplyTwo

    newReplyFieldVariantSubsetThree:
        description:
            "new command when its reply field type is a variant type that is
            a subset of the old reply field variant types"
        command_name: newReplyFieldVariantSubsetThree
        namespace: ignored
        cpp_name: newReplyFieldVariantSubsetThree
        strict: true
        api_version: "1"
        reply_type: NewVariantSubsetReplyThree

    newReplyFieldArrayVariantSubset:
        description:
            "new command when its reply field type is a array<variant> type that is
            a subset of the old reply field array<variant> types"
        command_name: newReplyFieldArrayVariantSubset
        namespace: ignored
        cpp_name: newReplyFieldArrayVariantSubset
        strict: true
        api_version: "1"
        reply_type: NewArrayVariantSubsetReply

    replyFieldVariantRecursive:
        description:
            "new command passes when its reply field type is a variant type that is
            compatible with the old reply field variant type"
        command_name: replyFieldVariantRecursive
        namespace: ignored
        cpp_name: replyFieldVariantRecursive
        strict: true
        api_version: "1"
        reply_type: VariantRecursiveReply

    oldReplyFieldVariantStruct:
        description:
            "new command passes if it doesn't have a variant struct type while the
            old command does"
        command_name: oldReplyFieldVariantStruct
        namespace: ignored
        cpp_name: oldReplyFieldVariantStruct
        strict: true
        api_version: "1"
        reply_type: OldVariantStructReply

    replyFieldVariantStructRecursive:
        description:
            "new command passes when its reply field type has a variant struct type
            that is compatible with the old reply field variant struct type"
        command_name: replyFieldVariantStructRecursive
        namespace: ignored
        cpp_name: replyFieldVariantStructRecursive
        strict: true
        api_version: "1"
        reply_type: VariantStructRecursiveReply

    replyFieldVariantDifferentStructIgnoreList:
        description:
            "the old field has a non-variant type and the new field has a variant type but the
            change is explicitly allowed"
        command_name: replyFieldVariantDifferentStructIgnoreList
        namespace: ignored
        cpp_name: replyFieldVariantDifferentStructIgnoreList
        strict: true
        api_version: "1"
        reply_type: VariantDifferentStructReplyIgnoreList

    replyFieldNonVariantToVariantIgnoreList:
        description:
            "the old and new field have different variant struct types but the change is
            explicitly allowed"
        command_name: replyFieldNonVariantToVariantIgnoreList
        namespace: ignored
        cpp_name: replyFieldNonVariantToVariantIgnoreList
        strict: true
        api_version: "1"
        reply_type: NonVariantToVariantReplyIgnoreList

    replyFieldNonEnumToEnumIgnoreList:
        description:
            "the old field has a non-enum type and the new field has an enum type but the
            change is explicitly allowed"
        command_name: replyFieldNonEnumToEnumIgnoreList
        namespace: ignored
        cpp_name: replyFieldNonEnumToEnumIgnoreList
        strict: true
        api_version: "1"
        reply_type: NonEnumToEnumReplyIgnoreList

    newlyAddedReplyFieldTypeBsonAnyAllowed:
        description:
            "command passes because it has a newly added reply field type has a bson_serialization_type
            that contains 'any' that is explicitly allowed"
        command_name: newlyAddedReplyFieldTypeBsonAnyAllowed
        namespace: ignored
        cpp_name: newlyAddedReplyFieldTypeBsonAnyAllowed
        strict: true
        api_version: "1"
        reply_type: NewlyAddedBsonSerializationTypeAnyReply

    oldUnstableReplyFieldTypeChanges:
        description: "command passes when it has an old unstable reply field with incompatible type changes"
        command_name: oldUnstableReplyFieldTypeChanges
        namespace: ignored
        cpp_name: oldUnstableReplyFieldTypeChanges
        strict: true
        api_version: "1"
        reply_type: OldUnstableTypeChangesReply

    oldInternalReplyFieldTypeChanges:
        description: "command passes when it has an old internal reply field with incompatible type changes"
        command_name: oldInternalReplyFieldTypeChanges
        namespace: ignored
        cpp_name: oldInternalReplyFieldTypeChanges
        strict: true
        api_version: "1"
        reply_type: OldInternalTypeChangesReply

    newUnstableReplyFieldTypeChangesIgnoreList:
        description:
            "command has an old stable reply field with incompatible type changes but it is also
            in the ignore list"
        command_name: newUnstableReplyFieldTypeChangesIgnoreList
        namespace: ignored
        cpp_name: newUnstableReplyFieldTypeChangesIgnoreList
        strict: true
        api_version: "1"
        reply_type: NewUnstableTypeChangesReplyIgnoreList

    commandAllowedAnyTypes:
        description: "new command that has parameter and reply type with
            explicitly allowed 'any' bson serialization type passes"
        command_name: commandAllowedAnyTypes
        namespace: type
        type: bsonSerializationTypeAnyAllowed
        cpp_name: commandAllowedAnyTypes
        strict: true
        api_version: "1"
        reply_type: BsonSerializationTypeAnyReply
        fields:
            anyTypeParam:
                type: bsonSerializationTypeAnyAllowed
                stability: stable

    commandAllowedAnyTypesWithVariant:
        description: "command that has reply variant types with
            explicitly allowed 'any' bson serialization type passes"
        command_name: commandAllowedAnyTypesWithVariant
        namespace: ignored
        cpp_name: commandAllowedAnyTypesWithVariant
        strict: true
        api_version: "1"
        reply_type: BsonSerializationTypeAnyWithVariantReply

    newParamVariantSuperset:
        description:
            "new command passes because its parameter type is a variant type that is
            a superset of the old parameter variant types"
        command_name: newParamVariantSuperset
        namespace: ignored
        cpp_name: newParamVariantSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            variantSupersetParam:
                stability: stable
                type:
                    variant: [int, bool, string, array<string>]

    newParamVariantSupersetTwo:
        description:
            "new command passes because its parameter type is a variant type that is
            a superset of the old parameter variant types"
        command_name: newParamVariantSupersetTwo
        namespace: ignored
        cpp_name: newParamVariantSupersetTwo
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            variantSupersetParam:
                stability: stable
                type:
                    variant: [int, string, bool, double, array<string>]

    oldParamTypeNotVariant:
        description:
            "new command passes because its parameter type is variant while the old
            param type is not"
        command_name: newParamTypeNotVariant
        namespace: ignored
        cpp_name: newParamTypeNotVariant
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            variantParam:
                stability: stable
                type:
                    variant: [int, string, array<string>]

    newParamVariantRecursive:
        description:
            "new command passes because its param type is a variant type that is
            compatible with the old param variant type"
        command_name: newParamVariantRecursive
        namespace: ignored
        cpp_name: newParamVariantRecursive
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            variantRecursiveParam:
                stability: stable
                type:
                    variant:
                        [
                            int,
                            intStringToIntStringBool,
                            array<intStringToIntStringBool>,
                            array<string>,
                        ]

    newParamVariantStructSuperset:
        description:
            "new command passes because its parameter type is a variant type that is
            a subset of the old parameter variant types"
        command_name: newParamVariantStructSuperset
        namespace: ignored
        cpp_name: newParamVariantStructSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            variantStructSupersetParam:
                stability: stable
                type:
                    variant:
                        [
                            int,
                            string,
                            NewCommandParameterStruct,
                            array<NewCommandParameterStruct>,
                            array<string>,
                        ]

    newParamVariantStructRecursive:
        description:
            "new command passes because its parameter type has a variant
            struct type that is compatible with the old parameter variant
            struct type"
        command_name: newParamVariantStructRecursive
        namespace: ignored
        cpp_name: newParamVariantStructRecursive
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            variantStructRecursiveParam:
                stability: stable
                type:
                    variant:
                        [
                            int,
                            string,
                            StructCommandParameterTypeRecursive,
                            array<StructCommandParameterTypeRecursive>,
                            array<string>,
                        ]

    newCommandTypeVariantSuperset:
        description:
            "new command passes because its type is a variant type that is
            a superset of the old type variant types"
        command_name: newCommandTypeVariantSuperset
        namespace: type
        type: VariantSupersetStruct
        cpp_name: newCommandTypeVariantSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply

    newCommandTypeVariantSupersetTwo:
        description:
            "new command passes because its type is a variant type that is
            a superset of the old command type variant types"
        command_name: newCommandTypeVariantSupersetTwo
        namespace: type
        type: VariantSupersetStructTwo
        cpp_name: newCommandTypeVariantSupersetTwo
        strict: true
        api_version: "1"
        reply_type: OkReply

    oldCommandTypeNotVariant:
        description:
            "new command passes because its type is variant while the old
            type is not"
        command_name: oldCommandTypeNotVariant
        namespace: type
        type: OldTypeNotVariantStruct
        cpp_name: oldCommandTypeNotVariant
        strict: true
        api_version: "1"
        reply_type: OkReply

    newCommandTypeVariantRecursive:
        description:
            "new command passes because its type is a variant type that is passes
            compatible with the old command type variant type"
        command_name: newCommandTypeVariantRecursive
        namespace: type
        type: VariantRecursiveStruct
        cpp_name: newCommandTypeVariantRecursive
        strict: true
        api_version: "1"
        reply_type: OkReply

    newCommandTypeVariantStructSuperset:
        description:
            "new command passes because its type is a variant type that is
            a superset of the old command type variant types"
        command_name: newCommandTypeVariantStructSuperset
        namespace: type
        type: VariantStructSupersetStruct
        cpp_name: newCommandTypeVariantStructSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply

    newCommandTypeVariantStructSupersetTwo:
        description:
            "new command passes because its type is a variant type that is
            a superset of the old command type variant types"
        command_name: newCommandTypeVariantStructTwoSuperset
        namespace: type
        type: VariantStructSupersetTwoStruct
        cpp_name: newCommandTypeVariantStructTwoSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply

    newCommandTypeArrayVariantStructSuperset:
        description:
            "new command passes because its type is a array<variant> type that is
            a superset of the old command type array<variant> types"
        command_name: newCommandTypeArrayVariantStructSuperset
        namespace: type
        type: ArrayVariantStructSupersetTwoStruct
        cpp_name: newCommandTypeArrayVariantStructSuperset
        strict: true
        api_version: "1"
        reply_type: OkReply

    newCommandTypeVariantStructRecursive:
        description: "new command passes because its type has a variant
            struct type that is compatible with the old command type variant
            struct type"
        command_name: newCommandTypeVariantStructRecursive
        namespace: type
        type: VariantStructRecursiveStruct
        cpp_name: newCommandTypeVariantStructRecursive
        strict: true
        api_version: "1"
        reply_type: OkReply

    oldReplyFieldValidator:
        description:
            "new command passes because it contains a reply field that does not contain a validator
            that is present in the old reply field"
        command_name: oldReplyFieldValidator
        namespace: ignored
        cpp_name: oldReplyFieldValidator
        strict: true
        api_version: "1"
        reply_type: OldValidatorStruct

    replyFieldValidatorsEqual:
        description:
            "new command passes because it contains a reply field that contains a validator
            that is exactly equal to the old reply field validator"
        command_name: replyFieldValidatorsEqual
        namespace: ignored
        cpp_name: replyFieldValidatorsEqual
        strict: true
        api_version: "1"
        reply_type: ValidatorsEqualStruct

    simpleCheckEqual:
        description: "new command passes because its simple check is equal to
            the old check"
        command_name: simpleCheckEqual
        namespace: ignored
        cpp_name: simpleCheckEqual
        strict: true
        api_version: "1"
        reply_type: OkReply
        access_check:
            simple:
                check: check

    simplePrivilegeEqual:
        description:
            "new command passes because its simple privilege is equal to
            the old privilege"
        command_name: simplePrivilegeEqual
        namespace: ignored
        cpp_name: simplePrivilegeEqual
        strict: true
        api_version: "1"
        reply_type: OkReply
        access_check:
            simple:
                privilege:
                    resource_pattern: resourcePattern
                    action_type: [actionTypeThree, actionTypeOne, actionTypeTwo]

    newSimpleActionTypeSubset:
        description:
            "new command passes because its simple privilege action_type is a subset
            of the old privilege action_type"
        command_name: newSimpleActionTypeSubset
        namespace: ignored
        cpp_name: newSimpleActionTypeSubset
        strict: true
        api_version: "1"
        reply_type: OkReply
        access_check:
            simple:
                privilege:
                    resource_pattern: resourcePattern
                    action_type: [actionTypeThree, actionTypeOne]

    ArrayCommand:
        description:
            "new command will pass because the command type and the field type are of
            ArrayType of a type that is compatible with the old command."
        command_name: arrayCommand
        namespace: type
        type: array<ArrayTypeStruct>
        cpp_name: arrayCommand
        strict: true
        api_version: "1"
        fields:
            parameterStruct:
                type: array<ArrayTypeStruct>
                stability: stable
        reply_type: ArrayTypeStruct

    complexActionTypesSubset:
        description: "new command passes when the action types are a subset"
        command_name: complexActionTypesSubset
        namespace: ignored
        cpp_name: complexActionTypesSubset
        strict: true
        api_version: "1"
        reply_type: OkReply
        access_check:
            complex:
                - privilege:
                      resource_pattern: resourcePatternTwo
                      action_type: actionTypeOne
                - check: checkOne
                - privilege:
                      resource_pattern: resourcePattern
                      action_type:
                          [actionTypeOne, actionTypeTwo, actionTypeThree]

    complexActionTypesSubsetTwo:
        description: "new command passes when the action types are a subset"
        command_name: complexActionTypesSubsetTwo
        namespace: ignored
        cpp_name: complexActionTypesSubsetTwo
        strict: true
        api_version: "1"
        reply_type: OkReply
        access_check:
            complex:
                - privilege:
                      resource_pattern: resourcePatternTwo
                      action_type: [actionTypeOne, actionTypeTwo]
                - check: checkOne
                - privilege:
                      resource_pattern: resourcePattern
                      action_type: [actionTypeOne, actionTypeTwo]

    complexChecksSubset:
        description: "new command passes when the complex checks are a subset of the old checks"
        command_name: complexChecksSubset
        namespace: ignored
        cpp_name: complexChecksSubset
        strict: true
        api_version: "1"
        reply_type: OkReply
        access_check:
            complex:
                - check: checkThree
                - check: checkTwo

    complexChecksSupersetAllowed:
        description:
            "new command passes when the the complex checks are a superset of the old
            checks but all the additional checks are explicitly allowed."
        command_name: complexChecksSupersetAllowed
        namespace: ignored
        cpp_name: complexChecksSupersetAllowed
        strict: true
        api_version: "1"
        reply_type: OkReply
        access_check:
            complex:
                - check: checkOne
                - check: checkTwo
                - check: checkThree
                - privilege:
                      resource_pattern: resourcePatternOne
                      action_type: [actionTypeOne]
                - privilege:
                      resource_pattern: resourcePatternTwo
                      action_type: [actionTypeTwo]
                - privilege:
                      resource_pattern: resourcePatternThree
                      action_type: [actionTypeThree]

    addedAggStage:
        description: "new command passes when a agg stage is added"
        command_name: addedAggStage
        namespace: ignored
        cpp_name: addedAggStage
        strict: true
        api_version: "1"
        reply_type: OkReply
        access_check:
            complex:
                - privilege:
                      resource_pattern: resourcePatternTwo
                      action_type: [actionTypeOne, actionTypeTwo]
                - check: checkOne
                - privilege:
                      resource_pattern: resourcePattern
                      action_type: [actionTypeOne, actionTypeTwo]
                - privilege:
                      agg_stage: aggStage
                      resource_pattern: resourcePatternThree
                      action_type: actionTypeThree

    removedAggStage:
        description: "new command passes when a agg stage is removed"
        command_name: removedAggStage
        namespace: ignored
        cpp_name: removedAggStage
        strict: true
        api_version: "1"
        reply_type: OkReply
        access_check:
            complex:
                - privilege:
                      resource_pattern: resourcePatternTwo
                      action_type: [actionTypeOne, actionTypeTwo]
                - check: checkOne
                - privilege:
                      resource_pattern: resourcePattern
                      action_type: [actionTypeOne, actionTypeTwo]

    removedComplexPrivilege:
        description: "new command passes when a complex privilege is removed"
        command_name: removedComplexPrivilege
        namespace: ignored
        cpp_name: removedComplexPrivilege
        strict: true
        api_version: "1"
        reply_type: OkReply
        access_check:
            complex:
                - check: checkOne
                - privilege:
                      resource_pattern: resourcePattern
                      action_type:
                          [actionTypeOne, actionTypeTwo, actionTypeThree]

    addedAccessCheckField:
        description: "new command passes because it adds the access_check field when the api_version is not '1'"
        command_name: addedAccessCheckField
        namespace: ignored
        cpp_name: addedAccessCheckField
        strict: true
        api_version: ""
        reply_type: OkReply
        access_check:
            none: true

    newReplyFieldMissingUnstableField:
        description:
            "new command passes because it does not have an api_version even though it
            contains a reply field that is missing the 'stability' field"
        command_name: newReplyFieldMissingUnstableField
        namespace: ignored
        cpp_name: newReplyFieldMissingUnstableField
        strict: true
        api_version: ""
        reply_type: MissingUnstableFieldNewFieldStruct

    oldReplyFieldMissingUnstableField:
        description:
            "old command passes even though it contains a reply field that is missing the
            'stability' field"
        command_name: oldReplyFieldMissingUnstableField
        namespace: ignored
        cpp_name: oldReplyFieldMissingUnstableField
        strict: true
        api_version: "1"
        reply_type: MissingUnstableFieldOldFieldStruct

    newCommandTypeFieldMissingUnstableField:
        description:
            "new command passes because it does not have an api_version even though it
            contains a command type field that is missing the 'stability' field"
        command_name: newCommandTypeFieldMissingUnstableField
        namespace: type
        cpp_name: newCommandTypeFieldMissingUnstableField
        strict: true
        api_version: ""
        type: MissingUnstableFieldNewFieldStruct
        reply_type: OkReply

    oldCommandTypeFieldMissingUnstableField:
        description: "old command passes even though it
            contains a command type field that is missing the 'stability' field"
        command_name: oldCommandTypeFieldMissingUnstableField
        namespace: type
        cpp_name: oldCommandTypeFieldMissingUnstableField
        strict: true
        api_version: "1"
        type: MissingUnstableFieldOldFieldStruct
        reply_type: OkReply

    newParameterMissingUnstableField:
        description:
            "new command passes because it does not have an api_version even though it
            contains a parameter that is missing the 'stability' field"
        command_name: newParameterMissingUnstableField
        namespace: ignored
        cpp_name: newParameterMissingUnstableField
        strict: true
        api_version: ""
        fields:
            missingUnstableFieldNewParameter:
                type: int
        reply_type: OkReply

    oldParameterMissingUnstableField:
        description: "old command passes even though it
            contains a parameter that is missing the 'stability' field"
        command_name: oldParameterMissingUnstableField
        namespace: ignored
        cpp_name: oldParameterMissingUnstableField
        strict: true
        api_version: "1"
        fields:
            missingUnstableFieldOldParameter:
                type: int
                stability: stable
        reply_type: OkReply

    chainedStructCompatible:
        description:
            "new command passes because it contains a chained struct that has compatible
            fields"
        command_name: chainedStructCompatible
        namespace: ignored
        cpp_name: chainedStructCompatible
        strict: true
        api_version: "1"
        reply_type: OkReply
        chained_structs:
            VariantStructRecursiveStruct: VariantStructRecursiveStruct

    replyWithCompatibleChainedStruct:
        description:
            "new command passes because its reply contains a chained struct that has
            compatible fields"
        command_name: replyWithCompatibleChainedStruct
        namespace: ignored
        cpp_name: replyWithCompatibleChainedStruct
        strict: true
        api_version: "1"
        reply_type: CompatibleChainedStructReply

    typeWithCompatibleChainedStruct:
        description:
            "new command passes because its type contains a chained struct that has
            compatible fields"
        command_name: typeWithCompatibleChainedStruct
        namespace: type
        type: CompatibleChainedStructType
        cpp_name: typeWithCompatibleChainedStruct
        strict: true
        api_version: "1"
        reply_type: OkReply

    newParameterOptionalBool:
        description: "new command can add parameters of type optionalBoolean"
        command_name: newParameterOptionalBool
        namespace: ignored
        cpp_name: newParameterOptionalBool
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            flag:
                type: optionalBool
                stability: stable

    newReplyOptionalBool:
        description: "new command can add reply fields of type optionalBoolean"
        command_name: newReplyOptionalBool
        namespace: ignored
        cpp_name: newReplyOptionalBool
        strict: true
        api_version: "1"
        reply_type: NewOptionalBoolStruct

    newCommandTypeOptionalBool:
        description: "new command can add type fields of type optionalBoolean"
        command_name: newCommandTypeOptionalBool
        namespace: type
        type: NewOptionalBoolStruct
        cpp_name: newCommandTypeOptionalBool
        strict: true
        api_version: "1"
        reply_type: OkReply

    optionalBoolParameterEquivalence:
        description: "new command gets first two parameter types swapped"
        command_name: optionalBoolParameterEquivalence
        namespace: ignored
        cpp_name: optionalBoolParameterEquivalence
        strict: true
        api_version: "1"
        fields:
            flag1:
                stability: stable
                type: optionalBool
            flag2:
                stability: stable
                type: bool
                optional: true
            flag3:
                stability: stable
                type: optionalBool
        reply_type: OkReply

    optionalBoolReplyEquivalence:
        description: "new command gets first two reply field types swapped"
        command_name: optionalBoolReplyEquivalence
        namespace: ignored
        cpp_name: optionalBoolReplyEquivalence
        strict: true
        api_version: "1"
        reply_type: OptionalBoolEquivalenceStruct

    optionalBoolCommandTypeEquivalence:
        description: "new command gets first two type field types swapped"
        command_name: optionalBoolCommandTypeEquivalence
        namespace: type
        type: OptionalBoolEquivalenceStruct
        cpp_name: optionalBoolCommandTypeEquivalence
        strict: true
        api_version: "1"
        reply_type: OkReply

    boolToOptionalBoolParameter:
        description: "new command parameter has type optionalBool instead of bool"
        command_name: boolToOptionalBoolParameter
        namespace: ignored
        cpp_name: boolToOptionalBoolParameter
        strict: true
        api_version: "1"
        fields:
            flag:
                stability: stable
                type: optionalBool
        reply_type: OkReply

    boolToOptionalBoolCommandType:
        description: "new command type has type optionalBool instead of bool"
        command_name: boolTooptionalBoolCommandType
        namespace: type
        type: BoolToOptionalBoolStruct
        cpp_name: boolTooptionalBoolCommandType
        strict: true
        api_version: "1"
        reply_type: OkReply

    optionalBoolToBoolReply:
        description: "new command gets bool reply instead of optionalBool"
        command_name: optionalBoolToBoolReply
        namespace: ignored
        cpp_name: optionalBoolToBoolReply
        strict: true
        api_version: "1"
        reply_type: OptionalBoolToBoolStruct

    commandWithNewArrayTypeParameterAndArrayTypeReply:
        description: "new command adds a new ArrayType parameter and a reply type with an ArrayType"
        command_name: commandWithNewArrayTypeParameterAndArrayTypeReply
        namespace: type
        type: array<int>
        cpp_name: commandWithNewArrayTypeParameterAndArrayTypeReply
        strict: true
        api_version: "1"
        fields:
            newArrayTypeParameter:
                type: array<int>
                optional: true
                stability: stable
        reply_type: ReplyWithNewArrayTypeField

    commandWithNewNestedArrayTypeParameterAndNestedArrayTypeReply:
        description: "new command adds a new parameter with a nested ArrayType field and a reply type with a nested ArrayType"
        command_name: commandWithNewNestedArrayTypeParameterAndNestedArrayTypeReply
        namespace: type
        type: ArrayTypeStruct
        cpp_name: commandWithNewNestedArrayTypeParameterAndNestedArrayTypeReply
        strict: true
        api_version: "1"
        fields:
            newNestedArrayTypeParameter:
                type: ArrayTypeStruct
                optional: true
                stability: stable
        reply_type: ReplyWithNewNestedArrayTypeField

    commandWithUnstableRequiredParameter:
        description: "the same unstable required field is present in both versions of the command"
        command_name: commandWithUnstableRequiredParameter
        namespace: ignored
        cpp_name: commandWithUnstableRequiredParameter
        strict: true
        api_version: "1"
        reply_type: OkReply
        fields:
            unstableRequiredParam:
                type: string
                stability: unstable
                optional: false
