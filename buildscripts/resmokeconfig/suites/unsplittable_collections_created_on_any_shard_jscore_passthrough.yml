test_kind: js_test

selector:
  roots:
    - jstests/core/**/*.js
    - jstests/core_sharding/**/*.js
    - jstests/fle2/**/*.js
    - src/mongo/db/modules/*/jstests/fle2/**/*.js
    - jstests/libs/random_data_shard_suite_selftest.js

  exclude_files:
    # These tests are run in sharded_jscore_txns.
    - jstests/core/txns/**/*.js

    # The following tests fail because a certain command or functionality is not supported on
    # mongos. This command or functionality is placed in a comment next to the failing test.
    - jstests/core/**/apitest_db.js # serverStatus output doesn't have storageEngine.
    - jstests/core/**/check_shard_index.js # checkShardingIndex.
    - jstests/core/**/compact_keeps_indexes.js # compact.
    - jstests/core/**/currentop.js # uses fsync.
    - jstests/core/**/dbhash.js # dbhash.
    - jstests/core/**/fsync.js # uses fsync.
    - jstests/core/**/geo_s2cursorlimitskip.js # profiling.
    - jstests/core/**/geo_update_btree2.js # notablescan.
    - jstests/core/**/queryoptimizera.js # "local" database.
    - jstests/core/**/startup_log.js # "local" database.
    - jstests/core/**/query/top/top.js # top.
    # The following tests fail because mongos behaves differently from mongod when testing certain
    # functionality. The differences are in a comment next to the failing test.
    - jstests/core/**/geo_2d_explain.js # executionSuccess in different spot in explain().
    - jstests/core/**/geo_s2explain.js # inputStage in different spot in explain().
    - jstests/core/**/geo_s2sparse.js # keysPerIndex in different spot in validate().
    - jstests/core/**/operation_latency_histogram.js # Stats are counted differently on mongos, SERVER-24880.
    - jstests/core/**/or_to_in.js # queryPlanner in different spot in explain()

    # TODO: SERVER-79805 Reenable once explain provides information for the merging part of a split pipeline.
    - jstests/core/query/explain/explain_find_trivially_false_predicates_in_agg_pipelines.js
    - jstests/core/query/query_settings/query_settings_index_application_aggregate.js

    # TODO: SERVER-83582 Enable after fix
    - jstests/core/write/insert/insert_id_undefined.js

    # TODO: SERVER-85382 re-enable this test with tracked collection once create collection coordinator
    # support all timeseries/bucket namespace cases.
    - jstests/core/timeseries/ddl/timeseries_user_system_buckets.js

    # TODO: SERVER-85773 Reenable the following test once `cloneCollectionAsCapped` is supported on any shard
    - jstests/core/ddl/clone_collection_as_capped.js

  exclude_with_any_tags:
    - assumes_standalone_mongod
    - assumes_against_mongod_not_mongos
    # system.profile collection doesn't exist on mongos.
    - requires_profiling
    # system.js stored functions only work for collections that live on the db-primary shard (SERVER-83269)
    - requires_system_dot_js_stored_functions
    - assumes_no_track_upon_creation

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - CheckMetadataConsistencyInBackground
      - ValidateCollections
  config:
    shell_options:
      global_vars:
        TestData:
          implicitlyTrackUnshardedCollectionOnCreation: true
          createsUnsplittableCollectionsOnRandomShards: true
  hooks:
    - class: CheckReplDBHash
    - class: CheckMetadataConsistencyInBackground
    - class: ValidateCollections
    - class: CheckOrphansDeleted
    - class: CleanEveryN
      n: 20
  fixture:
    class: ShardedClusterFixture
    num_shards: 2
    enable_balancer: false
    mongos_options:
      set_parameters:
        enableTestCommands: 1
        failpoint.createUnshardedCollectionRandomizeDataShard:
          mode: alwaysOn
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        failpoint.createUnshardedCollectionRandomizeDataShard:
          mode: alwaysOn
