test_kind: js_test
# This suite starts a 5-node replica set and uses DoReconfigInBackground hook to periodically run
# safe reconfigs against the primary. These reconfigs change the number of voting nodes in the
# replica set, which changes the voting majority used to satisfy the config commitment check and
# oplog commitment check.

selector:
  roots:
    - jstests/core/**/*.js
    - jstests/fle2/**/*.js
    - src/mongo/db/modules/*/jstests/fle2/**/*.js
  exclude_files:
    # Transactions do not support retryability of individual operations.
    # TODO: Remove this once it is supported (SERVER-33952).
    - jstests/core/txns/**/*.js
    # The set_param1.js test attempts to compare the response from running the {getParameter: "*"}
    # command multiple times, which may observe the change to the "transactionLifetimeLimitSeconds"
    # server parameter.
    - jstests/core/**/set_param1.js

    # These test run commands using legacy queries, which are not supported on sessions.
    - jstests/core/**/query/comment_field.js
    - jstests/core/**/query/exhaust.js

    # Unacknowledged writes prohibited in an explicit session.
    - jstests/core/**/batch_write_command_w0.js
    - jstests/core/**/crud_api.js

    # TODO: SERVER-71487 Legacy shell does not carry over encryption information through
    # getMores in reconfig suites.
    - src/mongo/db/modules/*/jstests/fle2/query/*getMore*.js

  exclude_with_any_tags:
    - assumes_standalone_mongod
    - assumes_read_preference_unchanged
    - requires_sharding

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - CheckReplOplogs
      - ValidateCollections
  config:
    shell_options:
      eval: >-
        globalThis.testingReplication = true;
        await import("jstests/libs/override_methods/network_error_and_txn_override.js");
        await import("jstests/libs/override_methods/enable_sessions.js");
      global_vars:
        TestData:
          networkErrorAndTxnOverrideConfig:
            backgroundReconfigs: true
          sessionOptions:
            # Force DBClientRS to find the primary for non-write commands to make sure reads still
            # work as expected during reconfigs.
            readPreference:
              mode: "primary"
  hooks:
    # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
    # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
    # validating the entire contents of the collection.
    - class: DoReconfigInBackground
      shell_options:
        nodb: ""
    - class: CheckReplOplogs
    - class: CheckReplDBHash
    - class: ValidateCollections
    - class: CleanEveryN
      n: 20
  fixture:
    class: ReplicaSetFixture
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        logComponentVerbosity:
          replication:
            heartbeats: 2
    all_nodes_electable: true
    num_nodes: 5
