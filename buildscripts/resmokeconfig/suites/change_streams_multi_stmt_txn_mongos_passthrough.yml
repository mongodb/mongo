test_kind: js_test

selector:
  roots:
    - jstests/change_streams/**/*.js
  exclude_files:
    # Parallel Shell - we do not signal the override to end a txn when a parallel shell closes.
    - jstests/change_streams/only_wake_getmore_for_relevant_changes.js
  exclude_with_any_tags:
    # These tests would fail with "Cowardly refusing to override write concern of command: ..."
    - assumes_write_concern_unchanged
    # No need to use a passthrough to add transactions to a test that already has its own
    # transactions.
    - uses_transactions
    # These tests make assumptions about change stream results that are no longer true once operations
    # get bundled into transactions.
    - change_stream_does_not_expect_txns
    # Exclude any that assume sharding is disabled
    - assumes_against_mongod_not_mongos

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - CheckReplOplogs
      - CheckMetadataConsistencyInBackground
      - ValidateCollections
  config:
    shell_options:
      global_vars:
        TestData:
          networkErrorAndTxnOverrideConfig:
            wrapCRUDinTransactions: true
      # Enable the transactions passthrough.
      eval: >-
        globalThis.testingReplication = true;
        await import("jstests/libs/override_methods/enable_sessions.js");
        await import("jstests/libs/override_methods/txn_passthrough_cmd_massage.js");
        await import("jstests/libs/override_methods/network_error_and_txn_override.js");
        await import("jstests/libs/override_methods/implicit_filter_eot_changestreams.js");
      # Set longer host discovery time to handle change stream resumable errors.
      setShellParameter: defaultFindReplicaSetHostTimeoutMS=120000
  hooks:
    # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
    # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
    # validating the entire contents of the collection.
    - class: CheckReplOplogs
    - class: CheckReplDBHash
    - class: CheckMetadataConsistencyInBackground
    - class: RunQueryStats
    - class: ValidateCollections
    - class: CheckOrphansDeleted
    - class: CleanEveryN
      n: 20
  fixture:
    class: ShardedClusterFixture
    # Use two shards to make sure we will only talk to the primary shard for the database and will
    # not delay changes to wait for notifications or a clock advancement from other shards.
    num_shards: 2
    mongos_options:
      bind_ip_all: ""
      set_parameters:
        enableTestCommands: 1
    mongod_options:
      bind_ip_all: ""
      set_parameters:
        enableTestCommands: 1
        periodicNoopIntervalSecs: 1
        writePeriodicNoops: true
