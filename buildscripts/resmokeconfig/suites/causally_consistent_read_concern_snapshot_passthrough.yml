test_kind: js_test

selector:
  roots:
    - jstests/core/**/*.js
    - jstests/fle2/**/*.js
    - src/mongo/db/modules/*/jstests/fle2/**/*.js
  exclude_files:
    # Only the first command in a transaction allows readConcern and this suite only tests
    # non-transaction snapshot reads.
    - jstests/core/txns/**/*.js
    # These tests use benchRun(), which isn't configured to use the overridden writeConcern.
    - jstests/core/**/bench_test*.js
    - jstests/core/**/benchrun_pipeline_updates.js # benchRun() used for writes
  exclude_with_any_tags:
    - assumes_standalone_mongod
    # The next two tags correspond to the special errors thrown by the
    # set_read_and_write_concerns.js override when it refuses to replace the readConcern or
    # writeConcern of a particular command. Above each tag are the message(s) that cause the tag to be
    # warranted.
    ##
    # "Cowardly refusing to override read concern of command: ..."
    - assumes_read_concern_unchanged
    # "Cowardly refusing to override write concern of command: ..."
    - assumes_write_concern_unchanged
    - does_not_support_causal_consistency
    # Reading from capped collections with readConcern snapshot is not supported.
    - requires_capped
    # These tests attempt to read from the "system.profile" collection which is a capped collection.
    - requires_profiling

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - CheckReplOplogs
      - ValidateCollections
  config:
    shell_options:
      global_vars:
        TestData:
          defaultReadConcernLevel: snapshot
      eval: >-
        globalThis.testingReplication = true;
        await import('jstests/libs/override_methods/set_read_and_write_concerns.js');
        await import("jstests/libs/override_methods/enable_causal_consistency.js");
  hooks:
    # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
    # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
    # validating the entire contents of the collection.
    - class: CheckReplOplogs
    - class: CheckReplDBHash
    - class: ValidateCollections
    - class: CleanEveryN
      n: 20
  fixture:
    class: ReplicaSetFixture
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        writePeriodicNoops: 1
        minSnapshotHistoryWindowInSeconds: 3600
    num_nodes: 2
