test_kind: fsm_workload_test

# This suite connects to a running mongod replica set to test backup_restore.
# It must specify resmoke.py options '--shellConnPort' or '--shellConnString'.

selector:
  roots:
    - jstests/concurrency/fsm_workloads/**/*.js
  exclude_files:
    # Compact workloads can slow down the system and cause timeouts.
    - jstests/concurrency/fsm_workloads/compact/auto_compact.js
    - jstests/concurrency/fsm_workloads/compact/compact.js

    # These workloads use up to 100MB of memory, which can overwhelm test hosts.
    - jstests/concurrency/fsm_workloads/query/agg/agg_sort.js

    # These workloads kill random cursors.
    - jstests/concurrency/fsm_workloads/query/kill_multicollection_aggregation.js
    - jstests/concurrency/fsm_workloads/query/invalidated_cursors.js
    - jstests/concurrency/fsm_workloads/query/globally_managed_cursors.js

    # These workloads use a verbose log level.
    - jstests/concurrency/fsm_workloads/ddl/rename_collection/collection_uuid.js

    # TODO BACKPORT-25689: reenable this workload after backport to 8.0.
    - jstests/concurrency/fsm_workloads/query/remove/update_and_batched_delete.js

  exclude_with_any_tags:
    - requires_standalone
    # The ability to shut down a node while its in the middle of applying ops is required for
    # backup_restore. The workloads which perform certain operations which can cause the test to fail
    # have been excluded.
    # Background indexes can still be running when the mongod is shut down (SERVER-24639).
    - creates_background_indexes
    # Workloads that use a write concern will fail since the workload only connects to the primary.
    - uses_write_concern
    # Sharding is not supported for backup_restore.
    - requires_sharding
    # Transactions are not supported for backup_restore because the dbhash check can hang when
    # running the collMod operation due to an idle transaction on a collection.
    - uses_transactions

executor:
  config:
    shell_options:
      global_vars:
        TestData:
          # The backup_restore*.js tests are expected to run the FSM workloads directly against the
          # primary of the replica set without being aware of the other members.
          discoverTopology: False
  hooks:
    - class: WaitForReplication
    - class: CleanupConcurrencyWorkloads
      exclude_dbs:
        - crud
  fixture:
    class: ExternalFixture
