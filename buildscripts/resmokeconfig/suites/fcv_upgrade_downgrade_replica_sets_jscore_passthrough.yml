test_kind: js_test

# Cloned from buildscripts/resmokeconfig/suites/replica_sets_jscore_passthrough.yml
# to run FCV upgrade downgrade in the background

selector:
  roots:
    - jstests/core/**/*.js
    - jstests/fle2/**/*.js
    - jstests/aggregation/**/*.js
    - src/mongo/db/modules/*/jstests/fle/**/*.js
  exclude_with_any_tags:
    - assumes_standalone_mongod
    - featureFlagFLE2CleanupCommand
    # TODO: SERVER-66393 Remove Feature Flag for PM-2919.
    - featureFlagTimeseriesUpdatesSupport
    - featureFlagTimeseriesUpdatesSupport_incompatible
    # TODO: SERVER-78068 Remove Feature Flag for PM-2983
    - featureFlagRecordIdsReplicated
    # TODO: SERVER-85426 Remove Feature Flag for SPM-3541
    - featureFlagRankFusionBasic
    - featureFlagRankFusionFull
    - featureFlagSearchHybridScoringFull
    - featureFlagRankFusion
    # TODO: SERVER-86544 remove feature flag for SPM-3672
    - featureFlagMongotIndexedViews
    # Transactions are aborted upon fcv upgrade or downgrade.
    - uses_transactions
    # Exclude tests that require a specific fcv.
    # Once SERVER-81054 is complete this is no longer needed.
    - requires_fcv_71
    - requires_fcv_72
    - requires_fcv_73
    - requires_fcv_80
    - requires_fcv_81
    - requires_fcv_82
    - requires_fcv_83
    # Exclude tests that are not compatible with upgrade/downgrade.
    - cannot_run_during_upgrade_downgrade

  exclude_files:
    # The set_param1.js test attempts to compare the response from running the {getParameter: "*"}
    # command multiple times, which may observe the change to the "transactionLifetimeLimitSeconds"
    # server parameter.
    - jstests/core/**/set_param1.js
    # Different explain format
    - jstests/core/**/or_to_in.js
    # SERVER-34772 Tailable Cursors are not allowed with snapshot readconcern.
    - jstests/core/**/awaitdata_getmore_cmd.js
    - jstests/core/**/getmore_cmd_maxtimems.js
    - jstests/core/**/tailable_cursor_invalidation.js
    - jstests/core/**/tailable_getmore_batch_size.js

    # TODO (SERVER-78220): Investigate failing api version tests in the fcv jscore passthrough suite.
    - jstests/core/query/api/api_version_unstable_indexes.js

    # TODO: Remove after fixing SERVER-78201: the following received command without explicit readConcern.
    - jstests/aggregation/sources/densify/internal_parse.js
    - jstests/aggregation/parsing/api_version_stage_allowance_checks.js

    # TODO (SERVER-78200): The tests below sometimes hang when they run concurrently with a setFCV command.
    - src/mongo/db/modules/*/jstests/fle/fle_admin_e2e.js
    - src/mongo/db/modules/*/jstests/fle/fle_implicit_encryption.js
    - src/mongo/db/modules/*/jstests/fle/fle_use_cases.js
    - src/mongo/db/modules/*/jstests/fle/fle_drivers_integration.js

    # Expected failure due to command count being not precise due to potential retry of index build.
    - jstests/core/diagnostics/operation_latency_histogram.js

    # Expected failures due to unexpected query execution stats from restarted operations from fcv upgrade.
    - jstests/aggregation/sources/lookup/lookup_query_stats.js
    - jstests/aggregation/sources/facet/facet_stats.js
    - jstests/aggregation/sources/unionWith/unionWith_query_stats.js
    # SERVER-98709: We don't guarantee plan cache key/shape consistency across feature flag changes.
    - jstests/aggregation/sources/unionWith/unionWith_explain.js

    # SERVER-85472: test runs an updateOne without shard key which will use an internal transaction
    # that can be aborted by the fcv upgrade downgrade suite.
    - jstests/aggregation/sources/unionWith/unionWith_invalid_usage.js

    # Expected failure due to interfering collMod commands acquiring a lock that the test does not expect.
    - jstests/core/write/crud_ops_do_not_throw_locktimeout.js

    # The tests below use transactions (which are aborted on fcv upgrade/downgrade) and thus are expected to fail.
    - jstests/core/shell/role_management_helpers.js
    - jstests/core/administrative/roles_info.js
    - jstests/core/catalog/views/views_all_commands.js

    # Queryable encryption uses internal transactions (which are aborted on fcv upgrade/downgrade).
    - jstests/core/query/queryable_encryption/**/*.js

    # Tests that use profiling at level 2 are expecting to profile a specific command or a specific number
    # of commands. If they profile the setFCV command, this could cause the test to fail.
    - jstests/core/administrative/profile/profile_sampling.js
    - jstests/core/administrative/profile/profile1.js
    - jstests/aggregation/sources/lookup/profile_lookup.js

    # SERVER-85456: this test uses benchRun which does not use runCommand and index creation can fail.
    - jstests/core/shell/bench_test1.js

    # This test assumes query settings representative queries are stored in the cluster parameter,
    # which is not the case if featureFlagPQSBackfill is on.
    - jstests/core/query/query_settings/query_settings_size_limits.js

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - CheckReplOplogs
      - ValidateCollections
      - FCVUpgradeDowngradeInBackground
  config:
    shell_options:
      eval: >-
        globalThis.testingReplication = true;
        await import("jstests/libs/override_methods/retry_aborted_db_and_index_creation.js");
        await import("jstests/libs/override_methods/implicitly_retry_on_fcv_upgrade_downgrade.js");
      global_vars:
        TestData:
          isRunningFCVUpgradeDowngradeSuite: true
  hooks:
    - class: CheckReplOplogs
    - class: CheckReplDBHash
    - class: ValidateCollections
    - class: FCVUpgradeDowngradeInBackground
    - class: CleanEveryN
      n: 20
  fixture:
    class: ReplicaSetFixture
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        disableTransitionFromLatestToLastContinuous: False
    num_nodes: 2
