test_kind: js_test
description: |
  This suite enables the collection of query stats metrics on a mongod server, then runs the tests in
  core and aggregation as normal. This should cause each query to compute a query
  shape and query stats key, and record in-memory some metrics like execution time and number of
  scanned documents. Then it uses the 'RunQueryStats' hook to collect the query stats at the end of
  each test, once with HMAC application enabled and once without. It doesn't assert anything about
  the collected query stats, it is just meant to make sure nothing is going seriously awry (e.g.
  crashing).

selector:
  roots:
    - jstests/core/**/*.js
  exclude_files:
    # Transactions are not supported on MongoDB standalone nodes, so we do not run these tests.
    - jstests/core/txns/**/*.js
    # Queryable encryption is not supported on standalone.
    - jstests/core/query/queryable_encryption/**/*.js
    # Query settings are not supported on standalone.
    - jstests/core/query/query_settings/**/*.js
    - jstests/core/timeseries/query/timeseries_union_with.js
  exclude_with_any_tags:
    # Running $queryStats will increment these counters which can screw up some test assertions.
    - inspects_command_opcounters
    - known_query_shape_computation_problem

executor:
  archive:
    hooks:
      - ValidateCollections
  hooks:
    # Be sure to run the hooks which depend on the fixture being alive before the CleanEveryN hook.
    # That way the fixture restart can't cause any trouble for the other hooks.
    - class: RunQueryStats
    - class: ValidateCollections
    - class: CleanEveryN
      n: 20
  fixture:
    class: MongoDFixture
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        internalQueryStatsRateLimit: -1
        internalQueryStatsErrorsAreCommandFatal: true
