# This suite tests the core transactions functionality with causal consistency enabled on the
# session. The purpose of this passthrough is to ensure that enabling causal consistency has no
# effect on core transactions functionality.

test_kind: js_test

selector:
  roots:
    - jstests/core/txns/**/*.js
  exclude_files:
    # The following tests are excluded because they do not use the transactions shell helpers.
    - jstests/core/txns/non_transactional_operations_on_session_with_transaction.js
    # These tests rely on having read concerns that don't use afterClusterTime.
    - jstests/core/txns/timestamped_reads_wait_for_prepare_oplog_visibility.js
    # These tests rely on reads that cannot use an afterClusterTime read concern because the read
    # happens after a transaction is prepared, but before it is committed.
    - jstests/core/txns/prepare_conflict_aggregation_behavior.js

  exclude_with_any_tags:
    - does_not_support_causal_consistency
    # Transactions are not allowed to operate on capped collections.
    - requires_capped

executor:
  archive:
    hooks:
      - ValidateCollections
  config:
    shell_options:
      eval: >-
        globalThis.testingReplication = true;
        await import('jstests/libs/override_methods/enable_causal_consistency_without_read_pref.js');
  hooks:
    # We don't execute dbHash or oplog consistency checks since there is only a single replica set
    # node.
    - class: ValidateCollections
    - class: CleanEveryN
      n: 20
  fixture:
    class: ReplicaSetFixture
    mongod_options:
      set_parameters:
        enableTestCommands: 1
    # Use a 1-node replica set.
    num_nodes: 1
