# This test suite is intended to exercise the primary and secondary behavior for transactions
# with the maximum number of transaction operations in a single oplog entry set to 1.

test_kind: js_test

selector:
  roots:
    - jstests/core/txns/**/*.js
  exclude_files:
    # These tests change the transactionLifetimeLimitSeconds server parameter which conflicts with how
    # the CheckReplDBHashInBackground hook doesn't want transactions to be reaped while it is running.
    - jstests/core/txns/abort_expired_transaction.js
    - jstests/core/txns/abort_transaction_thread_does_not_block_on_locks.js
    - jstests/core/txns/kill_op_on_txn_expiry.js

executor:
  archive:
    hooks:
      - CheckReplDBHashInBackground
      - ValidateCollectionsInBackground
      - CheckReplDBHash
      - CheckReplOplogs
      - ValidateCollections
  config:
    shell_options:
      eval: "globalThis.testingReplication = true;"
  hooks:
    # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
    # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
    # validating the entire contents of the collection.
    - class: CheckReplDBHashInBackground
    - class: ValidateCollectionsInBackground
    - class: CheckReplOplogs
    - class: CheckReplDBHash
    - class: ValidateCollections
    - class: CleanEveryN
      n: 20
  fixture:
    class: ReplicaSetFixture
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        maxNumberOfTransactionOperationsInSingleOplogEntry: 1
    num_nodes: 2
