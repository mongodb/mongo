# This file contains resmoke tasks that are owned by Clusters & Integrations Core Server Team division

################################################
#                   Variable                   #
################################################
variables:
  # Used when the tests it runs depend only on mongod, mongos, the jstestshell and the tools.
  # THIS HAS COPIES IN
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/clusters_and_integrations/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/durable_transactions_and_availability/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/query/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/non_server_teams/tasks.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &task_template
    name: template
    depends_on:
      - name: archive_dist_test
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          resmoke_args: --help
          resmoke_jobs_max: 0 # No cap on number of jobs.

  # THIS HAS COPIES IN
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/clusters_and_integrations/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/durable_transactions_and_availability/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/query/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/non_server_teams/tasks.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &gen_task_template
    name: gen_task_template
    depends_on:
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
      - name: archive_dist_test
    commands:
      - func: "generate resmoke tasks"
        vars:
          resmoke_args: --help

  # THIS HAS COPIES IN
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/clusters_and_integrations/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/durable_transactions_and_availability/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/query/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/non_server_teams/tasks.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &benchmark_template
    name: benchmark_template
    depends_on:
      - name: compile_upload_benchmarks
    commands:
      - func: "do benchmark setup"
      - func: "run benchmark tests"
        vars:
          resmoke_args: --help
          resmoke_jobs_max: 1
          suite: benchmark_suite

  - &benchmark_no_deps_template
    name: benchmark_no_deps_template
    depends_on:
      - name: version_expansions_gen
        variant: generate-tasks-for-version
    commands:
      - func: "do benchmark setup no fetch"
      - func: "run benchmark tests"
        vars:
          resmoke_args: --help
          resmoke_jobs_max: 1
          suite: benchmark_suite

  # THIS HAS COPIES IN
  # - etc/evergreen_yml_components/tasks/resmoke/non_server_teams/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/clusters_and_integrations/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/durable_transactions_and_availability/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/query/tasks.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &jstestfuzz_config_vars
    is_jstestfuzz: true
    num_files: 15
    num_tasks: 5 # Upperbound by `max_sub_suites` specified through the variant with each task still running `num_files` files.
    # It is error prone to require each fuzzer-related Evergreen task to need to override the
    # resmoke_args variable. However, the resmoke_args variable must be defined as a string in the
    # task generation configuration to satisfy mongodb/mongo-task-generator. We therefore specify an
    # empty string for the variable to reflect there are no additional arguments provided to resmoke
    # by default for the fuzzer-related tasks.
    resmoke_args: ""
    resmoke_jobs_max: 1
    should_shuffle: false
    continue_on_failure: false
    # Terminate the function when there has been no output to stdout for 30 minutes. E.g. when something is stuck in an infinite loop.
    # resmoke.py writes the test output to logkeeper and only writes to stdout when starting the next test.
    # resmoke.py not producing output on stdout means that the test is still running and presumably not going to finish.
    # Note that timeout_secs is different from exec_timeout_secs, which applies to a task and times out regardless of whether output has been written to stdout.
    timeout_secs: 1800

  # Used for tests that invoke 'resmoke.py --suites=jstestfuzz*'.
  # THIS HAS COPIES IN
  # - etc/evergreen_yml_components/tasks/resmoke/non_server_teams/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/clusters_and_integrations/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/durable_transactions_and_availability/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/query/tasks.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &jstestfuzz_template
    name: jstestfuzz_template
    exec_timeout_secs: 14400 # Time out the task if it runs for more than 4 hours.
    depends_on:
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
      - archive_dist_test
    commands:
      - func: "generate resmoke tasks"

  # THIS HAS COPIES IN
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/clusters_and_integrations/tasks.yml
  # - etc/evergreen_yml_components/tasks/compile_tasks.yml
  # - etc/evergreen_yml_components/tasks/compile_tasks_shared.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &compile_task_group_template
    name: compile_task_group_template
    max_hosts: 1
    tasks: []
    setup_task:
      - func: "f_expansions_write"
      - func: "set task expansion macros"
      - func: "f_expansions_write"
      - func: "override task timeout"
      - func: "get engflow creds"
    teardown_task:
      - func: "f_expansions_write"
      - func: "create bazel test report"
      - func: "attach report"
      - func: "attach artifacts"
      - func: "attach local resmoke invocation"
      - func: "attach multiversion download links"
      - func: "kill processes"
      - func: "save code coverage data"
      - func: "save mongo coredumps"
      - func: "generate hang analyzer tasks"
      - func: "save failed unittests"
      - func: "save hang analyzer debugger files"
      - func: "save disk statistics"
      - func: "save system resource information"
      - func: "save libfuzzertest corpora"
      - func: "remove files"
        vars:
          files: >-
            src/resmoke_error_code
            src/*.gcda.gcov
            src/gcov-intermediate-files.tgz
            src/*.core src/*.mdmp src/*.core.gz src/*.mdmp.gz
            mongo-coredumps.json
            src/dist-unittests/bin/*
            src/dist-unittests/lib/*
            mongo-unittests.tgz
            src/debugger*.*
            src/mongo-hanganalyzer.tgz
            diskstats.tgz
            system-resource-info.tgz
            ${report_file|src/report.json}
            ${archive_file|src/archive.json}
    setup_group_can_fail_task: true
    setup_group:
      - command: manifest.load
      - func: "git get project and add git tag"
      - func: "set task expansion macros"
      - func: "f_expansions_write"
      - func: "kill processes"
      - func: "cleanup environment"
      # The python virtual environment is installed in ${workdir}, which is created in
      # "set up venv".
      - func: "set up venv"
      - func: "upload pip requirements"
      - func: "f_expansions_write"
      - func: "configure evergreen api credentials"
      - func: "get buildnumber"
      - func: "f_expansions_write"
      - func: "set up credentials"
      - func: "f_expansions_write"
      - func: "use WiredTiger develop" # noop if ${use_wt_develop} is not "true"
      - func: "f_expansions_write"
    teardown_group:
      - func: "f_expansions_write"
      - func: "cleanup environment"
    timeout:
      - func: "f_expansions_write"
      - func: "run hang analyzer"
      - func: "wait for resmoke to shutdown"
      - func: "save bazel run logs"

################################################
#                    Tasks                     #
################################################
tasks:
  ################################################
  #          Service Architecture tasks          #
  ################################################

  - <<: *benchmark_template
    name: benchmarks_namespace
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "experimental",
        "benchmarks",
      ]
    commands:
      - func: "do benchmark setup"
      - func: "run benchmark tests"
        vars:
          suite: benchmarks_namespace_string
          resmoke_jobs_max: 1

  - <<: *benchmark_template
    name: benchmarks_orphaned_first_half
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "experimental",
        "benchmarks",
      ]
    commands:
      - func: "do benchmark setup no fetch"
      - func: "get engflow creds"
      - func: "bazel compile"
        vars:
          targets: >-
            archive-first_half_bm
          bazel_args: >-
            --config=evg
            --include_autogenerated_targets=True
          compiling_for_test: true
      - func: "run benchmark tests"
        vars:
          suite: benchmarks_first_half
          exec_timeout_secs: 28800 # 8 hour timeout.
          timeout_secs: 14400 # 4 hours
          resmoke_jobs_max: 1
          install_dir: bazel-bin/install/bin
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: src/bazel-bin/first_half_bm.${ext|tgz}
          remote_file: ${project}/${compile_variant}/${version_id}/binaries/first_half_bm-${revision_order_id}.${ext|tgz}
          bucket: mciuploads
          permissions: ${mciuploads_binary_permissions|public-read}
          visibility: ${mciuploads_binary_visibility|public}
          content_type: application/tar
          display_name: Benchmarks

  - <<: *benchmark_template
    name: benchmarks_orphaned_second_half
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "experimental",
        "benchmarks",
      ]
    commands:
      - func: "do benchmark setup no fetch"
      - func: "get engflow creds"
      - func: "bazel compile"
        vars:
          targets: >-
            archive-second_half_bm
          bazel_args: >-
            --config=evg
            --include_autogenerated_targets=True
          compiling_for_test: true
      - func: "run benchmark tests"
        vars:
          suite: benchmarks_second_half
          exec_timeout_secs: 28800 # 8 hour timeout.
          resmoke_jobs_max: 1
          install_dir: bazel-bin/install/bin
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: src/bazel-bin/second_half_bm.${ext|tgz}
          remote_file: ${project}/${compile_variant}/${version_id}/binaries/second_half_bm-${revision_order_id}.${ext|tgz}
          bucket: mciuploads
          permissions: ${mciuploads_binary_permissions|public-read}
          visibility: ${mciuploads_binary_visibility|public}
          content_type: application/tar
          display_name: Benchmarks

  - <<: *benchmark_no_deps_template
    name: benchmarks_sep
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "experimental",
        "benchmarks_sep",
      ]
    commands:
      - func: "do benchmark setup no fetch"
      - func: "get engflow creds"
      - func: "bazel compile"
        vars:
          targets: >-
            archive-sep_bm
          bazel_args: >-
            --config=evg
            --include_autogenerated_targets=True
          compiling_for_test: true
      - func: "run benchmark tests"
        vars:
          suite: benchmarks_sep
          exec_timeout_secs: 28800 # 8 hour timeout.
          resmoke_jobs_max: 1
          install_dir: bazel-bin/install/bin
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: src/bazel-bin/sep_bm.${ext|tgz}
          remote_file: ${project}/${compile_variant}/${version_id}/binaries/sep_bm-${revision_order_id}.${ext|tgz}
          bucket: mciuploads
          permissions: ${mciuploads_binary_permissions|public-read}
          visibility: ${mciuploads_binary_visibility|public}
          content_type: application/tar
          display_name: Benchmarks

  - <<: *task_template
    name: failpoints
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "release_critical",
        "misc_js",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: failpoints_auth
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "release_critical",
        "incompatible_mac",
        "incompatible_windows",
        "auth",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: integration_tests_replset
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "auxiliary",
        "integration",
      ]
    depends_on:
      - name: compile_integration_test
    commands:
      - func: "do integration_tests setup"
      - func: "run tests"
        vars:
          install_dir: bazel-bin/install/bin

  - <<: *task_template
    name: integration_tests_replset_ssl_auth
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "auxiliary",
        "integration",
      ]
    depends_on:
      - name: compile_integration_test
    commands:
      - func: "do integration_tests setup"
      - func: "run tests"
        vars:
          install_dir: bazel-bin/install/bin

  - <<: *task_template
    name: integration_tests_sharded
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "auxiliary",
        "integration",
        "sharded",
      ]
    depends_on:
      - name: compile_integration_test
    commands:
      - func: "do integration_tests setup"
      - func: "run tests"
        vars:
          install_dir: bazel-bin/install/bin

  - <<: *task_template
    name: integration_tests_standalone
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "auxiliary",
        "integration",
        "standalone",
      ]
    depends_on:
      - name: compile_integration_test
    commands:
      - func: "do integration_tests setup"
      - func: "run tests"
        vars:
          install_dir: bazel-bin/install/bin

  - <<: *task_template
    name: integration_tests_standalone_audit
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "auxiliary",
        "integration",
        "audit",
      ]
    depends_on:
      - name: compile_integration_test
    commands:
      - func: "do integration_tests setup"
      - func: "run tests"
        vars:
          install_dir: bazel-bin/install/bin

  - <<: *task_template
    name: integration_tests_standalone_grpc
    tags:
      [
        "assigned_to_jira_team_server_networking_and_observability",
        "auxiliary",
        "integration",
        "standalone_grpc",
      ]
    depends_on:
      - name: compile_integration_test
    commands:
      - func: "do integration_tests setup"
      - func: "run tests"
        vars:
          install_dir: bazel-bin/install/bin

  - <<: *task_template
    name: libunwind_tests
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "release_critical",
        "incompatible_mac",
        "incompatible_windows",
        "incompatible_ppc",
        "incompatible_s390x",
        "incompatible_tsan",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          suite: libunwind

  - <<: *task_template
    name: search_no_pinned_connections_auth
    tags:
      [
        "assigned_to_jira_team_server_networking_and_observability",
        "release_critical",
        "incompatible_community",
        "incompatible_mac",
        "incompatible_windows",
        "incompatible_ppc",
        "incompatible_s390x",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          resmoke_jobs_max: 1

  - <<: *task_template
    name: no_passthrough_network
    tags:
      [
        "assigned_to_jira_team_server_networking_and_observability",
        "experimental",
        "incompatible_mac",
        "incompatible_ppc",
        "incompatible_s390x",
        "incompatible_windows",
        "grpc_misc_js",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - name: server_discovery_and_monitoring_json_test
    tags:
      [
        "assigned_to_jira_team_server_networking_and_observability",
        "default",
        "requires_compile_variant",
      ]
    depends_on:
      - name: version_expansions_gen
        variant: generate-tasks-for-version
      - name: compile_libraries_for_unittests
    commands:
      - func: "do bazel setup"
      - func: "bazel compile"
        vars:
          targets: install-sdam_json_test
          compiling_for_test: true
          bazel_args: >-
            --config=evg
      - func: "run tests"
        vars:
          suite: sdam_json_test
          install_dir: bazel-bin/install/bin

  - name: server_selection_json_test
    tags:
      [
        "assigned_to_jira_team_server_networking_and_observability",
        "default",
        "requires_compile_variant",
        "requires_large_host_debug_mode",
      ]
    depends_on:
      - name: version_expansions_gen
        variant: generate-tasks-for-version
      - name: compile_libraries_for_unittests
    commands:
      - func: "do bazel setup"
      - func: "bazel compile"
        vars:
          targets: install-server_selection_json_test
          compiling_for_test: true
          bazel_args: >-
            --config=evg
      - func: "run tests"
        vars:
          suite: server_selection_json_test
          install_dir: bazel-bin/install/bin

  - <<: *task_template
    name: session_jscore_passthrough
    tags: ["assigned_to_jira_team_server_repl", "default"]
    commands:
      - func: "do setup"
      - func: "run tests"

  # This is a separate task because it is only supported on Ubuntu 16.04+ which are not inmemory builders
  - <<: *task_template
    name: watchdog_inmemory
    tags:
      [
        "assigned_to_jira_team_server_networking_and_observability",
        "experimental",
        "watchdog",
      ]
    commands:
      - func: "do setup"
      - func: "do watchdog setup"
      - func: "run tests"
        vars:
          suite: watchdog
          resmoke_args: --storageEngine=inMemory
          resmoke_jobs_max: 1

  - <<: *task_template
    name: watchdog_wiredtiger
    tags:
      [
        "assigned_to_jira_team_server_networking_and_observability",
        "experimental",
        "watchdog",
      ]
    commands:
      - func: "do setup"
      - func: "do watchdog setup"
      - func: "run tests"
        vars:
          suite: watchdog
          resmoke_jobs_max: 1

  ################################################
  #            Workload Scheduling tasks         #
  ################################################

  - <<: *task_template
    name: jsCore_ingress_request_rate_limiter
    tags:
      ["assigned_to_jira_team_server_workload_scheduling", "default", "jscore"]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          suite: core_ingress_request_rate_limiter

  ################################################
  #            Server Security tasks             #
  ################################################

  - <<: *task_template
    name: aggregation_ese
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "incompatible_mac",
        "incompatible_windows",
        "aggregation",
        "encrypt",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: aggregation_ese_gcm
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "incompatible_mac",
        "incompatible_windows",
        "aggregation",
        "encrypt",
        "gcm",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: audit
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "audit",
        "patch_build",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *gen_task_template
    name: auth_audit_gen
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "auth",
        "audit",
        "patch_build",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: auth_gen
    tags: ["assigned_to_jira_team_server_security", "release_critical", "auth"]
    commands:
      - func: "generate resmoke tasks"

  - <<: *task_template
    name: client_encrypt
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "ssl",
        "encrypt",
        "patch_build",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          resmoke_jobs_max: 1

  - <<: *task_template
    name: ese
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "encrypt",
        "patch_build",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: external_auth
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "incompatible_mac",
        "incompatible_ppc",
        "incompatible_s390x",
        "incompatible_debian",
        "incompatible_oscrypto",
      ]
    commands:
      - func: "f_expansions_write"
      - func: "do setup"
      - func: "f_expansions_write"
      - func: "run tests"
        vars:
          resmoke_jobs_max: ${external_auth_jobs_max|4}
          resmoke_args: --excludeWithAnyTags=requires_domain_controller

  - <<: *task_template
    name: external_auth_aws
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "incompatible_mac",
        "incompatible_ppc",
        "incompatible_s390x",
      ]
    commands:
      - func: "f_expansions_write"
      - func: "do setup"
      - func: "f_expansions_write"
      - command: subprocess.exec
        params:
          binary: bash
          silent: true
          args:
            - "src/evergreen/external_auth_aws_setup.sh"
      - func: "run tests"

  - <<: *task_template
    name: external_auth_oidc
    tags: ["assigned_to_jira_team_server_security", "experimental"]
    commands:
      - func: "f_expansions_write"
      - func: "do setup"
      - func: "f_expansions_write"
      - command: subprocess.exec
        params:
          binary: bash
          args:
            - "src/evergreen/external_auth_oidc_setup.sh"
      - func: "run tests"
        vars:
          resmoke_jobs_max: ${external_auth_oidc_jobs_max|1}

  - <<: *task_template
    name: external_auth_oidc_azure
    tags: ["assigned_to_jira_team_server_security", "experimental"]
    commands:
      - func: "f_expansions_write"
      - func: "do setup"
      - func: "f_expansions_write"
      - command: subprocess.exec
        params:
          binary: bash
          args:
            - "src/evergreen/external_auth_azure_setup.sh"
      - func: "run tests"

  - <<: *task_template
    name: external_auth_oidc_gcp
    tags: ["assigned_to_jira_team_server_security", "experimental"]
    commands:
      - func: "f_expansions_write"
      - func: "do setup"
      - func: "f_expansions_write"
      - command: subprocess.exec
        params:
          binary: bash
          args:
            - "src/evergreen/external_auth_gcp_setup.sh"
      - func: "run tests"

  - <<: *task_template
    name: external_auth_windows
    tags: ["assigned_to_jira_team_server_security", "experimental"]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          suite: external_auth
          resmoke_args: --includeWithAnyTags=requires_domain_controller

  ## fetch_and_run_libfuzzertests - get input corpora from s3 and run libfuzzertests ##
  - name: fetch_and_run_libfuzzertests
    tags: ["assigned_to_jira_team_server_security", "experimental"]
    commands:
      - func: "fetch corpus"
      - func: "run tests"
        vars:
          suite: libfuzzer
          exec_timeout_secs: 21600 # 6 hours

  - <<: *task_template
    name: fle
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "encrypt",
        "patch_build",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          resmoke_jobs_max: 1

  - <<: *task_template
    name: fle2
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "encrypt",
        "patch_build",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: fle2_high_cardinality
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "encrypt",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: fle2_query_analysis
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "encrypt",
        "patch_build",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: fle2_sharding
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "encrypt",
        "patch_build",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: fle2_sharding_high_cardinality
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "encrypt",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: jsCore_auth
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_ppc",
        "incompatible_s390x",
        "jscore",
        "auth",
        "common",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          suite: core_auth

  - <<: *task_template
    name: jsCore_ese
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "incompatible_mac",
        "jscore",
        "encrypt",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          suite: core_ese

  - <<: *task_template
    name: jsCore_heap_profiling
    tags:
      [
        "assigned_to_jira_team_server_programmability",
        "default",
        "jscore",
        "incompatible_system_allocator",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          suite: core_heap_profiling

  - <<: *task_template
    name: jsCore_min_batch_repeat_queries_multiplan_single_solutions_ese_gsm
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "incompatible_mac",
        "incompatible_windows",
        "jscore",
        "encrypt",
        "gcm",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          suite: core_min_batch_repeat_queries_multiplan_single_solutions_ese_gsm

  - <<: *gen_task_template
    name: multiversion_auth_future_git_tag_gen
    tags:
      [
        "assigned_to_jira_team_server_security",
        "experimental",
        "auth",
        "multiversion",
        "no_multiversion_generate_tasks",
        "multiversion_future_git_tag",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          suite: multiversion_auth_future_git_tag

  - <<: *gen_task_template
    name: multiversion_auth_gen
    tags:
      [
        "assigned_to_jira_team_server_security",
        "default",
        "auth",
        "multiversion",
        "no_multiversion_generate_tasks",
        "future_git_tag_incompatible",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *task_template
    name: ocsp
    tags: [
        "assigned_to_jira_team_server_security",
        "release_critical",
        # TODO SERVER-89541 Remove incompatible_oscrypto tag once oscrypto gets updated
        "incompatible_oscrypto",
        "ssl",
        "encrypt",
        "ocsp",
        "patch_build",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          resmoke_jobs_max: 1

  - <<: *task_template
    name: sasl
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "sasl",
        "patch_build",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: sasl_windows_cyrussasl
    tags: ["assigned_to_jira_team_server_security", "sasl", "experimental"]
    commands:
      - func: "f_expansions_write"
      - func: "do setup"
      - func: "f_expansions_write"
      - command: subprocess.exec
        params:
          binary: bash
          args:
            - "src/evergreen/sasl_windows_cyrussasl_setup.sh"
      - func: "run tests"

  - <<: *gen_task_template
    name: sharding_auth_audit_gen
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_community",
        "incompatible_mac",
        "incompatible_debug_mode",
        "sharding",
        "auth",
        "audit",
        "non_live_record",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: sharding_auth_gen
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "incompatible_mac",
        "incompatible_windows",
        "incompatible_ppc",
        "incompatible_s390x",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: sslSpecial_gen
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "encrypt",
        "ssl",
        "patch_build",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          suite: ssl_special

  - <<: *gen_task_template
    name: ssl_gen
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "encrypt",
        "ssl",
        "patch_build",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {network: 2, replication: {heartbeats: 2}}}'"

  - <<: *gen_task_template
    name: ssl_linear_gen
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "encrypt",
        "ssl",
        "patch_build",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          suite: ssl_linear
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: ssl_x509_gen
    tags:
      [
        "assigned_to_jira_team_server_security",
        "release_critical",
        "encrypt",
        "ssl",
        "patch_build",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          suite: ssl_x509

  - <<: *benchmark_template
    name: benchmarks_security
    tags:
      ["assigned_to_jira_team_server_security", "experimental", "benchmarks"]
    commands:
      - func: "do benchmark setup"
      - func: "run benchmark tests"
        vars:
          suite: benchmarks_audit
          resmoke_jobs_max: 1

  ################################################
  #          Cluster Scalability tasks           #
  ################################################

  - <<: *gen_task_template
    name: analyze_shard_key_jscore_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "sharding",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          # We do this because otherwise the task will OOM on TSAN variants. The "requires_large_host_tsan" tag doesn't work for non-gen tasks.
          use_large_distro: "true"
          # We need to set the jobs factor to less than 1 because otherwise resmoke will parallelize
          # based on the CPU count and so the memory available per job will remain roughly the same
          # as when the task is run on small distro.
          resmoke_jobs_factor: 0.1

  - <<: *benchmark_template
    name: benchmarks_sharding
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "experimental",
        "benchmarks",
      ]
    commands:
      - func: "do benchmark setup no fetch"
      - func: "get engflow creds"
      - func: "bazel compile"
        vars:
          targets: >-
            archive-sharding_bm
          bazel_args: >-
            --config=evg
            --include_autogenerated_targets=True
          compiling_for_test: true
      - func: "run benchmark tests"
        vars:
          suite: benchmarks_sharding
          resmoke_jobs_max: 1
          install_dir: bazel-bin/install/bin
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: src/bazel-bin/sharding_bm.${ext|tgz}
          remote_file: ${project}/${compile_variant}/${version_id}/binaries/sharding_bm-${revision_order_id}.${ext|tgz}
          bucket: mciuploads
          permissions: ${mciuploads_binary_permissions|public-read}
          visibility: ${mciuploads_binary_visibility|public}
          content_type: application/tar
          display_name: Benchmarks

  - <<: *benchmark_template
    name: benchmarks_bsoncolumn
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "experimental",
        "benchmarks",
      ]
    commands:
      - func: "do benchmark setup no fetch"
      - func: "get engflow creds"
      - func: "bazel compile"
        vars:
          targets: >-
            archive-bsoncolumn_bm
          bazel_args: >-
            --config=evg
            --include_autogenerated_targets=True
          compiling_for_test: true
      - func: "run benchmark tests"
        vars:
          suite: benchmarks_bsoncolumn
          resmoke_jobs_max: 1
          install_dir: bazel-bin/install/bin
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: src/bazel-bin/bsoncolumn_bm.${ext|tgz}
          remote_file: ${project}/${compile_variant}/${version_id}/binaries/bsoncolumn_bm-${revision_order_id}.${ext|tgz}
          bucket: mciuploads
          permissions: ${mciuploads_binary_permissions|public-read}
          visibility: ${mciuploads_binary_visibility|public}
          content_type: application/tar
          display_name: Benchmarks

  - <<: *jstestfuzz_template
    name: move_collection_fuzzer_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "non_deterministic",
        "resharding_fuzzer",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: 10
          num_tasks: 5
          npm_command: resharding-fuzzer
          jstestfuzz_vars: --opType moveCollection --electionMech stepup --electionRole donor --electionRole recipient
          suite: resharding_fuzzer

  - <<: *gen_task_template
    name: multi_shard_local_read_write_multi_stmt_txn_jscore_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "multi_shard",
        "common",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: multi_shard_multi_stmt_txn_jscore_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "multi_shard",
        "multi_stmt",
        "common",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 0 # No cap on number of jobs.

  - <<: *gen_task_template
    name: multi_shard_multi_stmt_txn_kill_primary_jscore_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "multi_shard",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: multi_shard_multi_stmt_txn_stepdown_primary_jscore_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "incompatible_debug_mode",
        "multi_shard",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: multi_stmt_txn_jscore_passthrough_with_migration_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "multi_stmt",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: replica_sets_transition_to_csrs_jscore_passthrough_gen
    tags: ["assigned_to_jira_team_server_catalog_and_routing", "default"]
    commands:
      - func: "generate resmoke tasks"
        # The hardcoded timeout is to overrule history-based timeout at the beginning of the suite
        # introduction. This should be removed once the suite has run for long enough that the
        # historical timeout is more accurate.
        vars:
          exec_timeout_secs: 4800 # 80min
          timeout_secs: 4800 # 80min

  - <<: *gen_task_template
    name: retryable_writes_downgrade_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "experimental",
        "multiversion_passthrough",
        "multiversion",
      ]
    commands:
      - func: "initialize multiversion tasks"
        vars:
          retryable_writes_downgrade_last_lts: last_lts
          retryable_writes_downgrade_last_continuous: last_continuous
      - func: "generate resmoke tasks"
        vars:
          resmoke_args: >-
            --runNoFeatureFlagTests

  - <<: *gen_task_template
    name: retryable_writes_jscore_passthrough_gen
    tags:
      ["assigned_to_jira_team_server_cluster_scalability", "default", "retry"]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: retryable_writes_jscore_stepdown_passthrough_gen
    tags:
      ["assigned_to_jira_team_server_cluster_scalability", "default", "retry"]
    commands:
      - func: "generate resmoke tasks"

  ## resharding generational fuzzer ##
  - <<: *jstestfuzz_template
    name: resharding_fuzzer_idempotency_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "non_deterministic",
        "resharding_fuzzer",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: 10
          num_tasks: 5
          npm_command: resharding-fuzzer
          jstestfuzz_vars: --numDonors 3 --numRecipients 3 --inPlace no
          suite: resharding_fuzzer_idempotency

  - <<: *jstestfuzz_template
    name: resharding_fuzzer_inplace_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "non_deterministic",
        "resharding_fuzzer",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: 10
          num_tasks: 5
          npm_command: resharding-fuzzer
          jstestfuzz_vars: --numDonors 2 --numRecipients 2 --inPlace yes
          suite: resharding_fuzzer

  - <<: *jstestfuzz_template
    name: resharding_fuzzer_merge_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "non_deterministic",
        "resharding_fuzzer",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: 10
          num_tasks: 5
          npm_command: resharding-fuzzer
          jstestfuzz_vars: --numDonors 2 --numRecipients 1 --inPlace no
          suite: resharding_fuzzer

  - <<: *jstestfuzz_template
    name: resharding_fuzzer_shuffle_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "non_deterministic",
        "resharding_fuzzer",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: 10
          num_tasks: 5
          npm_command: resharding-fuzzer
          jstestfuzz_vars: --numDonors 3 --numRecipients 3 --inPlace no
          suite: resharding_fuzzer

  - <<: *jstestfuzz_template
    name: resharding_fuzzer_split_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "non_deterministic",
        "resharding_fuzzer",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: 10
          num_tasks: 5
          npm_command: resharding-fuzzer
          jstestfuzz_vars: --numDonors 1 --numRecipients 2 --inPlace no
          suite: resharding_fuzzer

  - <<: *jstestfuzz_template
    name: resharding_fuzzer_stepup_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "non_deterministic",
        "resharding_fuzzer",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: 10
          num_tasks: 5
          npm_command: resharding-fuzzer
          jstestfuzz_vars: >-
            --numDonors 3 --numRecipients 3 --inPlace yes
            --electionMech stepup --electionRole donor --electionRole recipient
          suite: resharding_fuzzer

  - <<: *task_template
    name: sharded_collections_causally_consistent_jscore_txns_passthrough
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "sharding",
        "jscore",
        "causally_consistent",
        "txns",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *gen_task_template
    name: sharded_collections_jscore_multiversion_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "experimental",
        "multiversion_passthrough",
        "multiversion",
      ]
    commands:
      - func: "initialize multiversion tasks"
        vars:
          sharded_collections_jscore_passthrough_last_continuous_new_old_old_new: last_continuous
          sharded_collections_jscore_passthrough_last_lts_new_old_old_new: last_lts
      - func: "generate resmoke tasks"
        vars:
          resmoke_args: >-
            --runNoFeatureFlagTests

  - <<: *gen_task_template
    name: sharded_collections_jscore_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "sharding",
        "jscore",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: sharded_collections_jscore_passthrough_with_auto_bootstrap_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "sharding",
        "jscore",
        "cluster_scalability_only",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: sharded_collections_jscore_passthrough_with_config_transitions_and_add_remove_shard_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "sharding",
        "jscore",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *task_template
    name: sharded_jscore_txns
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "sharding",
        "jscore",
        "txns",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: sharded_jscore_txns_sharded_collections
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "sharding",
        "jscore",
        "txns",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: sharded_jscore_txns_without_snapshot
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "sharding",
        "wo_snapshot",
        "jscore",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          suite: sharded_jscore_txns
          resmoke_args: --excludeWithAnyTags=uses_snapshot_read_concern

  - <<: *gen_task_template
    name: sharded_multi_stmt_txn_jscore_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "sharding",
        "jscore",
        "multi_stmt",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: sharded_retryable_writes_downgrade_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "experimental",
        "multiversion_passthrough",
        "multiversion",
      ]
    commands:
      - func: "initialize multiversion tasks"
        vars:
          sharded_retryable_writes_downgrade_last_continuous_new_old_old_new: last_continuous
          sharded_retryable_writes_downgrade_last_lts_new_old_old_new: last_lts
      - func: "generate resmoke tasks"
        vars:
          resmoke_args: >-
            --runNoFeatureFlagTests

  - <<: *gen_task_template
    name: sharding_auto_bootstrap_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "sharding",
        "common",
        "cluster_scalability_only",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: sharding_csrs_continuous_config_stepdown_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "incompatible_windows",
        "sharding",
        "common",
        "csrs",
        "non_live_record",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: sharding_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "sharding",
        "common",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: sharding_task_executor_pool_size_8_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "incompatible_mac",
        "sharding",
        "common",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: sharding_hello_failures_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "incompatible_debug_mode",
        "concurrency",
        "large",
        "sharded",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: sharding_jscore_multiversion_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "multiversion_passthrough",
        "multiversion",
      ]
    commands:
      - func: "initialize multiversion tasks"
        vars:
          sharding_jscore_passthrough_last_lts_new_old_old_new: last_lts
          sharding_jscore_passthrough_last_continuous_new_old_old_new: last_continuous
      - func: "generate resmoke tasks"
        vars:
          resmoke_args: >-
            --runNoFeatureFlagTests

  - <<: *gen_task_template
    name: sharding_jscore_kill_primary_multiversion_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "experimental",
        "multiversion_passthrough",
        "multiversion",
      ]
    commands:
      - func: "initialize multiversion tasks"
        vars:
          sharding_kill_primaries_jscore_passthrough_last_lts_new_old_old_new: last_lts
          sharding_kill_primaries_jscore_passthrough_last_continuous_new_old_old_new: last_continuous
      - func: "generate resmoke tasks"
        vars:
          resmoke_args: >-
            --runNoFeatureFlagTests

  - <<: *gen_task_template
    name: sharding_jscore_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "sharding",
        "jscore",
        "common",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: sharding_kill_stepdown_terminate_jscore_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "incompatible_mac",
        "release_critical",
        "sharding",
        "jscore",
        "common",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: sharding_jscore_passthrough_with_config_transitions_and_add_remove_shard_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "sharding",
        "jscore",
        "common",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: sharding_jscore_passthrough_with_auto_bootstrap_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "sharding",
        "jscore",
        "common",
        "cluster_scalability_only",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"

  # This is a subset of sharding_max_mirroring_opportunistic_secondary_targeting_ese_gen and
  # sharding_max_mirroring_opportunistic_secondary_targeting_ese_gcm_gen and should not be ran
  # in the same varient as them
  - <<: *gen_task_template
    name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "release_critical",
        "incompatible_mac",
        "incompatible_windows",
        "incompatible_ppc",
        "incompatible_s390x",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: sharding_multiversion_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "random_multiversion_ds",
        "multiversion",
      ]
    commands:
      - func: "initialize multiversion tasks"
        vars:
          sharding_last_continuous: last_continuous
          sharding_last_lts: last_lts
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_args: >-
            --runNoFeatureFlagTests

  - <<: *jstestfuzz_template
    name: unshard_collection_fuzzer_gen
    tags:
      [
        "assigned_to_jira_team_server_cluster_scalability",
        "non_deterministic",
        "resharding_fuzzer",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: 10
          num_tasks: 5
          npm_command: resharding-fuzzer
          jstestfuzz_vars: --opType unshardCollection --inPlace yes --numDonors 3 --electionMech stepup --electionRole donor --electionRole recipient
          suite: resharding_fuzzer

  - <<: *jstestfuzz_template
    name: resharding_timeseries_fuzzer_gen
    tags: [
        "assigned_to_jira_team_server_cluster_scalability",
        "default",
        "feature_flag_guarded",
        "random_name",
        "require_npm",
        "requires_all_feature_flags",
        # TODO SERVER-109849: Remove this tag.
        "incompatible_disaggregated_storage",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: 10
          num_tasks: 5
          npm_command: resharding-fuzzer
          jstestfuzz_vars: >-
            --opType timeseriesReshardCollection --numDonors 3 --numRecipients 3 --inPlace yes
            --electionMech stepup --electionRole donor --electionRole recipient
          suite: resharding_fuzzer_idempotency

  ################################################
  #           Catalog & Routing tasks            #
  ################################################

  - <<: *gen_task_template
    name: aggregation_unsplittable_collections_on_random_shard_passthrough_gen
    # TODO SERVER-83445 Enable on non-all-feature-flag variants.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "unsplittable_collections",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: aggregation_unsplittable_collections_on_random_shard_passthrough_with_config_transitions_and_add_remove_shard_gen
    # TODO SERVER-83445 Enable on non-all-feature-flag variants.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "unsplittable_collections",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: causally_consistent_jscore_passthrough_auth_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "causally_consistent",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: causally_consistent_jscore_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "causally_consistent",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: change_streams_pre_images_replica_sets_kill_secondary_jscore_passthrough_gen
    tags: ["assigned_to_jira_team_server_catalog_and_routing", "default"]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: change_streams_pre_images_replica_sets_stepdown_primary_jscore_passthrough_gen
    tags: ["assigned_to_jira_team_server_catalog_and_routing", "default"]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: concurrency_sharded_replication_with_balancer_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "release_critical",
        "incompatible_mac",
        "incompatible_ppc",
        "incompatible_s390x",
        "incompatible_debug_mode",
        "concurrency",
        "common",
        "read_concern_maj",
        "large",
        "sharded",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: concurrency_sharded_replication_with_balancer_and_config_transitions_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "concurrency",
        "large",
        "non_live_record",
        "sharded",
        "no_debug_mode",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: concurrency_sharded_replication_with_balancer_and_config_transitions_and_add_remove_shard_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "concurrency",
        "large",
        "stepdowns",
        "kill_terminate",
        "non_live_record",
        "sharded",
        "no_debug_mode",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: concurrency_sharded_multi_stmt_txn_with_balancer_and_config_transitions_and_add_remove_shard_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "incompatible_debug_mode",
        "concurrency",
        "large",
        "sharded",
        "non_live_record",
        "no_debug_mode",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: concurrency_sharded_stepdown_terminate_kill_primary_with_balancer_and_config_transitions_and_add_remove_shard_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "concurrency",
        "large",
        "stepdowns",
        "kill_terminate",
        "non_live_record",
        "sharded",
        "no_debug_mode",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: concurrency_sharded_causal_consistency_and_balancer_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "incompatible_debug_mode",
        "concurrency",
        "large",
        "non_live_record",
        "sharded",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: concurrency_sharded_causal_consistency_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "incompatible_debug_mode",
        "concurrency",
        "non_live_record",
        "sharded",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: concurrency_sharded_clusterwide_ops_add_remove_shards_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "release_critical",
        "incompatible_mac",
        "incompatible_ppc",
        "incompatible_s390x",
        "incompatible_debug_mode",
        "concurrency",
        "common",
        "read_concern_maj",
        "large",
        "sharded",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: concurrency_sharded_multi_stmt_txn_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "incompatible_debug_mode",
        "concurrency",
        "large",
        "sharded",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: concurrency_sharded_multi_stmt_txn_with_balancer_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "incompatible_debug_mode",
        "concurrency",
        "large",
        "sharded",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: concurrency_sharded_with_auto_bootstrap_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "release_critical",
        "incompatible_mac",
        "incompatible_ppc",
        "incompatible_s390x",
        "incompatible_debug_mode",
        "concurrency",
        "common",
        "read_concern_maj",
        "large",
        "sharded",
        "cluster_scalability_only",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: sharding_jscore_passthrough_with_balancer_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "release_critical",
        "sharding",
        "jscore",
        "common",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: concurrency_sharded_with_balancer_and_auto_bootstrap_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "release_critical",
        "incompatible_mac",
        "incompatible_ppc",
        "incompatible_s390x",
        "incompatible_debug_mode",
        "concurrency",
        "common",
        "read_concern_maj",
        "large",
        "sharded",
        "cluster_scalability_only",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: concurrency_sharded_with_stepdowns_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "incompatible_debug_mode",
        "concurrency",
        "stepdowns",
        "large",
        "sharded",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: cwrwc_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "release_critical",
        "incompatible_mac",
        "read_write_concern",
        "large",
        "write",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: cwrwc_rc_majority_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "release_critical",
        "incompatible_mac",
        "read_write_concern",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  # TODO(SERVER-89135): Fix this passthrough with causal consistency or remove it.
  # Disable this test due to wrong secondary read after majority write assumption.
  # - <<: *gen_task_template
  #   name: cwrwc_wc_majority_passthrough_gen
  #   tags:
  #     [
  #       "assigned_to_jira_team_server_catalog_and_routing",
  #       "release_critical",
  #       "incompatible_mac",
  #       "incompatible_all_feature_flags",
  #       "read_write_concern",
  #       "write",
  #       "secondary_read_after_majority_write",
  #     ]
  #   commands:
  #     - func: "generate resmoke tasks"
  #       vars:
  #         use_large_distro: "true"

  - <<: *gen_task_template
    name: fcv_upgrade_downgrade_replica_sets_jscore_passthrough_gen
    # TODO (SERVER-88964): Remove exclude_when_record_ids_replicated.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "jscore",
        "exclude_when_record_ids_replicated",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: fcv_upgrade_downgrade_primary_step_down_passthrough_gen
    # TODO (SERVER-88964): Remove exclude_when_record_ids_replicated.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "jscore",
        "exclude_when_record_ids_replicated",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: replica_sets_jscore_passthrough_viewless_timeseries_gen
    # TODO (SERVER-101590): Remove this temporary suite.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "jscore",
        "requires_all_feature_flags",
        "viewless_timeseries",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: sharding_jscore_passthrough_viewless_timeseries_gen
    # TODO (SERVER-101590): Remove this temporary suite.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "jscore",
        "requires_all_feature_flags",
        "viewless_timeseries",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: sharding_jscore_passthrough_legacy_timeseries_no_rawdata_gen
    # TODO (SERVER-109519): Remove this temporary suite.
    tags:
      ["assigned_to_jira_team_server_catalog_and_routing", "default", "jscore"]
    commands:
      - func: "generate resmoke tasks"
        vars:
          # Requires legacy timeseries (system.buckets) even in all feature flags variants
          resmoke_args: >-
            --disableFeatureFlags=featureFlagCreateViewlessTimeseriesCollections

  - <<: *gen_task_template
    name: sharding_jscore_passthrough_with_injected_catalog_metadata_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "sharding",
        "jscore",
        "common",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: unsplittable_collections_created_on_any_shard_jscore_passthrough_viewless_timeseries_gen
    # TODO (SERVER-101590): Remove this temporary suite.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "jscore",
        "requires_all_feature_flags",
        "viewless_timeseries",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: sharded_collections_jscore_passthrough_viewless_timeseries_gen
    # TODO (SERVER-101590): Remove this temporary suite.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "jscore",
        "requires_all_feature_flags",
        "viewless_timeseries",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: sharding_viewless_timeseries_gen
    # TODO (SERVER-101590): Remove this temporary suite.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "sharding",
        "requires_all_feature_flags",
        "viewless_timeseries",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: sharding_legacy_timeseries_no_rawdata_gen
    # TODO (SERVER-109519): Remove this temporary suite.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "sharding",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"
          # Requires legacy timeseries (system.buckets) even in all feature flags variants
          resmoke_args: >-
            --disableFeatureFlags=featureFlagCreateViewlessTimeseriesCollections

  # TODO(SERVER-108818): Remove this temporary suite.
  - <<: *gen_task_template
    name: sharding_primary_driven_index_builds_gen
    tags:
      [
        "assigned_to_jira_team_server_execution",
        "default",
        "sharding",
        "primary_driven_index_builds",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: fcv_upgrade_downgrade_sharded_collections_jscore_passthrough_gen
    # TODO (SERVER-88964): Remove exclude_when_record_ids_replicated.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "sharding",
        "exclude_when_record_ids_replicated",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          use_large_distro: "true"

  - <<: *gen_task_template
    name: fcv_upgrade_downgrade_sharding_jscore_passthrough_gen
    # TODO (SERVER-88964): Remove exclude_when_record_ids_replicated.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "sharding",
        "exclude_when_record_ids_replicated",
      ]
    commands:
      - func: "generate resmoke tasks"

  ## jstestfuzz concurrent sharded cluster causal consistency ##
  - <<: *jstestfuzz_template
    name: jstestfuzz_concurrent_sharded_causal_consistency_gen
    # TODO(SERVER-69996) remove "incompatible_debug_mode" tag
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "incompatible_debug_mode",
        "jstestfuzz",
        "non_deterministic",
        "causal",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: ${jstestfuzz_concurrent_num_files|10}
          num_tasks: 5
          jstestfuzz_vars: --jsTestsDir ../jstests
          suite: jstestfuzz_sharded_causal_consistency
          resmoke_args: --numClientsPerFixture=10

  ## jstestfuzz concurrent sharded cluster continuous stepdown ##
  - <<: *jstestfuzz_template
    name: jstestfuzz_concurrent_sharded_kill_terminate_stepdown_gen
    # TODO(SERVER-69996) remove "incompatible_debug_mode" tag
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "incompatible_debug_mode",
        "jstestfuzz",
        "non_deterministic",
        "stepdowns",
        "kill_terminate",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: ${jstestfuzz_concurrent_num_files|10}
          num_tasks: 2
          jstestfuzz_vars: --jsTestsDir ../jstests
          suite: jstestfuzz_sharded_kill_terminate_stepdown
          resmoke_args: --numClientsPerFixture=10

  ## config fuzzer jstestfuzz concurrent sharded cluster continuous stepdown ##
  - <<: *jstestfuzz_template
    name: config_fuzzer_jstestfuzz_concurrent_sharded_kill_terminate_stepdown_gen
    # TODO(SERVER-69996) remove "incompatible_debug_mode" tag
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "config_fuzzer",
        "incompatible_aubsan",
        "incompatible_debug_mode",
        "incompatible_inmemory",
        "incompatible_tsan",
        "jstestfuzz",
        "non_deterministic",
        "require_npm",
        "random_name",
        "stepdowns",
        "kill_terminate",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: ${jstestfuzz_concurrent_num_files|10}
          num_tasks: 2
          jstestfuzz_vars: --jsTestsDir ../jstests
          suite: jstestfuzz_sharded_kill_terminate_stepdown
          resmoke_args: >-
            --numClientsPerFixture=10
            --fuzzMongodConfigs=normal
            --excludeWithAnyTags=does_not_support_config_fuzzer

  - <<: *gen_task_template
    name: config_fuzzer_sharding_jscore_passthrough_with_balancer_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "config_fuzzer",
        "large",
        "sharded",
        "incompatible_tsan",
        "incompatible_aubsan",
        "incompatible_debug_mode",
        "incompatible_inmemory",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          suite: sharding_jscore_passthrough_with_balancer
          resmoke_args: >-
            --fuzzMongodConfigs=normal
            --fuzzMongosConfigs=normal
            --fuzzRuntimeParams
            --excludeWithAnyTags=does_not_support_config_fuzzer
          use_xlarge_distro: "true"
          resmoke_jobs_max: 1

  - <<: *gen_task_template
    name: config_fuzzer_concurrency_sharded_replication_with_balancer_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "concurrency",
        "config_fuzzer",
        "default",
        "large",
        "sharded",
        "incompatible_tsan",
        "incompatible_aubsan",
        "incompatible_debug_mode",
        "incompatible_inmemory",
        "suggested_excluding_required__for_devprod_mitigation_only",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          suite: concurrency_sharded_replication_with_balancer
          resmoke_args: >-
            --fuzzMongodConfigs=normal
            --fuzzMongosConfigs=normal
            --fuzzRuntimeParams
            --excludeWithAnyTags=does_not_support_config_fuzzer
          use_xlarge_distro: "true"
          resmoke_jobs_max: 1

  ## jstestfuzz concurrent sharded cluster ##
  - <<: *jstestfuzz_template
    name: jstestfuzz_concurrent_sharded_gen
    # TODO(SERVER-69996) remove "incompatible_debug_mode" tag
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "incompatible_mac",
        "incompatible_debug_mode",
        "jstestfuzz",
        "non_deterministic",
        "common",
        "sharding",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: ${jstestfuzz_concurrent_num_files|10}
          num_tasks: 5
          jstestfuzz_vars: --jsTestsDir ../jstests
          suite: jstestfuzz_sharded
          resmoke_args: --numClientsPerFixture=10

  ## jstestfuzz concurrent sharded cluster with notablescan parameter enabled ##
  - <<: *jstestfuzz_template
    name: jstestfuzz_concurrent_sharded_notablescan_gen
    # TODO(SERVER-69996) remove "incompatible_debug_mode" tag
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "incompatible_debug_mode",
        "jstestfuzz",
        "non_deterministic",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: ${jstestfuzz_concurrent_num_files|10}
          num_tasks: 5
          jstestfuzz_vars: --jsTestsDir ../jstests
          suite: jstestfuzz_sharded_notablescan
          resmoke_args: --numClientsPerFixture=10

  ## jstestfuzz sharded cluster causal consistency ##
  - <<: *jstestfuzz_template
    name: jstestfuzz_sharded_causal_consistency_gen
    # TODO(SERVER-69996) remove "incompatible_debug_mode" tag
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "incompatible_debug_mode",
        "jstestfuzz",
        "non_deterministic",
        "causal",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          jstestfuzz_vars: --jsTestsDir ../jstests
          suite: jstestfuzz_sharded_causal_consistency
          resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {command: 2}}'"

  ## jstestfuzz sharded cluster continuous stepdown ##
  - <<: *jstestfuzz_template
    name: jstestfuzz_sharded_kill_terminate_stepdown_gen
    # TODO(SERVER-69996) remove "incompatible_debug_mode" tag
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "incompatible_debug_mode",
        "jstestfuzz",
        "non_deterministic",
        "stepdowns",
        "kill_terminate",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          num_files: 5
          num_tasks: 5
          jstestfuzz_vars: --jsTestsDir ../jstests
          suite: jstestfuzz_sharded_kill_terminate_stepdown
          resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {command: 2}}'"

  ## jstestfuzz sharded cluster ##
  - <<: *jstestfuzz_template
    name: jstestfuzz_sharded_gen
    # TODO(SERVER-69996) remove "incompatible_debug_mode" tag
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "incompatible_mac",
        "incompatible_debug_mode",
        "jstestfuzz",
        "non_deterministic",
        "common",
        "sharding",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          jstestfuzz_vars: --jsTestsDir ../jstests
          suite: jstestfuzz_sharded
          resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {command: 2}}'"

  ## jstestfuzz sharded multiversion cluster ##
  - <<: *jstestfuzz_template
    name: jstestfuzz_sharded_multiversion_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "experimental",
        "multiversion_fuzzer",
        "require_npm",
        "random_name",
        "multiversion",
      ]
    commands:
      - func: "initialize multiversion tasks"
        vars:
          jstestfuzz_sharded_last_continuous_new_old_old_new: last_continuous
          jstestfuzz_sharded_last_lts_new_old_old_new: last_lts
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          jstestfuzz_vars: --jsTestsDir ../jstests
          resmoke_args: >-
            --mongodSetParameters='{logComponentVerbosity: {command: 2}}'
            --runNoFeatureFlagTests
          npm_command: jstestfuzz

  ## jstestfuzz sharded cluster with notablescan param enabled ##
  - <<: *jstestfuzz_template
    name: jstestfuzz_sharded_notablescan_gen
    # TODO(SERVER-69996) remove "incompatible_debug_mode" tag
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "incompatible_debug_mode",
        "jstestfuzz",
        "non_deterministic",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          jstestfuzz_vars: --jsTestsDir ../jstests
          suite: jstestfuzz_sharded_notablescan
          resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {command: 2}}'"

  ## jstestfuzz sharded cluster with config transitions ##
  - <<: *jstestfuzz_template
    name: jstestfuzz_sharded_with_config_transitions_and_add_remove_shard_gen
    # TODO(SERVER-69996) remove "incompatible_debug_mode" tag
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "incompatible_debug_mode",
        "jstestfuzz",
        "non_deterministic",
        "sharding",
        "require_npm",
        "random_name",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          <<: *jstestfuzz_config_vars
          jstestfuzz_vars: --jsTestsDir ../jstests
          suite: jstestfuzz_sharded_with_config_transitions_and_add_remove_shard
          resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {command: 2}}'"

  - <<: *gen_task_template
    name: sharded_causally_consistent_jscore_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "causally_consistent",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: sharded_causally_consistent_jscore_txns_passthrough_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "release_critical",
        "incompatible_mac",
        "sharding",
        "jscore",
        "causally_consistent",
        "txns",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: sharded_causally_consistent_jscore_txns_passthrough_without_snapshot_gen
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "sharding",
        "wo_snapshot",
        "causally_consistent",
        "jscore",
      ]
    commands:
      - func: "generate resmoke tasks"
        vars:
          suite: sharded_causally_consistent_jscore_txns_passthrough
          resmoke_args: --excludeWithAnyTags=uses_snapshot_read_concern

  - <<: *gen_task_template
    name: unsplittable_collections_created_on_any_shard_jscore_passthrough_gen
    # TODO SERVER-83445 Enable on non-all-feature-flag variants.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "unsplittable_collections",
      ]
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_task_template
    name: unsplittable_collections_on_random_shard_jscore_txns_gen
    # TODO SERVER-83445 Enable on non-all-feature-flag variants.
    tags:
      [
        "assigned_to_jira_team_server_catalog_and_routing",
        "default",
        "unsplittable_collections",
      ]
    commands:
      - func: "generate resmoke tasks"

################################################
#                 Task Groups                  #
################################################
task_groups:
  - <<: *compile_task_group_template
    name: compile_archive_and_run_libfuzzertests_TG
    tasks:
      - compile_and_archive_libfuzzertests
      - fetch_and_run_libfuzzertests

  - <<: *compile_task_group_template
    name: compile_integration_and_test_no_audit_parallel_stream_TG
    tasks:
      - compile_integration_test
      - integration_tests_standalone
      - integration_tests_replset
      - integration_tests_replset_ssl_auth
      - integration_tests_sharded

  - <<: *compile_task_group_template
    name: compile_integration_and_test_parallel_stream_TG
    tasks:
      - compile_integration_test
      - integration_tests_standalone
      - integration_tests_standalone_audit
      - integration_tests_standalone_grpc
      - integration_tests_replset
      - integration_tests_replset_ssl_auth
      - integration_tests_sharded

  # SERVER-76006
  # This is a compile stream meant for non-cached and/or underpowered systems.
  # It joins most of the compile tasks together under a single host spread out
  # across different tasks. Excludes 'package'.
  - <<: *compile_task_group_template
    name: small_compile_test_serial_no_unittests_TG
    tasks:
      - archive_dist_test
      - archive_dist_test_debug
      - compile_integration_test
      - integration_tests_standalone
      - integration_tests_standalone_audit
      - integration_tests_standalone_grpc
      - integration_tests_replset
      - integration_tests_replset_ssl_auth
      - integration_tests_sharded
      - compile_dbtest
      - run_dbtest
      - archive_dbtest
      - compile_all_but_not_unittests

  # SERVER-76006
  # This is a compile stream meant for non-cached and/or underpowered systems.
  # It joins most of the compile tasks together under a single host spread out
  # across different tasks. Includes 'package.
  - <<: *compile_task_group_template
    name: small_compile_test_and_package_serial_no_unittests_TG
    tasks:
      - archive_dist_test
      - archive_dist_test_debug
      - package
      - compile_integration_test
      - integration_tests_standalone
      - integration_tests_standalone_audit
      - integration_tests_standalone_grpc
      - integration_tests_replset
      - integration_tests_replset_ssl_auth
      - integration_tests_sharded
      - compile_dbtest
      - run_dbtest
      - archive_dbtest
      - compile_all_but_not_unittests
