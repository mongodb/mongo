####################################################
#                configuration.yml                  #
#####################################################
#
# This file contains global configuration values set for the mongodb-mongo-master and
# mongodb-mongo-master-nightly projects.
#

command_type: system
exec_timeout_secs: 21600 # 6 hours.
oom_tracker: true
pre_error_fails_task: true
stepback: true

## Parameters for parameterized builds (see https://github.com/evergreen-ci/evergreen/wiki/Parameterized-Builds)
parameters:
  - key: patch_compile_flags
    description: "Additional bazel flags to be applied during bazel compile invocations in this patch"

  - key: future_git_tag
    description: "Future git tag to be added. If empty, we will use the most recent git tag instead."

  - key: last_lts_evg_version_id
    description: "The Evergreen Version ID of the last-lts MongoDB binaries. Only binaries from release variants are used"

  - key: last_continuous_evg_version_id
    description: "The Evergreen Version ID of the last-continuous MongoDB binaries. Only binaries from release variants are used"

  - key: antithesis_image_tag
    description: "The docker tag to use when pushing images to Antithesis"

  - key: build_patch_id
    description: "Patch id of evergreen patch to pull binaries from for testing."

  - key: bazel_build_tags
    value: "--bazel-build-tag=dist_test"
    description: "Default build tags"

  - key: coverage_bazel_tags
    value: "--remote_download_outputs=all --config=no-remote-exec --fission=no"
    description: "Default coverage bazel tags"

  - key: bazel_filters_for_cache_hydration
    value: "compiledb,gen_source,mongo-tidy-tests,mongo-tidy-checks,dist_test,mongo_library,mongo_unittest,mongo_benchmark,mongo_integration_test,mongo_binary"
    description: "Filters to pass Bazel to be built for the purpose of hydrating remote cache"

  - key: run_covered_tests
    description: >-
      When set to `true`, patch builds will run all tests compatible with some suite_A even if a more complex suite_A_B will
      also run the same test. For more information see SERVER-94816.

  - key: skip_symbolization
    value: true
    description: >-
      Automatically disables symbolizing stack traces from Resmoke tasks. If this is set to false, the steps on how to manually symbolize the unsymbolized stacktraces will not be generated.

  ## Cron parameters.
  - key: project_required_suggested_cron
    value: "0 */4 * * *" # Every 4 hours starting at 0000 UTC
    description: "Cron schedule for required and suggested variants"
  - key: project_nightly_cron
    value: "0 4 * * *" # Every day starting at 0400 UTC
    description: "Cron schedule for nightly variants"
  - key: project_weekly_cron
    value: "0 4 * * 0" # Every week starting 0400 UTC Sunday
    description: "Cron schedule for nightly variants"
  - key: convert_bazel_headers_target
    description: "Target to generate bazel headers for"

#######################################
#               Modules               #
#######################################
# if a module is added and to be added to the manifest
# be sure to add the module to git.get_project revisions parameter
modules:
  - name: wtdevelop
    repo: git@github.com:wiredtiger/wiredtiger.git
    prefix: src/third_party
    branch: develop
  - name: mongot
    repo: git@github.com:10gen/mongot.git
    prefix: ${workdir}/src
    branch: master
  - name: devprod_coverity
    owner: mongodb-devprod-infrastructure
    repo: coverity
    prefix: "${workdir}/devprodCoveritySrc"
    branch: main
    auto_update: true

# Pre task steps
pre:
  - func: "set task expansion macros"
  - func: "f_expansions_write"

# Post task steps
post:
  - func: "f_expansions_write"
  - func: "cleanup external auth OIDC resources"
  - func: "debug full disk"
  - func: "upload npm logs"
  - func: "generate clang-tidy report"
  - func: "attach local resmoke invocation"
  - func: "attach bazel invocation"
  - func: "create bazel test report"
  - func: "attach multiversion exclude tags"
  - func: "attach report"
  - func: "attach task errors"
  - func: "attach artifacts"
  - func: "upload mongodatafiles"
  - func: "attach multiversion download links"
  - func: "save ec2 task artifacts"
  - func: "attach wiki page"
  - func: "upload docker compose"
  - func: "attach docker logs"
  - func: "upload jstestfuzz minimized output"
  - func: "generate and upload network diagnostics"
  - func: "kill processes"
  - func: "save code coverage data"
  - func: "save local client logs"
  - func: "save jepsen artifacts"
  - func: "save unsymbolized stacktraces and local invocation"
  - func: "save mongo coredumps"
  - func: "generate hang analyzer tasks"
  - func: "save failed unittests"
  - func: "save hang analyzer debugger files"
  - func: "save disk statistics"
  - func: "save system resource information"
  - func: "save libfuzzertest corpora"
  - func: "remove files"
    vars:
      files: >-
        src/resmoke_error_code
        src/*.gcda.gcov
        src/gcov-intermediate-files.tgz
        src/*.core src/*.mdmp src/*.core.gz src/*.mdmp.gz
        mongo-coredumps.json
        src/dist-unittests/bin/*
        src/dist-unittests/lib/*
        mongo-unittests.tgz
        src/debugger*.*
        src/mongo-hanganalyzer.tgz
        diskstats.tgz
        system-resource-info.tgz
        ${report_file|src/report.json}
        ${archive_file|src/archive.json}
        src/network_diagnostics.txt
  - func: "umount tmp directory"
  - func: "cleanup FUSE watchdog"
  - func: "cleanup environment"
  - func: "cleanup jepsen docker test"

# Timeout steps
timeout:
  - func: "f_expansions_write"
  - func: "run hang analyzer"
  - func: "wait for resmoke to shutdown"
  - func: "save bazel run logs"
