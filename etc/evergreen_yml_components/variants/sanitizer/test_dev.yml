# Build variant definitions for vanilla sanitizers
#
# After the branching variants in this file
# should continue to run on a new rapid release (v7.1, v7.2 etc.)
# and LTS release (v7.0, v6.0 etc.) branch projects

variables:
# THIS HAS COPIES IN
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/wiredtiger/test_dev_master_branch_only.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &generic_linux_compile_params  # Essential set of compile parameters used for Linux dev variants.
  run_on:
  - rhel8.8-xlarge
  activate: true  # These compile variants run on every commit to reduce latency of the auto-reverter.
  tasks:
  - name: compile_test_parallel_core_stream_TG
  - name: run_unit_tests_TG
  - name: compile_test_parallel_dbtest_stream_TG
  - name: generate_buildid_to_debug_symbols_mapping

# THIS HAS COPIES IN
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/wiredtiger/test_dev_master_branch_only.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &generic_linux_compile_expansions  # The most commonly used compile expansions.
  has_packages: false

# THIS HAS COPIES IN
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# - etc/evergreen_yml_components/variants/wiredtiger/test_dev_master_branch_only.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &linux_debug_community_compile_expansions
  <<: *generic_linux_compile_expansions
  bazel_compile_flags: >-
    --dbg=True
    --opt=on
    --http_client=True
    --linkstatic=False
    --use_diagnostic_latches=True
    --build_enterprise=False

- &linux_x86_dynamic_debug_compile_variant_dependency
  depends_on:
  - name: archive_dist_test
    variant: &linux_x86_dynamic_debug_compile_variant_name linux-x86-dynamic-debug-compile-required
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  # - name: generate_buildid_to_debug_symbols_mapping
  #   variant: linux-x86-dynamic-debug-compile-required

# THIS HAS COPIES IN:
# - etc/evergreen_yml_components/variants/sanitizer/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &linux_debug_aubsan_compile_variant_dependency
  depends_on:
  - name: archive_dist_test
    variant: &linux_debug_aubsan_compile_variant_name linux-debug-aubsan-compile-required
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  # - name: generate_buildid_to_debug_symbols_mapping
  #   variant: linux-debug-aubsan-compile-required

# If you add anything to san_options, make sure the appropriate changes are
# also made to build.
# THIS HAS COPIES IN:
# - etc/evergreen_yml_components/variants/sanitizer/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- aubsan_options: &aubsan_options >-
    UBSAN_OPTIONS="print_stacktrace=1:external_symbolizer_path=/opt/mongodbtoolchain/v4/bin/llvm-symbolizer"
    LSAN_OPTIONS="suppressions=etc/lsan.suppressions:report_objects=1"
    ASAN_OPTIONS="detect_leaks=1:check_initialization_order=true:strict_init_order=true:abort_on_error=1:disable_coredump=0:handle_abort=1:strict_string_checks=true:detect_invalid_pointer_pairs=1:external_symbolizer_path=/opt/mongodbtoolchain/v4/bin/llvm-symbolizer"

# If you add anything to san_options, make sure the appropriate changes are
# also made to build.
# THIS HAS COPIES IN:
# - etc/evergreen_yml_components/variants/sanitizer/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- ubsan_options: &ubsan_options UBSAN_OPTIONS="print_stacktrace=1:external_symbolizer_path=/opt/mongodbtoolchain/v4/bin/llvm-symbolizer"

# THIS HAS COPIES IN:
# - etc/evergreen_yml_components/variants/sanitizer/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &aubsan-lite-required-expansions
  compile_variant: *linux_debug_aubsan_compile_variant_name
  lang_environment: LANG=C
  san_options: *aubsan_options
  resmoke_jobs_factor: 0.3  # Avoid starting too many mongod's under {A,UB}SAN build.
  hang_analyzer_dump_core: false
  max_sub_suites: 3
  large_distro_name: rhel8.8-large
  xlarge_distro_name: rhel8.8-xxlarge
  multiversion_platform: rhel80
  multiversion_platform_50_or_later: rhel8
  multiversion_edition: enterprise
  core_analyzer_gdb_index_cache: off


buildvariants:
- <<: *generic_linux_compile_params
  name: &linux-x86-dynamic-debug-compile-required linux-x86-dynamic-debug-compile-required  # TODO: replace with Sanitizer.
  display_name: "! Linux x86 Shared Library DEBUG Compile"
  tags: ["required"]
  stepback: false
  expansions:
    <<: *linux_debug_community_compile_expansions
    compile_variant: *linux-x86-dynamic-debug-compile-required
    build_mongot: true
    download_mongot_release: true
    test_flags: >-
      --mongodSetParameters="{internalQueryEnableAggressiveSpillsInGroup: true}"
  tasks:
  - name: compile_test_parallel_core_stream_TG
  - name: run_unit_tests_TG
  - name: compile_test_parallel_dbtest_stream_TG
  - name: .release_critical .requires_compile_variant !.incompatible_development_variant !.stitch !.crypt

- <<: *generic_linux_compile_params
  name: &linux-debug-aubsan-compile-required linux-debug-aubsan-compile-required
  display_name: "! Linux x86 Shared Library {A,UB}SAN Enterprise Compile"
  tags: ["required"]
  expansions:
    <<: *generic_linux_compile_expansions
    separate_debug: off
    san_options: *aubsan_options
    bazel_compile_flags: >-
      --config=dbg_aubsan
      --opt=on
      --fission=no
      --use_diagnostic_latches=True
    compile_variant: *linux-debug-aubsan-compile-required
    test_flags: >-
      --mongodSetParameters="{internalQueryEnableAggressiveSpillsInGroup: true}"
  tasks:
  - name: compile_test_parallel_core_stream_TG
  - name: run_unit_tests_TG
  - name: compile_test_parallel_dbtest_stream_TG
  - name: .release_critical .requires_compile_variant !.incompatible_development_variant !.stitch !.crypt !.incompatible_aubsan

- &linux-64-debug-required-template
  <<: *linux_x86_dynamic_debug_compile_variant_dependency
  name: &linux-64-debug-required linux-64-debug-required
  display_name: "! Linux x86 Shared Library DEBUG"
  tags: ["required"]
  cron: "0 */4 * * *" # From the ${project_required_suggested_cron} parameter
  run_on:
  - rhel8.8-medium
  expansions:
    resmoke_jobs_factor: 0.5  # Avoid starting too many mongod's
    test_flags: >-
      --excludeWithAnyTags=requires_http_client
      --enableEnterpriseTests=off
      --mongodSetParameters="{internalQueryEnableAggressiveSpillsInGroup: true}"
    target_resmoke_time: 15
    max_sub_suites: 5
    large_distro_name: rhel8.8-medium
    core_analyzer_distro_name: rhel8.8-xlarge
    compile_variant: *linux_x86_dynamic_debug_compile_variant_name
    build_mongot: true
    download_mongot_release: true
  tasks:
  - name: .mongot_e2e_tests
  - name: .development_critical !.requires_compile_variant !.incompatible_development_variant !.incompatible_community !.requires_all_feature_flags
  - name: .release_critical !.requires_compile_variant !.incompatible_development_variant !.incompatible_community !.requires_all_feature_flags

- &rhel8-debug-aubsan-lite-template
  <<: *linux_debug_aubsan_compile_variant_dependency
  name: &rhel8-debug-aubsan-lite rhel8-debug-aubsan-lite
  display_name: "! Shared Library {A,UB}SAN Enterprise RHEL 8 DEBUG"
  tags: ["required"]
  cron: "0 */4 * * *" # From the ${project_required_suggested_cron} parameter
  run_on:
  - rhel8.8-large
  expansions:
    <<: *aubsan-lite-required-expansions
    test_flags: >-
      --excludeWithAnyTags=requires_increased_memlock_limits
      --mongodSetParameters="{internalQueryEnableAggressiveSpillsInGroup: true}"
  tasks:
  - name: jsCore
  - name: jsCore_txns

- name: rhel8-asan
  display_name: ~ ASAN RHEL 8
  tags: []
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
    - rhel8.8-large
  stepback: true
  expansions:
    lang_environment: LANG=C
    san_options: *aubsan_options
    bazel_compile_flags: >-
        --opt=on
        --allocator=system
        --asan=True
        --compiler_type=clang
        --linkstatic=False
        --build_enterprise=False
        --separate_debug=False
        --use_diagnostic_latches=True
    multiversion_platform: rhel80
    multiversion_platform_50_or_later: rhel8
    multiversion_edition: enterprise
    resmoke_jobs_factor: 0.3  # Avoid starting too many mongod's under ASAN build.
    hang_analyzer_dump_core: false
    test_flags: >-
      --excludeWithAnyTags=requires_fast_memory,corrupts_data
      --enableEnterpriseTests=off
    compile_variant: rhel8-asan
  tasks:
    - name: compile_test_serial_TG
    - name: run_unit_tests_TG
    - name: .aggfuzzer .common !.feature_flag_guarded
    - name: .jstestfuzz !.initsync !.feature_flag_guarded
    - name: generate_buildid_to_debug_symbols_mapping

- name: rhel8-debug-asan
  display_name: ~ ASAN Enterprise RHEL 8 DEBUG
  tags: []
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel8.8-large
  stepback: false
  expansions:
    additional_package_targets: >-
      archive-mongocryptd-stripped
      archive-mongocryptd-debug
    lang_environment: LANG=C
    san_options: *aubsan_options
    bazel_compile_flags: >-
      --config=dbg_aubsan
      --ubsan=False
      --opt=on
      --fission=no
      --use_diagnostic_latches=True
    test_flags: >-
      --excludeWithAnyTags=requires_fast_memory,requires_increased_memlock_limits,corrupts_data
      --benchmarkRepetitions=1
      --mongodSetParameters="{internalQueryEnableAggressiveSpillsInGroup: true}"
    multiversion_platform: rhel80
    multiversion_platform_50_or_later: rhel8
    multiversion_edition: enterprise
    resmoke_jobs_factor: 0.3  # Avoid starting too many mongod's under ASAN build.
    hang_analyzer_dump_core: false
    exec_timeout_secs: 14400 # 3 hour timeout
    large_distro_name: rhel8.8-large
    compile_variant: rhel8-debug-asan
  tasks:
  - name: compile_test_benchmark_serial_TG
    distros:
    - rhel8.8-large
  - name: run_unit_tests_TG
    distros:
    - rhel8.8-large
  - name: compile_integration_and_test_parallel_stream_TG
    distros:
    - rhel8.8-large
  - name: .aggregation !.feature_flag_guarded
  - name: .auth
  - name: audit
  - name: .benchmarks
  - name: .causally_consistent !.wo_snapshot
  - name: .change_streams
  - name: .misc_js
  - name: .concurrency !.no_txns !.kill_terminate !.feature_flag_guarded
  - name: .encrypt
  - name: external_auth
  - name: external_auth_aws
  - name: external_auth_oidc
  - name: initial_sync_fuzzer_gen
  - name: .jscore .common
  - name: jsCore_min_batch_repeat_queries_multiplan_single_solutions_ese_gsm
  - name: jsCore_txns_large_txns_format
  - name: json_schema
  - name: .multi_shard .common
  - name: multiversion_gen
  - name: .multiversion_fuzzer
  - name: .multiversion_passthrough
  - name: .query_fuzzer !.feature_flag_guarded
  - name: .random_multiversion_ds
  - name: .read_write_concern
  - name: replica_sets_large_txns_format_jscore_passthrough_gen
  - name: .replica_sets !.multi_oplog
  - name: .replica_sets .encrypt
  - name: .resharding_fuzzer
  - name: .retry
  - name: .read_only
  - name: .rollbackfuzzer
  - name: .updatefuzzer
  - name: sasl
  - name: secondary_reads_passthrough_gen
  - name: session_jscore_passthrough
  - name: .sharding .jscore !.wo_snapshot !.feature_flag_guarded
  - name: .sharding .common !.csrs !.feature_flag_guarded
  - name: .watchdog
  - name: .stitch
  - name: .serverless
  - name: unittest_shell_hang_analyzer_gen
  - name: .updatefuzzer
  - name: server_discovery_and_monitoring_json_test
  - name: server_selection_json_test
  - name: generate_buildid_to_debug_symbols_mapping

- name: rhel8-debug-ubsan
  display_name: ~ UBSAN Enterprise RHEL 8 DEBUG
  tags: ["bazel_check"]
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel8.8-large
  stepback: false
  expansions:
    additional_package_targets: >-
      archive-mongocryptd-stripped
      archive-mongocryptd-debug
    lang_environment: LANG=C
    san_options: *ubsan_options
    # TODO SERVER-86610 set --allocator=tcmalloc-google
    bazel_compile_flags: >-
      --compiler_type=clang
      --dbg=True
      --opt=on
      --ubsan=True
      --allocator=tcmalloc-gperf
      --use_diagnostic_latches=True
      --separate_debug=False
    test_flags: >-
      --excludeWithAnyTags=requires_increased_memlock_limits,corrupts_data
      --benchmarkRepetitions=1
      --mongodSetParameters="{internalQueryEnableAggressiveSpillsInGroup: true}"
    multiversion_platform: rhel80
    multiversion_platform_50_or_later: rhel8
    multiversion_edition: enterprise
    resmoke_jobs_factor: 0.3  # Avoid starting too many mongod's under UBSAN build.
    large_distro_name: rhel8.8-large
    compile_variant: rhel8-debug-ubsan
    core_analyzer_gdb_index_cache: off
  tasks:
  - name: compile_test_benchmark_serial_TG
    distros:
    - rhel8.8-large
  - name: run_unit_tests_TG
    distros:
    - rhel8.8-large
  - name: compile_integration_and_test_parallel_stream_TG
    distros:
    - rhel8.8-large
  - name: .aggregation !.feature_flag_guarded
  - name: .auth
  - name: audit
  - name: .benchmarks
  - name: .causally_consistent !.wo_snapshot
  - name: .change_streams
  - name: .misc_js
  - name: .concurrency !.no_txns !.kill_terminate !.feature_flag_guarded
  - name: disk_wiredtiger
  - name: .encrypt
  - name: initial_sync_fuzzer_gen
  - name: .jscore .common
  - name: jsCore_min_batch_repeat_queries_multiplan_single_solutions_ese_gsm
  - name: jsCore_txns_large_txns_format
  - name: json_schema
  - name: .multi_shard .common
  - name: multiversion_gen
  - name: .multiversion_fuzzer
  - name: .multiversion_passthrough
  - name: .random_multiversion_ds
  - name: .read_write_concern
  - name: replica_sets_large_txns_format_jscore_passthrough_gen
  - name: .replica_sets !.multi_oplog
  - name: .replica_sets .encrypt
  - name: .resharding_fuzzer
  - name: .retry
  - name: .rollbackfuzzer
  - name: .read_only
  - name: sasl
  - name: secondary_reads_passthrough_gen
  - name: session_jscore_passthrough
  - name: .sharding .jscore !.wo_snapshot !.feature_flag_guarded
  - name: .sharding .common !.csrs !.feature_flag_guarded
  - name: .stitch
  - name: .updatefuzzer
  - name: .serverless
  - name: watchdog_wiredtiger
  - name: server_discovery_and_monitoring_json_test
  - name: server_selection_json_test
  - name: generate_buildid_to_debug_symbols_mapping

- &rhel8-debug-aubsan-lite_fuzzer-template
  name: &rhel8-debug-aubsan-lite_fuzzer rhel8-debug-aubsan-lite_fuzzer
  display_name: "{A,UB}SAN Enterprise RHEL 8 FUZZER"
  tags: []
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel8.8-large
  stepback: false
  expansions:
    additional_package_targets: >-
      archive-mongocryptd-stripped
      archive-mongocryptd-debug
    lang_environment: LANG=C
    toolchain_version: stable
    # If you add anything to san_options, make sure the appropriate changes are
    # also made to build.
    san_options: *aubsan_options
    bazel_compile_flags: >-
      --config=dbg_aubsan
      --opt=on
      --fission=no
      --fsan=True
      --use_diagnostic_latches=True
    test_flags: >-
      --mongodSetParameters="{internalQueryEnableAggressiveSpillsInGroup: true}"
      --excludeWithAnyTags=corrupts_data
    resmoke_jobs_factor: 0.3  # Avoid starting too many mongod's under {A,UB}SAN build.
    hang_analyzer_dump_core: false
    compile_variant: *rhel8-debug-aubsan-lite_fuzzer
    core_analyzer_gdb_index_cache: off
  display_tasks:
  - name: libfuzzertests!
    execution_tasks:
    - compile_and_archive_libfuzzertests
    - fetch_and_run_libfuzzertests
  tasks:
  - name: compile_archive_and_run_libfuzzertests_TG

- &enterprise-rhel8-debug-tsan-template
  name: &enterprise-rhel8-debug-tsan enterprise-rhel8-debug-tsan
  display_name: "* TSAN Enterprise RHEL 8 DEBUG"
  tags: ["suggested"]
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel8.8-large
  stepback: false
  expansions: &enterprise-rhel8-debug-tsan-expansions-template
    additional_package_targets: >-
      archive-mongocryptd-stripped
      archive-mongocryptd-debug
    lang_environment: LANG=C
    toolchain_version: stable
    compile_variant: *enterprise-rhel8-debug-tsan
    # If you add anything to san_options, make sure the appropriate
    # changes are also made to build.
    #
    # TODO SERVER-49121: die_after_fork=0 is a temporary setting to
    # allow tests to continue while we figure out why we're running
    # afoul of it.
    #
    # TODO SERVER-65936: report_thread_leaks=0 suppresses reporting
    # thread leaks, which we have because we don't do a clean shutdown
    # of the ServiceContext.
    #
    # Run TSAN with diagnostic latches off, as our diagnostics reduce
    # TSAN's visibility - see SERVER-88159.
    #
    san_options: TSAN_OPTIONS="abort_on_error=1:disable_coredump=0:handle_abort=1:halt_on_error=1:report_thread_leaks=0:die_after_fork=0:history_size=4:suppressions=etc/tsan.suppressions:external_symbolizer_path=/opt/mongodbtoolchain/v4/bin/llvm-symbolizer"
    build_mongot: true
    bazel_compile_flags: >-
      --config=dbg_tsan
      --opt=on
      --fission=no
      --use_diagnostic_latches=True
    # Avoid starting too many mongod's under TSAN build.
    resmoke_jobs_factor: 0.3
    large_distro_name: rhel8.8-xlarge
    xlarge_distro_name: rhel8.8-xxlarge
    core_analyzer_distro_name: rhel8.8-xxlarge
    multiversion_platform: rhel80
    multiversion_platform_50_or_later: rhel8
    multiversion_edition: enterprise
    test_flags: >-
      --excludeWithAnyTags=tsan_incompatible,requires_latch_analyzer
      --mongodSetParameters="{internalQueryEnableAggressiveSpillsInGroup: true}"
  tasks:
  - name: .mongot_e2e_tests
  - name: compile_test_serial_TG
  - name: run_unit_tests_TG
  - name: compile_integration_and_test_parallel_stream_TG
  - name: check_feature_flag_tags
  # TODO SERVER-82766: timeseries, multiversion, and optimization fuzzers had been timing out on TSAN builds.
  - name: .aggfuzzer !.feature_flag_guarded !.timeseries !.blockprocessing !.multiversion !.optimization !.no_debug_mode
  - name: .aggregation !.feature_flag_guarded
  - name: audit
  - name: .auth
  - name: buildscripts_test
  - name: unittest_shell_hang_analyzer_gen
  - name: .config_fuzzer !.incompatible_tsan
  - name: config_fuzzer_jsCore !.incompatible_tsan
  - name: .causally_consistent !.sharding
  - name: .change_streams
  # TODO SERVER-82766: change_stream fuzzers had been timing out on TSAN builds.
  # - name: .change_stream_fuzzer
  - name: .misc_js
  - name: .concurrency !.large !.no_txns !.feature_flag_guarded !.incompatible_tsan
  - name: .concurrency .large !.no_txns !.feature_flag_guarded !.incompatible_tsan
    distros:
    - rhel8.8-xlarge
  - name: disk_wiredtiger
  - name: .encrypt
  - name: external_auth
  - name: initial_sync_fuzzer_gen
  - name: jsCore
    distros:
    - rhel8.8-xlarge
  - name: .jscore .common !jsCore
  - name: jsCore_min_batch_repeat_queries_multiplan_single_solutions_ese_gsm
  - name: jsCore_txns_large_txns_format
  - name: json_schema
  - name: .jstestfuzz !.feature_flag_guarded !.flow_control  # Flow control jstestfuzz take longer.
  - name: .multi_shard
  - name: multi_stmt_txn_jscore_passthrough_with_migration_gen
  - name: .query_fuzzer !.feature_flag_guarded
  - name: query_golden_classic
  - name: .read_write_concern .large
    distros:
    - rhel8.8-medium
  - name: .read_write_concern !.large
  - name: .replica_sets !.encrypt !.auth
    distros:
    - rhel8.8-xlarge
  - name: replica_sets_api_version_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_stepdown_passthrough_gen
    distros:
    - rhel8.8-xlarge
  - name: replica_sets_reconfig_kill_primary_jscore_passthrough_gen
    distros:
    - rhel8.8-xlarge
  - name: change_streams_pre_images_replica_sets_stepdown_primary_jscore_passthrough_gen
    distros:
    - rhel8.8-xlarge
  - name: change_streams_pre_images_replica_sets_kill_secondary_jscore_passthrough_gen
    distros:
    - rhel8.8-xlarge
  - name: change_streams_change_collection_replica_sets_stepdown_primary_jscore_passthrough_gen
    distros:
    - rhel8.8-xlarge
  - name: change_streams_change_collection_replica_sets_kill_secondary_jscore_passthrough_gen
    distros:
    - rhel8.8-xlarge
  - name: retryable_writes_jscore_passthrough_gen
  - name: retryable_writes_jscore_stepdown_passthrough_gen
    distros:
    - rhel8.8-medium
  - name: .read_only
  - name: .rollbackfuzzer
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: session_jscore_passthrough
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt !.feature_flag_guarded
  - name: sharding_api_version_jscore_passthrough_gen
  - name: .sharding .txns
  - name: .sharding .common !.feature_flag_guarded
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_ese_gcm_gen
  - name: .stitch
  - name: secondary_reads_passthrough_gen
  - name: server_discovery_and_monitoring_json_test
  - name: .serverless
    distros:
    - rhel8.8-xlarge
  - name: server_selection_json_test
    distros:
    - rhel8.8-xlarge
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl
  - name: generate_buildid_to_debug_symbols_mapping
