# Amazon build variants for testing release environments
#
# After the branching variants in this file
# should continue to run on a new rapid release (v7.1, v7.2 etc.)
# and LTS release (v7.0, v6.0 etc.) branch projects

buildvariants:
  - name: amazon2
    display_name: "Amazon Linux 2"
    cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2-latest-small
    expansions:
      test_flags: >-
        --excludeWithAnyTags=SERVER-34286,incompatible_with_amazon_linux,requires_external_data_source
        --modules=none
      push_path: linux
      push_bucket: downloads.mongodb.org
      push_bucket_new: cdn-origin-mongodb-server-community
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-community
      push_name: linux
      push_arch: x86_64-amazon2
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2
        --build_enterprise=False
      compile_all_but_not_unittests_flags: >-
        --linkopt=-s
      multiversion_platform: amazon2
      multiversion_edition: targeted
      has_packages: true
      packager_script: packager.py
      packager_arch: x86_64
      packager_distro: amazon2
      repo_edition: org
      large_distro_name: amazon2-latest-large
      compile_variant: amazon2
    tasks:
      - name: compile_test_and_package_serial_TG
        distros:
          - amazon2-latest-large
      - name: run_unit_tests_TG
        distros:
          - amazon2-latest-large
      - name: test_packages
        distros:
          - ubuntu2204-large
      - name: .development_critical !.incompatible_community !.requires_large_host
      - name: .development_critical !.incompatible_community .requires_large_host
        distros:
          - amazon2-latest-large
      - name: .release_critical !.incompatible_community !.requires_large_host
      - name: .release_critical !.incompatible_community .requires_large_host
        distros:
          - amazon2-latest-large

  - name: enterprise-amazon2
    display_name: "Enterprise Amazon Linux 2"
    cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2-latest-small
    expansions:
      additional_package_targets: >-
        archive-mongocryptd-stripped
        archive-mongocryptd-debug
      test_flags: >-
        --excludeWithAnyTags=SERVER-34286,incompatible_with_amazon_linux,requires_external_data_source,requires_ldap_pool
      push_path: linux
      push_bucket: downloads.10gen.com
      push_bucket_new: cdn-origin-mongodb-server-enterprise
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-enterprise
      push_name: linux
      push_arch: x86_64-enterprise-amazon2
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2
      compile_all_but_not_unittests_flags: >-
        --linkopt=-s
      multiversion_platform: amazon2
      multiversion_edition: enterprise
      has_packages: true
      packager_script: packager_enterprise.py
      packager_arch: x86_64
      packager_distro: amazon2
      repo_edition: enterprise
      compile_variant: enterprise-amazon2
      core_analyzer_distro_name: amazon2-latest-large
      large_distro_name: amazon2-latest-large
    tasks:
      - name: compile_test_and_package_serial_TG
        distros:
          - amazon2-latest-c6i-32xlarge
      - name: run_unit_tests_TG
        distros:
          - amazon2-latest-c6i-32xlarge
      - name: test_packages
        distros:
          - ubuntu2204-large
      - name: .development_critical !.requires_large_host
      - name: .development_critical .requires_large_host
        distros:
          - amazon2-latest-large
      - name: .release_critical !.requires_large_host
      - name: .release_critical .requires_large_host
        distros:
          - amazon2-latest-large

  - name: amazon2-arm64
    display_name: "Amazon Linux 2 arm64"
    cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2-arm64-latest-small
    expansions:
      test_flags: >-
        --excludeWithAnyTags=SERVER-34286,incompatible_with_amazon_linux,requires_external_data_source
        --modules=none
      push_path: linux
      push_bucket: downloads.mongodb.org
      push_bucket_new: cdn-origin-mongodb-server-community
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-community
      push_name: linux
      push_arch: aarch64-amazon2
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2
        --build_enterprise=False
      compile_all_but_not_unittests_flags: >-
        --linkopt=-s
      multiversion_platform: amazon2
      multiversion_edition: targeted
      has_packages: true
      packager_script: packager.py
      packager_arch: aarch64
      packager_distro: amazon2
      repo_edition: org
      large_distro_name: amazon2-arm64-latest-large
      compile_variant: amazon2-arm64
    tasks:
      - name: compile_test_and_package_serial_no_unittests_TG
        distros:
          - amazon2-arm64-latest-large
      - name: run_unit_tests_TG
        distros:
          - amazon2-arm64-latest-large
      - name: test_packages
        distros:
          - ubuntu2204-arm64-large
      - name: .development_critical !.incompatible_community !.requires_large_host
      - name: .development_critical !.incompatible_community .requires_large_host
        distros:
          - amazon2-arm64-latest-large
      - name: .release_critical !.incompatible_community !.requires_large_host
      - name: .release_critical !.incompatible_community .requires_large_host
        distros:
          - amazon2-arm64-latest-large

  - name: enterprise-amazon2-arm64
    display_name: "Enterprise Amazon Linux 2 arm64"
    cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2-arm64-latest-small
    expansions:
      additional_package_targets: >-
        archive-mongocryptd-stripped
        archive-mongocryptd-debug
      test_flags: >-
        --excludeWithAnyTags=SERVER-34286,incompatible_with_amazon_linux,requires_external_data_source,requires_ldap_pool
      push_path: linux
      push_bucket: downloads.10gen.com
      push_bucket_new: cdn-origin-mongodb-server-enterprise
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-enterprise
      push_name: linux
      push_arch: aarch64-enterprise-amazon2
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2
      compile_all_but_not_unittests_flags: >-
        --linkopt=-s
      multiversion_platform: amazon2
      multiversion_edition: enterprise
      has_packages: true
      packager_script: packager_enterprise.py
      packager_arch: aarch64
      packager_distro: amazon2
      repo_edition: enterprise
      compile_variant: enterprise-amazon2-arm64
      core_analyzer_distro_name: amazon2-arm64-latest-large
      large_distro_name: amazon2-arm64-latest-large
    tasks:
      - name: compile_test_and_package_serial_no_unittests_TG
        distros:
          - amazon2-arm64-latest-xlarge
      - name: run_unit_tests_TG
        distros:
          - amazon2-arm64-latest-xlarge
      - name: test_packages
        distros:
          - ubuntu2204-arm64-large
      - name: .development_critical !.requires_large_host
      - name: .development_critical .requires_large_host
        distros:
          - amazon2-arm64-latest-large
      - name: .release_critical !.requires_large_host
      - name: .release_critical .requires_large_host
        distros:
          - amazon2-arm64-latest-large

  - name: amazon2023
    display_name: Amazon Linux 2023.3
    tags: ["bazel_check", "forbid_tasks_tagged_with_experimental"]
    cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2023.3-small
    expansions:
      push_path: linux
      push_bucket: downloads.mongodb.org
      push_bucket_new: cdn-origin-mongodb-server-community
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-community
      push_name: linux
      push_arch: x86_64-amazon2023
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2023
        --build_enterprise=False
      compile_all_but_not_unittests_flags: >-
        --linkopt=-s
      test_flags: >-
        --excludeWithAnyTags=incompatible_with_amazon_linux,requires_external_data_source
        --modules=none
      has_packages: true
      packager_script: packager.py
      packager_arch: x86_64
      packager_distro: amazon2023
      repo_edition: org
      large_distro_name: amazon2023.3-large
      compile_variant: amazon2023
    tasks:
      - name: compile_test_and_package_serial_TG
        distros:
          - amazon2023.3-large
      - name: run_unit_tests_TG
        distros:
          - amazon2023.3-large
      - name: test_packages
        distros:
          - ubuntu2204-large
      - name: .development_critical !.requires_large_host !.incompatible_community
      - name: .development_critical .requires_large_host !.incompatible_community
        distros:
          - amazon2023.3-large
      - name: .release_critical !.requires_large_host !.incompatible_community
      - name: .release_critical .requires_large_host !.incompatible_community
        distros:
          - amazon2023.3-large

  - name: enterprise-amazon2023
    display_name: "Enterprise Amazon Linux 2023.3"
    tags: ["forbid_tasks_tagged_with_experimental"]
    cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2023.3-small
    expansions:
      additional_package_targets: archive-mongocryptd-stripped archive-mongocryptd-debug
      push_path: linux
      push_bucket: downloads.10gen.com
      push_bucket_new: cdn-origin-mongodb-server-enterprise
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-enterprise
      push_name: linux
      push_arch: x86_64-enterprise-amazon2023
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2023
      compile_all_but_not_unittests_flags: >-
        --linkopt=-s
      test_flags: --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_v4_0,requires_external_data_source
      has_packages: true
      multiversion_platform: amazon2023
      multiversion_edition: enterprise
      multiversion_architecture: x86_64
      packager_script: packager_enterprise.py
      packager_arch: x86_64
      packager_distro: amazon2023
      repo_edition: enterprise
      compile_variant: enterprise-amazon2023
    tasks:
      - name: compile_test_and_package_serial_TG
        distros:
          - amazon2023.3-xlarge
      - name: run_unit_tests_TG
        distros:
          - amazon2023.3-xlarge
      - name: test_packages
        distros:
          - ubuntu2204-large
      - name: .development_critical !.requires_large_host
      - name: .development_critical .requires_large_host
        distros:
          - amazon2023.3-large
      - name: .release_critical !.requires_large_host
      - name: .release_critical .requires_large_host
        distros:
          - amazon2023.3-large

  # TODO(SERVER-85904): Enable when Bazel supports --link-model=object.
  # This variant is a special variant to test Link Time Optimization (LTO).
  # - name: enterprise-amazon2023-lto
  #   display_name: "Enterprise Amazon Linux 2023 LTO"
  #   tags: []
  #   cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
  #   run_on:
  #     - amazon2023.3-small
  #   expansions:
  #     additional_package_targets: archive-mongocryptd-stripped archive-mongocryptd-debug
  #     bazel_compile_flags: >-
  #       --define=MONGO_DISTMOD=amazon2023
  #       --lto
  #       --linker=gold
  #       --link-model=object
  #     test_flags: --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_v4_0,requires_external_data_source
  #     has_packages: true
  #     packager_script: packager_enterprise.py
  #     packager_arch: x86_64
  #     packager_distro: amazon2023
  #     multiversion_platform: amazon2023
  #     multiversion_edition: enterprise
  #     multiversion_architecture: x86_64
  #     repo_edition: enterprise
  #     compile_variant: enterprise-amazon2023-lto
  #     large_distro_name: amazon2023.3-large
  #   tasks:
  #     - name: compile_test_and_package_serial_lto_no_unittests_TG
  #       distros:
  #         - amazon2023.3-large
  #     # TODO: SERVER-79886 Fix broken test_packages task
  #     # - name: test_packages
  #     #   distros:
  #     #   - amazon2023.3-large
  #     - name: .development_critical !.requires_large_host
  #     - name: .development_critical .requires_large_host
  #       distros:
  #         - amazon2023.3-large
  #     - name: .release_critical !.requires_large_host !publish_packages !push !crypt_push
  #     - name: .release_critical .requires_large_host !publish_packages !push !crypt_push
  #       distros:
  #         - amazon2023.3-large

  - name: amazon2023-arm64
    display_name: Amazon Linux 2023.3 arm64
    tags: ["bazel_check", "forbid_tasks_tagged_with_experimental"]
    cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2023.3-arm64-small
    expansions:
      push_path: linux
      push_bucket: downloads.mongodb.org
      push_bucket_new: cdn-origin-mongodb-server-community
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-community
      push_name: linux
      push_arch: aarch64-amazon2023
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2023
        --build_enterprise=False
      compile_all_but_not_unittests_flags: >-
        --linkopt=-s
      test_flags: >-
        --excludeWithAnyTags=incompatible_with_amazon_linux,requires_external_data_source
        --modules=none
      has_packages: true
      packager_script: packager.py
      packager_arch: aarch64
      packager_distro: amazon2023
      repo_edition: org
      large_distro_name: amazon2023.3-arm64-large
      compile_variant: amazon2023-arm64
    tasks:
      - name: compile_test_and_package_serial_TG
        distros:
          - amazon2023.3-arm64-large
      - name: run_unit_tests_TG
        distros:
          - amazon2023.3-arm64-large
      - name: test_packages
        distros:
          - ubuntu2204-arm64-large
      - name: .development_critical !.requires_large_host !.incompatible_community
      - name: .development_critical .requires_large_host !.incompatible_community
        distros:
          - amazon2023.3-arm64-large
      - name: .release_critical !.requires_large_host !.incompatible_community
      - name: .release_critical .requires_large_host !.incompatible_community
        distros:
          - amazon2023.3-arm64-large

  - &enterprise-amazon2023-arm64-template
    name: &enterprise-amazon2023-arm64 enterprise-amazon2023-arm64
    display_name: "Enterprise Amazon Linux 2023.3 arm64"
    tags: ["forbid_tasks_tagged_with_experimental"]
    cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2023.3-arm64-small
    expansions: &enterprise-amazon2023-arm64-dynamic-expansions
      additional_package_targets: archive-mongocryptd-stripped archive-mongocryptd-debug
      push_path: linux
      push_bucket: downloads.10gen.com
      push_bucket_new: cdn-origin-mongodb-server-enterprise
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-enterprise
      push_name: linux
      push_arch: aarch64-enterprise-amazon2023
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2023
      compile_all_but_not_unittests_flags: >-
        --linkopt=-s
      test_flags: --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_v4_0,requires_external_data_source
      has_packages: true
      multiversion_platform: amazon2023
      multiversion_edition: enterprise
      multiversion_architecture: aarch64
      packager_script: packager_enterprise.py
      packager_arch: aarch64
      packager_distro: amazon2023
      repo_edition: enterprise
      compile_variant: *enterprise-amazon2023-arm64
      large_distro_name: amazon2023.3-arm64-large
      core_analyzer_distro_name: amazon2023.3-arm64-large
    tasks:
      - name: compile_test_and_package_serial_TG
        distros:
          - amazon2023.3-arm64-xxxlarge
      - name: run_unit_tests_TG
        distros:
          - amazon2023.3-arm64-xxlarge
      - name: test_packages
        distros:
          - ubuntu2204-arm64-large
      - name: .development_critical !.requires_large_host
      - name: .development_critical .requires_large_host
        distros:
          - amazon2023.3-arm64-large
      - name: .release_critical !.requires_large_host
      - name: .release_critical .requires_large_host
        distros:
          - amazon2023.3-arm64-large

  # TODO(SERVER-85904): Enable when Bazel supports --link-model=object.
  # This variant is a special variant to test Link Time Optimization (LTO).
  # - name: enterprise-amazon2023-arm64-lto
  #   display_name: "Enterprise Amazon Linux 2023 arm64 LTO"
  #   tags: []
  #   cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
  #   activate: false
  #   run_on:
  #     - amazon2023.3-arm64-small
  #   expansions:
  #     additional_package_targets: archive-mongocryptd-stripped archive-mongocryptd-debug
  #     bazel_compile_flags: >-
  #       --define=MONGO_DISTMOD=amazon2023
  #       --lto
  #       --linker=gold
  #       --link-model=object
  #     test_flags: --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_v4_0,requires_external_data_source
  #     has_packages: true
  #     multiversion_platform: amazon2023
  #     multiversion_edition: enterprise
  #     multiversion_architecture: aarch64
  #     packager_script: packager_enterprise.py
  #     packager_arch: aarch64
  #     packager_distro: amazon2023
  #     repo_edition: enterprise
  #     compile_variant: enterprise-amazon2023-arm64-lto
  #     large_distro_name: amazon2023.3-arm64-large
  #   tasks:
  #     - name: compile_test_and_package_serial_lto_no_unittests_TG
  #       distros:
  #         - amazon2023.3-arm64-large
  #     # TODO: SERVER-79886 Fix broken test_packages task
  #     # - name: test_packages
  #     #   distros:
  #     #   - ubuntu2204-arm64-large
  #     - name: .development_critical !.requires_large_host
  #     - name: .development_critical .requires_large_host
  #       distros:
  #         - amazon2023.3-arm64-large
  #     - name: .release_critical !.requires_large_host !publish_packages !push !crypt_push
  #     - name: .release_critical .requires_large_host !publish_packages !push !crypt_push
  #       distros:
  #         - amazon2023.3-arm64-large

  - name: enterprise-amazon2023-streams
    display_name: "Amazon Linux 2023 enterprise build with streams"
    cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2023-latest-small
    expansions:
      test_flags: >-
        --excludeWithAnyTags=SERVER-34286,incompatible_with_amazon_linux,requires_external_data_source,requires_ldap_pool
        --additionalFeatureFlags=featureFlagStreams
      push_path: linux
      push_bucket: downloads.10gen.com
      push_bucket_new: cdn-origin-mongodb-server-enterprise
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-enterprise
      push_name: linux
      push_arch: x86_64-enterprise-amazon2023-streams
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2023
        --streams_release_build=True
      multiversion_platform: amazon2023
      multiversion_edition: enterprise-streams
      has_packages: true
      packager_script: packager_enterprise.py
      packager_arch: x86_64
      packager_distro: amazon2023
      repo_edition: enterprise
      compile_variant: enterprise-amazon2023-streams
      large_distro_name: amazon2023-latest-large
    tasks:
      - name: compile_and_archive_dist_test_TG
        distros:
          - amazon2023-latest-large
      - name: aggregation
      - name: streams_gen
      - name: streams_kafka_gen
      - name: streams_kafka_gwproxy
      - name: streams_kafka_benchmark
      - name: streams_https
      - name: streams_lambda
      - name: streams_s3
      - name: streams_kinesis
      - name: streams_aspio_gen
      - name: streams_build_and_push_gen

  - name: enterprise-amazon2023-streams-arm64
    display_name: "Amazon Linux 2023 enterprise build with streams arm64"
    cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2023-arm64-latest-small
    expansions:
      test_flags: >-
        --excludeWithAnyTags=SERVER-34286,incompatible_with_amazon_linux,requires_external_data_source,requires_ldap_pool
        --additionalFeatureFlags=featureFlagStreams
      push_path: linux
      push_bucket: downloads.10gen.com
      push_bucket_new: cdn-origin-mongodb-server-enterprise
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-enterprise
      push_name: linux
      push_arch: aarch64-enterprise-amazon2023-streams
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2023
        --streams_release_build=True
      multiversion_platform: amazon2023
      multiversion_edition: enterprise-streams
      has_packages: true
      packager_script: packager_enterprise.py
      packager_arch: aarch64
      packager_distro: amazon2023
      repo_edition: enterprise
      compile_variant: enterprise-amazon2023-streams-arm64
      large_distro_name: amazon2023-arm64-latest-large
    tasks:
      - name: compile_and_archive_dist_test_TG
        distros:
          - amazon2023-arm64-latest-large
      - name: streams_gen
      - name: streams_kafka_gen
      # TODO(SERVER-103985) - Enabling this is blocked on SRE support arm64 in the sre/gwproxy image (SRE-1481)
      # - name: streams_kafka_gwproxy
      - name: streams_kinesis
      - name: streams_kafka_benchmark
      - name: streams_https
      - name: streams_lambda
      - name: streams_s3
      - name: aggregation
      - name: streams_aspio_gen
      - name: streams_build_and_push_gen
      # Only needed once to generate the streams manifest for both x86 and arm
      - name: streams_publish_manifest_al2023_gen

  - name: enterprise-amazon2-streams
    display_name: "Amazon Linux 2 enterprise build with streams"
    cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2-latest-small
    expansions:
      test_flags: >-
        --excludeWithAnyTags=SERVER-34286,incompatible_with_amazon_linux,requires_external_data_source,requires_ldap_pool
        --additionalFeatureFlags=featureFlagStreams
      push_path: linux
      push_bucket: downloads.10gen.com
      push_bucket_new: cdn-origin-mongodb-server-enterprise
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-enterprise
      push_name: linux
      push_arch: x86_64-enterprise-amazon2-streams
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2
        --streams_release_build=True
      multiversion_platform: amazon2
      multiversion_edition: enterprise-streams
      has_packages: true
      packager_script: packager_enterprise.py
      packager_arch: x86_64
      packager_distro: amazon2
      repo_edition: enterprise
      compile_variant: enterprise-amazon2-streams
      large_distro_name: amazon2-latest-large
    tasks:
      - name: compile_and_archive_dist_test_TG
        distros:
          - amazon2-latest-large
      - name: aggregation
      - name: streams_gen
      - name: streams_kafka_gen
      - name: streams_kafka_gwproxy
      - name: streams_kafka_benchmark
      - name: streams_https
      - name: streams_lambda
      - name: streams_s3
      - name: streams_kinesis
      - name: streams_aspio_gen
      - name: streams_build_and_push_gen

  - name: enterprise-amazon2-streams-arm64
    display_name: "Amazon Linux 2 enterprise build with streams arm64"
    cron: "0 3 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2-arm64-latest-small
    expansions:
      test_flags: >-
        --excludeWithAnyTags=SERVER-34286,incompatible_with_amazon_linux,requires_external_data_source,requires_ldap_pool
        --additionalFeatureFlags=featureFlagStreams
      push_path: linux
      push_bucket: downloads.10gen.com
      push_bucket_new: cdn-origin-mongodb-server-enterprise
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-enterprise
      push_name: linux
      push_arch: aarch64-enterprise-amazon2-streams
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2
        --streams_release_build=True
      multiversion_platform: amazon2
      multiversion_edition: enterprise-streams
      has_packages: true
      packager_script: packager_enterprise.py
      packager_arch: aarch64
      packager_distro: amazon2
      repo_edition: enterprise
      compile_variant: enterprise-amazon2-streams-arm64
      large_distro_name: amazon2-arm64-latest-large
    tasks:
      - name: compile_and_archive_dist_test_TG
        distros:
          - amazon2-arm64-latest-large
      - name: streams_gen
      - name: streams_kafka_gen
      # TODO(SERVER-103985) - Enabling this is blocked on SRE support arm64 in the sre/gwproxy image (SRE-1481)
      # - name: streams_kafka_gwproxy
      - name: aggregation
      - name: streams_kafka_benchmark
      - name: streams_https
      - name: streams_lambda
      - name: streams_s3
      - name: streams_kinesis
      - name: streams_aspio_gen
      - name: streams_build_and_push_gen
      # Only needed once to generate the streams manifest for both x86 and arm
      - name: streams_publish_manifest_gen

  - &enterprise-amazon2023-arm64-fuzzers-template
    <<: *enterprise-amazon2023-arm64-template
    name: enterprise-amazon2023-arm64-fuzzers
    display_name: "Enterprise Amazon Linux 2023.3 arm64 Fuzzers"
    tags: []
    depends_on:
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
      - name: archive_dist_test
        variant: *enterprise-amazon2023-arm64
    tasks:
      - name: .aggfuzzer !.multiversion
      - name: .change_stream_fuzzer
      - name: .query_fuzzer
      - name: .updatefuzzer !.multiversion

  - <<: *enterprise-amazon2023-arm64-fuzzers-template
    name: enterprise-amazon2023-arm64-fuzzers-roll-back-incremental-feature-flags
    display_name: "Enterprise Amazon Linux 2023.3 arm64 Fuzzers (roll back incremental feature flags)"
    cron: "0 1 1-31/2 * *" # For cost reasons, we run this variant every other day
    expansions:
      <<: *enterprise-amazon2023-arm64-dynamic-expansions
      test_flags: >-
        --disableUnreleasedIFRFlags
        --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_v4_0,requires_external_data_source
