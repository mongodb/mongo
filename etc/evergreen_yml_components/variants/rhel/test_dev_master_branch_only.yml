# RHEL build variants for testing development environments
#
# After the branching variants in this file
# should NOT run on a new rapid release (v7.1, v7.2 etc.)
# and LTS release (v7.0, v6.0 etc.) branch projects

variables:
  # THIS HAS COPIES IN:
  # - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/rhel/test_dev.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &linux-x86-dynamic-compile-params # Essential set of compile parameters used for Linux dev variants.
    run_on:
      - rhel8.8-xlarge
    activate: true # These compile variants run on every commit to reduce latency of the auto-reverter.
    stepback: false

  # THIS HAS COPIES IN:
  # - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/rhel/test_dev.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &linux-x86-dynamic-enterprise-compile-expansions
    has_packages: false
    bazel_compile_flags: >-
      --linkstatic=False

  # THIS HAS COPIES IN
  # - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
  # - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/wiredtiger/test_dev_master_branch_only.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &generic_linux_compile_params # Essential set of compile parameters used for Linux dev variants.
    run_on:
      - rhel8.8-xlarge
    activate: true # These compile variants run on every commit to reduce latency of the auto-reverter.
    tasks:
      - name: compile_test_parallel_core_stream_TG
      - name: run_unit_tests_TG
      - name: compile_test_parallel_dbtest_stream_TG
      - name: generate_buildid_to_debug_symbols_mapping

  # THIS HAS COPIES IN
  # - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
  # - etc/evergreen_yml_components/variants/sanitizer/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/wiredtiger/test_dev_master_branch_only.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &generic_linux_compile_expansions # The most commonly used compile expansions.
    has_packages: false

  # THIS HAS COPIES IN:
  # - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/rhel/test_dev_master_and_lts_branches_only.yml
  # - etc/evergreen_yml_components/variants/rhel/test_dev.yml
  # - etc/evergreen_yml_components/variants/sanitizer/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &linux_x86_dynamic_compile_variant_name linux-x86-dynamic-compile

  # THIS HAS COPIES IN:
  # - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/rhel/test_dev_master_and_lts_branches_only.yml
  # - etc/evergreen_yml_components/variants/rhel/test_dev.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &linux_x86_dynamic_compile_variant_dependency
    depends_on:
      - name: archive_dist_test
        variant: *linux_x86_dynamic_compile_variant_name
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
    # - name: generate_buildid_to_debug_symbols_mapping
    #   variant: linux-x86-dynamic-compile

  # THIS HAS COPIES IN:
  # - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/rhel/test_dev_master_and_lts_branches_only.yml
  # - etc/evergreen_yml_components/variants/rhel/test_dev.yml
  # - etc/evergreen_yml_components/variants/sanitizer/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &linux_x86_generic_expansions
    multiversion_platform: rhel8
    multiversion_edition: enterprise
    repo_edition: enterprise
    large_distro_name: rhel8.8-medium
    core_analyzer_distro_name: rhel8.8-xlarge
    compile_variant: *linux_x86_dynamic_compile_variant_name

  # THIS HAS COPIES IN:
  # - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/rhel/test_dev.yml
  # - etc/evergreen_yml_components/variants/sanitizer/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &enterprise-rhel-8-64-bit-dynamic-expansions
    <<: *linux_x86_generic_expansions
    has_packages: false
    jstestfuzz_num_generated_files: 40
    jstestfuzz_concurrent_num_files: 10
    target_resmoke_time: 10
    max_sub_suites: 5
    idle_timeout_factor: 1.5
    exec_timeout_factor: 1.5
    large_distro_name: rhel8.8-medium

  - &enterprise-rhel-8-64-bit-template
    name: enterprise-rhel-8-64-bit
    display_name: "Enterprise RHEL 8"
    cron: "0 1 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - rhel8.8-small
    expansions: &enterprise-rhel-8-64-bit-expansions-template
      additional_package_targets: >-
        archive-mongocryptd-stripped
        archive-mongocryptd-debug
      push_path: linux
      push_bucket: downloads.10gen.com
      push_bucket_new: cdn-origin-mongodb-server-enterprise
      push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-enterprise
      push_name: linux
      push_arch: x86_64-enterprise-rhel8
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=rhel88
      test_flags: --excludeWithAnyTags=requires_ldap_pool
      multiversion_platform: rhel8
      multiversion_edition: enterprise
      has_packages: true
      packager_script: packager_enterprise.py
      packager_arch: x86_64
      packager_distro: rhel88
      repo_edition: enterprise
      core_analyzer_distro_name: rhel8.8-large
    tasks:
      - name: compile_test_and_package_serial_no_unittests_TG
        distros:
          - rhel8.8-large
      - name: .aggfuzzer !.feature_flag_guarded
      - name: audit
      - name: auth_audit_gen
      - name: auth_gen
      - name: causally_consistent_jscore_txns_passthrough
      - name: .config_fuzzer !.large
      - name: .encrypt !.sharding !.replica_sets !.aggregation !.jscore
      - name: external_auth
      - name: external_auth_aws
      - name: .jscore .common !.decimal !.sharding
      - name: jsCore_txns_large_txns_format
      - name: .jstestfuzz .common !.feature_flag_guarded
      - name: libunwind_tests
      - name: .ocsp
      - name: replica_sets_auth_gen
      - name: replica_sets_jscore_passthrough_gen
      - name: .replica_sets .multi_oplog
      - name: sasl
      - name: search
        distros:
          - rhel8.8-large
      - name: search_community
        distros:
          - rhel8.8-large
      - name: search_community_ssl
        distros:
          - rhel8.8-large
      - name: search_auth
        distros:
          - rhel8.8-large
      - name: search_no_pinned_connections_auth
      - name: search_ssl
        distros:
          - rhel8.8-large
      - name: sharding_auth_audit_gen
      - name: .stitch
      - name: .crypt
      - name: unittest_shell_hang_analyzer_gen
      - name: test_packages
        distros:
          - ubuntu2204-large
      - name: .timeseries_crud
      - name: vector_search
      - name: vector_search_auth
      - name: vector_search_ssl
      - name: selinux_rhel8_enterprise
      - name: generate_buildid_to_debug_symbols_mapping
      - name: product_limits
        cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter

buildvariants:
  - <<: *generic_linux_compile_params
    name: &linux-x86-dynamic-compile-future-tag-multiversion-latest linux-x86-dynamic-compile-future-tag-multiversion-latest
    display_name: "Linux x86 Shared Library Compile (future git tag multiversion - latest)"
    tags: []
    expansions:
      <<: *linux-x86-dynamic-enterprise-compile-expansions
      bv_future_git_tag: r100.0.0-9999
      compile_variant: *linux-x86-dynamic-compile-future-tag-multiversion-latest
      archive_dist_test_debug_task_name: archive_dist_test_debug_future_git_tag_multiversion
    tasks:
      - name: version_expansions_future_git_tag_multiversion_gen
      - name: compile_test_serial_future_git_tag_multiversion_TG

  - <<: *generic_linux_compile_params
    name: &linux-x86-dynamic-compile-future-tag-multiversion-last-continuous linux-x86-dynamic-compile-future-tag-multiversion-last-continuous
    display_name: "Linux x86 Shared Library Compile (future git tag multiversion - last continuous)"
    tags: []
    expansions:
      <<: *linux-x86-dynamic-enterprise-compile-expansions
      compile_variant: *linux-x86-dynamic-compile-future-tag-multiversion-last-continuous
    tasks:
      - name: compile_and_package_serial_no_unittests_TG

  - <<: *linux-x86-dynamic-compile-params
    name: &linux-stitch-compile-suggested linux-stitch-compile-suggested
    display_name: "* Linux x86 Stitch Enterprise Compile"
    tags: ["suggested"]
    expansions:
      compile_variant: *linux-stitch-compile-suggested
    tasks:
      - name: .stitch

  - <<: *linux-x86-dynamic-compile-params
    name: &linux-crypt-compile linux-crypt-compile
    display_name: "* Linux x86 Crypt Enterprise Compile"
    tags: ["suggested"]
    expansions:
      compile_variant: *linux-crypt-compile
    tasks:
      - name: .crypt
      - name: crypt_build_debug_and_test

  - name: &linux-x86-dynamic-grpc linux-x86-dynamic-grpc
    display_name: "~ Linux x86 Shared Library Enterprise with Ingress GRPC"
    cron: "0 1 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - rhel8.8-xlarge
    stepback: false
    expansions:
      <<: *generic_linux_compile_expansions
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=rhel88
        --linkstatic=False
      compile_variant: *linux-x86-dynamic-grpc
      clang_tidy_toolchain: v5
      large_distro_name: rhel8.8-xlarge
      test_flags: >-
        --additionalFeatureFlags "featureFlagGRPC"
        --excludeWithAnyTags=requires_external_data_source,requires_mongobridge,requires_auth,grpc_incompatible,creates_and_authenticates_user
        --tlsMode preferTLS
        --tlsCAFile jstests/libs/ca.pem
        --shellTls
        --shellTlsCertificateKeyFile jstests/libs/client.pem
        --mongosTlsCertificateKeyFile jstests/libs/server.pem
        --mongodTlsCertificateKeyFile jstests/libs/server.pem
        --shellGRPC
    tasks:
      - name: run_unit_tests_TG
      - name: compile_test_parallel_core_stream_TG
      - name: compile_test_parallel_dbtest_stream_TG
      - name: generate_buildid_to_debug_symbols_mapping
      # sharding_uninitialized_fcv_jscore_passthrough_gen spawns too many connections
      # and processes to be used with TLS on a single host.
      - name: .jscore .common !sharding_uninitialized_fcv_jscore_passthrough_gen !.auth !.txns
      - name: sharded_jscore_txns
      - name: .aggregation !.auth !aggregation_read_concern_majority_passthrough !aggregation_secondary_reads_gen
      # concurrency suites that use a ReplicaSetFixture will fail on this build variant.
      # TODO(SERVER-108818): Remove concurrency_replication_primary_driven_index_builds_gen after removing temporary primary-driven index builds suites.
      - name: .concurrency !.auth !concurrency_replication_causal_consistency_gen !concurrency_replication_maintenance_gen !concurrency_replication_multi_stmt_txn_gen !concurrency_replication_primary_driven_index_builds_gen !concurrency_replication_gen !concurrency_replication_viewless_timeseries_gen !concurrency_simultaneous_replication_gen !config_fuzzer_concurrency_replication_gen !config_fuzzer_concurrency_simultaneous_replication_gen
      - name: .grpc_misc_js

  - &enterprise-rhel-8-64-bit-dynamic-all-feature-flags-template
    <<: *linux_x86_dynamic_compile_variant_dependency
    name: enterprise-rhel-8-64-bit-dynamic-all-feature-flags
    display_name: "* Shared Library Enterprise RHEL 8 (all feature flags)"
    tags: ["suggested", "forbid_tasks_tagged_with_experimental"]
    cron: "0 */4 * * *" # From the ${project_required_suggested_cron} parameter
    run_on:
      - rhel8.8-small
    stepback: false
    expansions: &enterprise-rhel-8-64-bit-dynamic-all-feature-flags-expansions
      <<: *enterprise-rhel-8-64-bit-dynamic-expansions
      # To force disable feature flags even on the all feature flags variant, please use this file:
      # buildscripts/resmokeconfig/fully_disabled_feature_flags.yml
      test_flags: >-
        --runAllFeatureFlagTests
      build_mongot: true
      download_mongot_release: true
    depends_on:
      - name: archive_dist_test
        variant: *linux_x86_dynamic_compile_variant_name
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
    tasks:
      - name: .development_critical !.requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags
      - name: .development_critical .requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags
        distros:
          - rhel8.8-medium
      - name: .release_critical !.requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags
      - name: .release_critical .requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags
        distros:
          - rhel8.8-medium
      - name: .default !.requires_large_host !.requires_extra_system_deps !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags
      - name: .default .requires_large_host !.requires_extra_system_deps !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags
        distros:
          - rhel8.8-medium

  - <<: *enterprise-rhel-8-64-bit-dynamic-all-feature-flags-template
    name: enterprise-rhel-8-64-bit-dynamic-all-feature-flags-experimental
    display_name: "* Shared Library Enterprise RHEL 8 (all feature flags) Experimental"
    tags: ["suggested"]
    tasks:
      &experimental-task-list # TODO(SERVER-90936): Remove streams_kafka* and streams_lambda tests when they work with the "default" tag.
      - name: streams_kafka_gen
      - name: streams_kafka_gwproxy
      - name: streams_lambda
      - name: streams_s3
      - name: streams_kinesis
      - name: product_limits
        cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter

  - <<: *enterprise-rhel-8-64-bit-dynamic-all-feature-flags-template
    name: enterprise-rhel-8-64-bit-dynamic-all-non-rollback-feature-flags
    display_name: "Shared Library Enterprise RHEL 8 (all non-rollback feature flags)"
    tags: ["forbid_tasks_tagged_with_experimental"]
    cron: "0 4 1-31/2 * *" # For cost reasons, we run this variant every other day
    expansions:
      <<: *enterprise-rhel-8-64-bit-dynamic-expansions
      # To force disable feature flags even on the all feature flags variant, please use this file:
      # buildscripts/resmokeconfig/fully_disabled_feature_flags.yml
      test_flags: >-
        --runAllFeatureFlagTests --disableUnreleasedIFRFlags

  - <<: *enterprise-rhel-8-64-bit-dynamic-all-feature-flags-template
    name: enterprise-rhel-8-64-bit-dynamic-all-non-rollback-feature-flags-experimental
    display_name: "Shared Library Enterprise RHEL 8 (all non-rollback feature flags) Experimental"
    tags: []
    cron: "0 4 1-31/2 * *" # For cost reasons, we run this variant every other day
    expansions:
      <<: *enterprise-rhel-8-64-bit-dynamic-expansions
      # To force disable feature flags even on the all feature flags variant, please use this file:
      # buildscripts/resmokeconfig/fully_disabled_feature_flags.yml
      test_flags: >-
        --runAllFeatureFlagTests --disableUnreleasedIFRFlags
    tasks: *experimental-task-list

  - name: &enterprise-rhel-8-benchmarks enterprise-rhel-8-benchmarks
    display_name: "* Enterprise RHEL 8 (Benchmarks)"
    tags: ["suggested"]
    cron: "0 1 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - rhel8.8-large
    expansions:
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=rhel88
        --dbg_level=1
        --separate_debug=False
      compile_variant: *enterprise-rhel-8-benchmarks
    tasks:
      - name: compile_upload_benchmarks_TG
        distros:
          - rhel8.8-xlarge
      - name: .benchmarks

  # This build variant is used to run multiversion tests as part of burn_in_tags as these tests are
  # currently only run on our daily builders.
  - &linux-x86-multiversion-template
    <<: *linux_x86_dynamic_compile_variant_dependency
    name: enterprise-rhel-8-64-bit-multiversion
    display_name: "Enterprise RHEL 8 (implicit multiversion)"
    tags: []
    cron: "0 1 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - rhel8.8-small
    expansions: &linux-x86-multiversion-expansions-template
      <<: *linux_x86_generic_expansions
      resmoke_jobs_factor: 0.25
    tasks:
      - name: .multiversion_fuzzer
      - name: .multiversion_passthrough
      - name: .random_multiversion_ds

  - <<: *linux-x86-multiversion-template
    name: enterprise-rhel-8-64-bit-multiversion-all-feature-flags
    display_name: "Enterprise RHEL 8 (implicit multiversion & all feature flags)"
    tags: []
    expansions:
      <<: *linux-x86-multiversion-expansions-template
      # No feature flag tests since they aren't compatible with the older binaries.
      test_flags: >-
        --runNoFeatureFlagTests

  # This variant exists because this is the only way to test future multiversion tags
  # version_expansions_gen will pretend we are upgrading to "bv_future_git_tag"
  # which is like simulating a branching task
  - <<: *linux-x86-multiversion-template
    name: enterprise-rhel-8-64-bit-future-git-tag-multiversion
    display_name: "Enterprise RHEL 8 (future git tag multiversion)"
    tags: []
    expansions:
      <<: *linux_x86_generic_expansions
      resmoke_jobs_factor: 0.5
      bv_future_git_tag: r100.0.0-9999
      compile_variant: *linux-x86-dynamic-compile-future-tag-multiversion-latest
      test_flags: >-
        --excludeWithAnyTags=future_git_tag_incompatible
      unique_gen_suffix: "-future"
      last_versions: last_lts,last_continuous
      multiversion_last_continuous_variant: *linux-x86-dynamic-compile-future-tag-multiversion-last-continuous
    depends_on:
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
      - name: archive_dist_test_debug_future_git_tag_multiversion
        variant: *linux-x86-dynamic-compile-future-tag-multiversion-latest
      - name: archive_dist_test
        variant: *linux-x86-dynamic-compile-future-tag-multiversion-last-continuous
    tasks:
      - name: .multiversion !.future_git_tag_incompatible
      - name: .multiversion_future_git_tag

  - <<: *enterprise-rhel-8-64-bit-template
    name: &hot_backups-rhel-8-64-bit hot_backups-rhel-8-64-bit
    display_name: "hot_backups RHEL 8"
    tags: []
    cron: "0 1 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - rhel8.8-small
    expansions:
      <<: *enterprise-rhel-8-64-bit-expansions-template
      additional_package_targets: ""
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=rhel88
        --//bazel/config:enterprise_feature_all=False
        --//bazel/config:enterprise_feature_hot_backups=True
        --//bazel/config:enterprise_feature_magic_restore=True
        --//bazel/config:enterprise_feature_ldap=True
        --//bazel/config:enterprise_feature_sasl=True
        --//bazel/config:enterprise_feature_encryptdb=True
        --linkstatic=False
      compile_variant: *hot_backups-rhel-8-64-bit
      has_packages: false
    tasks:
      - name: compile_test_parallel_core_stream_TG
        distros:
          - rhel8.8-large
      - name: run_unit_tests_TG
        distros:
          - rhel8.8-large
      - name: compile_test_parallel_dbtest_stream_TG
        distros:
          - rhel8.8-large
      - name: jsCore
        distros:
          - rhel8.8-large
      - name: noPassthroughHotBackups_gen
      - name: generate_buildid_to_debug_symbols_mapping

  - name: &enterprise-rhel8-sdam-replica-set-monitor-64-bit enterprise-rhel8-sdam-replica-set-monitor-64-bit
    display_name: "~ Enterprise RHEL 8 (with SdamReplicaSetMonitor)"
    tags: []
    cron: "0 1 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - rhel8.8-small
    expansions:
      <<: *linux_x86_generic_expansions
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=rhel88
        --linkstatic=False
      test_flags: >-
        --mongosSetParameters="{replicaSetMonitorProtocol: sdam}"
        --mongodSetParameters="{replicaSetMonitorProtocol: sdam}"
        --excludeWithAnyTags=requires_streamable_rsm
      large_distro_name: rhel8.8-large
      compile_variant: *enterprise-rhel8-sdam-replica-set-monitor-64-bit
    tasks:
      - name: compile_test_parallel_core_stream_TG
        distros:
          - rhel8.8-large
      - name: run_unit_tests_TG
        distros:
          - rhel8.8-large
      - name: compile_test_parallel_dbtest_stream_TG
        distros:
          - rhel8.8-large
      - name: compile_integration_and_test_parallel_stream_TG
        distros:
          - rhel8.8-large
      - name: .aggregation !.no_async !.feature_flag_guarded !.requires_large_host
      - name: .aggregation !.no_async !.feature_flag_guarded .requires_large_host
        distros:
          - rhel8.8-large
      - name: sharding_auth_gen
      - name: .sharding .causally_consistent !.wo_snapshot
      - name: .concurrency .common !.kill_terminate !.feature_flag_guarded
      - name: .jscore .common !.requires_large_host
      - name: .jscore .common .requires_large_host
        distros:
          - rhel8.8-large
      - name: .sharding .jscore !.wo_snapshot !.multi_stmt !.feature_flag_guarded
      - name: .sharding .common !.csrs !.encrypt !.feature_flag_guarded
      - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
      - name: generate_buildid_to_debug_symbols_mapping

  # This build variant injects old-format (pre-4.2) unique index keys for all new keys inserted into
  # a index. This should not change correctness or user-observable server behavior.
  - <<: *linux_x86_dynamic_compile_variant_dependency
    name: enterprise-rhel-8-64-bit-old-unique-index-format
    display_name: "Enterprise RHEL 8 (old unique index format)"
    tags: []
    cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter
    run_on:
      - rhel8.8-small
    expansions:
      <<: *linux_x86_generic_expansions
      test_flags: >-
        --mongodSetParameters="{'failpoint.WTIndexCreateUniqueIndexesInOldFormat': {mode: 'alwaysOn'}, 'failpoint.WTIndexInsertUniqueKeysInOldFormat': {mode: 'alwaysOn'}}"
        --excludeWithAnyTags=disables_test_commands,assumes_no_old_format_indexes
    tasks:
      - name: .aggfuzzer
      - name: .aggregation !.no_async !.feature_flag_guarded !.requires_large_host
      - name: .aggregation !.no_async !.feature_flag_guarded .requires_large_host
        distros:
          - rhel8.8-large
      - name: auth_gen
      - name: auth_audit_gen
      - name: causally_consistent_jscore_txns_passthrough
      - name: .concurrency .common !.large !.feature_flag_guarded
      - name: .config_fuzzer !.large
      - name: disk_wiredtiger
      - name: initial_sync_fuzzer_gen
      - name: fcv_upgrade_downgrade_replica_sets_jscore_passthrough_gen
      - name: fcv_upgrade_downgrade_sharding_jscore_passthrough_gen
      - name: fcv_upgrade_downgrade_sharded_collections_jscore_passthrough_gen
      - name: jsCore
        distros:
          - rhel8.8-large
      - name: jsCore_txns
      - name: .multi_shard
      - name: multiversion_auth_gen
      - name: noPassthrough_gen
      - name: .query_fuzzer
      - name: .replica_sets !.large
      - name: .resharding_fuzzer
      - name: .rollbackfuzzer
      - name: secondary_reads_passthrough_gen
      - name: .sharding .txns
      - name: .sharding .common !.feature_flag_guarded
      - name: .updatefuzzer
      - name: v1index_jscore_passthrough_gen

  - name: &enterprise-rhel8-join-ingress-sessions-on-shutdown enterprise-rhel8-join-ingress-sessions-on-shutdown
    display_name: '~ Enterprise RHEL 8 (with {joinIngressSessionsOnShutdown: "true"})'
    tags: []
    activate: false
    run_on:
      - rhel8.8-small
    expansions:
      <<: *linux_x86_generic_expansions
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=rhel88
        --linkstatic=False
      multiversion_platform: rhel8
      multiversion_edition: enterprise
      test_flags: >-
        --mongosSetParameters="joinIngressSessionsOnShutdown: \"true\""
        --mongodSetParameters="joinIngressSessionsOnShutdown: \"true\""
      large_distro_name: rhel8.8-large
      compile_variant: *enterprise-rhel8-join-ingress-sessions-on-shutdown
    tasks:
      - name: compile_test_serial_TG
        distros:
          - rhel8.8-large
      - name: run_unit_tests_TG
        distros:
          - rhel8.8-large
        patch_only: true
      - name: compile_integration_and_test_no_audit_parallel_stream_TG
        distros:
          - rhel8.8-large
        patch_only: true
      - name: .aggregation !.no_async !.feature_flag_guarded !.requires_large_host
        patch_only: true
      - name: .aggregation !.no_async !.feature_flag_guarded .requires_large_host
        patch_only: true
        distros:
          - rhel8.8-large
      - name: sharding_auth_gen
        patch_only: true
      - name: .sharding .causally_consistent !.wo_snapshot
        patch_only: true
      - name: .concurrency .common !.kill_terminate !.feature_flag_guarded
        patch_only: true
      - name: .jscore .common !.requires_large_host
        patch_only: true
      - name: .jscore .common .requires_large_host
        patch_only: true
        distros:
          - rhel8.8-large
      - name: .sharding .jscore !.wo_snapshot !.multi_stmt !.feature_flag_guarded
        patch_only: true
      - name: .sharding .common !.csrs !.encrypt !.feature_flag_guarded
        patch_only: true
      - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
        patch_only: true

  ### Query Patch-Specific Build Variants ###

  - name: enterprise-rhel-8-64-bit-dynamic-query-quick-patch-only
    display_name: "~ Shared Library Enterprise RHEL 8 Query Quick Patch Only"
    tags: []
    cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter # This is a patch-only variant but we run on mainline to pick up task history.
    run_on:
      - rhel8.8-small
    stepback: false
    expansions:
      <<: *enterprise-rhel-8-64-bit-dynamic-expansions
      target_resmoke_time: 30
      max_sub_suites: 3
      test_flags: >-
        --excludeWithAnyTags=resource_intensive
    depends_on:
      - name: archive_dist_test
        variant: *linux_x86_dynamic_compile_variant_name
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
    tasks: &query-quick-alias-task-list
      - name: aggregation
      - name: aggregation_mongos_passthrough
        distros:
          - rhel8.8-large
      - name: aggregation_sharded_collections_passthrough
        distros:
          - rhel8.8-large
      - name: jsCore
        distros:
          - rhel8.8-xlarge
      - name: search
        distros:
          - rhel8.8-xlarge
      - name: change_streams
      - name: query_golden_classic
      - name: query_golden_sharding
      - name: vector_search
      - name: replica_sets_jscore_passthrough_gen
      - name: sharding_jscore_passthrough_gen
      - name: sharded_collections_jscore_passthrough_gen
      - name: burn_in_tests_gen
        depends_on:
          - name: version_burn_in_gen
            variant: generate-tasks-for-version
            omit_generated_tasks: true
          - name: archive_dist_test
            variant: *linux_x86_dynamic_compile_variant_name
      - name: check_feature_flag_tags
      - name: check_for_todos

  - <<: *enterprise-rhel-8-64-bit-dynamic-all-feature-flags-template
    name: enterprise-rhel-8-64-bit-dynamic-all-feature-flags-required-query-quick-patch-only
    display_name: "~ Shared Library Enterprise RHEL 8 Query Quick Patch Only (all feature flags)"
    tags: []
    cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter # This is a patch-only variant but we run on mainline to pick up task history.
    expansions:
      <<: *enterprise-rhel-8-64-bit-dynamic-all-feature-flags-expansions
      test_flags: >-
        --runAllFeatureFlagTests
        --excludeWithAnyTags=resource_intensive
    tasks: *query-quick-alias-task-list

  - name: enterprise-rhel-8-64-bit-dynamic-classic-engine-all-feature-flags-fuzzers
    <<: *enterprise-rhel-8-64-bit-dynamic-all-feature-flags-template
    display_name: "*| Shared Library Enterprise RHEL 8 (Classic Engine all feature flags) Fuzzers"
    tags: ["suggested"]
    cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter # This is a patch-only variant but we run on mainline to pick up task history.
    expansions:
      <<: *enterprise-rhel-8-64-bit-dynamic-all-feature-flags-expansions
      target_resmoke_time: 30
      max_sub_suites: 3
      test_flags: >-
        --mongodSetParameters="{internalQueryFrameworkControl: forceClassicEngine}"
        --runAllFeatureFlagTests
        --excludeWithAnyTags=resource_intensive,featureFlagSbeFull
    tasks:
      - name: .aggfuzzer
      - name: .change_stream_fuzzer
      - name: .query_fuzzer
      - name: .updatefuzzer
      - name: .jstestfuzz

  - name: enterprise-rhel-8-64-bit-dynamic-classic-engine-all-non-rollback-feature-flags-fuzzers
    <<: *enterprise-rhel-8-64-bit-dynamic-all-feature-flags-template
    display_name: "Shared Library Enterprise RHEL 8 (Classic Engine all non-rollback feature flags) Fuzzers"
    tags: []
    cron: "0 4 1-31/2 * *" # For cost reasons, we run this variant every other day
    expansions:
      <<: *enterprise-rhel-8-64-bit-dynamic-all-feature-flags-expansions
      target_resmoke_time: 30
      max_sub_suites: 3
      test_flags: >-
        --mongodSetParameters="{internalQueryFrameworkControl: forceClassicEngine}"
        --runAllFeatureFlagTests --disableUnreleasedIFRFlags
        --excludeWithAnyTags=resource_intensive,featureFlagSbeFull
    tasks:
      - name: .aggfuzzer
      - name: .change_stream_fuzzer
      - name: .query_fuzzer
      - name: .updatefuzzer
      - name: .jstestfuzz

  ### Security Patch-Specific Build Variants ###
  - <<: *enterprise-rhel-8-64-bit-dynamic-all-feature-flags-template
    name: enterprise-rhel-8-64-bit-dynamic-all-feature-flags-required-security-patch-only
    display_name: "~ Shared Library Enterprise RHEL 8 Security Patch Only (all feature flags)"
    tags: []
    cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter # This is a patch-only variant but we run on mainline to pick up task history.
    expansions:
      <<: *enterprise-rhel-8-64-bit-dynamic-all-feature-flags-expansions
      target_resmoke_time: 15
      max_sub_suites: 15
    tasks:
      - name: burn_in_tests_gen
        depends_on:
          - name: version_burn_in_gen
            variant: generate-tasks-for-version
            omit_generated_tasks: true
          - name: archive_dist_test
            variant: *linux_x86_dynamic_compile_variant_name
      - name: .audit .patch_build
      - name: .encrypt .patch_build
      - name: .sasl .patch_build
      - name: external_auth
      - name: external_auth_aws
      - name: external_auth_oidc
      - name: lint_fuzzer_sanity_patch

  - name: tla-plus
    display_name: "TLA+"
    tags: []
    run_on:
      - rhel8.8-large
    cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter
    stepback: false
    expansions:
      timeout_secs: 345600 # 4 days
    tasks:
      - name: tla_plus
