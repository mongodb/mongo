# Windows build variants for testing development environments
#
# After the branching variants in this file
# should continue to run on a new rapid release (v7.1, v7.2 etc.)
# and LTS release (v7.0, v6.0 etc.) branch projects

variables:
  # THIS HAS COPIES IN:
  # - etc/evergreen_yml_components/variants/windows/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/windows/test_dev.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &windows_compile_variant_dependency
    depends_on:
      - name: archive_dist_test
        variant: &windows_compile_variant_name windows-compile-required
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
    # - name: generate_buildid_to_debug_symbols_mapping
    #   variant: windows-compile-required

  # THIS HAS COPIES IN:
  # - etc/evergreen_yml_components/variants/windows/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/windows/test_dev.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &windows_expansions
    compile_variant: *windows_compile_variant_name
    burn_in_tests_build_variant: enterprise-windows-all-feature-flags-required
    exe: ".exe"
    content_type: application/zip
    python: "/cygdrive/c/python/python310/python.exe"
    ext: zip
    multiversion_platform: windows
    multiversion_edition: enterprise
    jstestfuzz_num_generated_files: 35
    target_resmoke_time: 20
    max_sub_suites: 5
    large_distro_name: windows-2022-large
    push_path: windows
    push_bucket: downloads.10gen.com
    push_bucket_new: cdn-origin-mongodb-server-enterprise
    push_role_arn: arn:aws:iam::119629040606:role/s3-access.cdn-origin-mongodb-server-enterprise
    push_name: windows
    push_arch: x86_64-enterprise
    test_flags: --excludeWithAnyTags=incompatible_with_windows_tls
    external_auth_jobs_max: 1

buildvariants:
  - name: &windows-compile-required windows-compile-required
    display_name: "! Windows Server 2022 Enterprise Compile Essential"
    tags: ["required", "bazel_check", "forbid_tasks_tagged_with_experimental"]
    run_on:
      - windows-2022-xxlarge
    activate: true # These compile variants run on every commit to reduce latency of the auto-reverter.
    expansions: &windows_compile_expansions
      exe: ".exe"
      ext: zip
      additional_package_targets: >-
        archive-mongocryptd-stripped
        archive-mongocryptd-debug
        //src/mongo/installer/msi:mongodb-win32-x86_64-windows
      content_type: application/zip
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=windows
      python: "/cygdrive/c/python/python310/python.exe"
      compile_variant: *windows-compile-required
    tasks:
      - name: compile_test_serial_no_unittests_TG
        distros:
          - windows-2022-xxxlarge-compile
      - name: run_bazel_compiledb
      - name: run_unit_tests_no_sandbox_TG
        distros:
          - windows-2022-xxxlarge-compile
      - name: .development_critical .requires_compile_variant !.requires_large_host !.incompatible_development_variant !.incompatible_windows !.stitch .requires_execution_on_windows_patch_build
      - name: .development_critical .requires_compile_variant .requires_large_host !.incompatible_development_variant !.incompatible_windows !.stitch .requires_execution_on_windows_patch_build
        distros:
          - windows-2022-xxlarge
      - name: .release_critical .requires_compile_variant !.requires_large_host !.incompatible_development_variant !.incompatible_windows !.stitch .requires_execution_on_windows_patch_build
      - name: .release_critical .requires_compile_variant .requires_large_host !.incompatible_development_variant !.incompatible_windows !.stitch .requires_execution_on_windows_patch_build
        distros:
          - windows-2022-xxlarge
      - name: .default .requires_compile_variant !.requires_large_host !.incompatible_development_variant !.incompatible_windows .requires_execution_on_windows_patch_build
      - name: .default .requires_compile_variant .requires_large_host !.incompatible_development_variant !.incompatible_windows .requires_execution_on_windows_patch_build
        distros:
          - windows-2022-xxlarge

  - name: windows-compile-suggested
    display_name: "* Windows Server 2022 Enterprise Compile Non-essential"
    tags: ["suggested", "bazel_check", "forbid_tasks_tagged_with_experimental"]
    run_on:
      - windows-2022-xxlarge
    activate: true # These compile variants run on every commit to reduce latency of the auto-reverter.
    expansions: *windows_compile_expansions
    tasks:
      - name: .development_critical .requires_compile_variant !.requires_large_host !.incompatible_development_variant !.incompatible_windows !.stitch !.requires_execution_on_windows_patch_build
      - name: .development_critical .requires_compile_variant .requires_large_host !.incompatible_development_variant !.incompatible_windows !.stitch !.requires_execution_on_windows_patch_build
        distros:
          - windows-2022-xxlarge
      - name: .release_critical .requires_compile_variant !.requires_large_host !.incompatible_development_variant !.incompatible_windows !.stitch !.requires_execution_on_windows_patch_build
      - name: .release_critical .requires_compile_variant .requires_large_host !.incompatible_development_variant !.incompatible_windows !.stitch !.requires_execution_on_windows_patch_build
        distros:
          - windows-2022-xxlarge
      - name: .default .requires_compile_variant !.requires_large_host !.incompatible_development_variant !.incompatible_windows !.requires_execution_on_windows_patch_build
      - name: .default .requires_compile_variant .requires_large_host !.incompatible_development_variant !.incompatible_windows !.requires_execution_on_windows_patch_build
        distros:
          - windows-2022-xxlarge
      # server_selection_json_test & server_discovery_and_monitoring_json_test depend on this
      - name: compile_unittest_libaries_TG
      - name: run_bazel_TG

  - <<: *windows_compile_variant_dependency
    name: enterprise-windows-all-feature-flags-required
    display_name: "! Enterprise Windows Server 2022 (all feature flags) essential tasks"
    tags: ["required", "forbid_tasks_tagged_with_experimental"]
    cron: "0 1,5,9,13,17,21 * * *" # From the ${project_required_suggested_cron} parameter
    run_on:
      - windows-2022-small
    expansions: &windows_essential_expansions
      <<: *windows_expansions
      burn_in_tests_build_variant: enterprise-windows-all-feature-flags-required
      exe: ".exe"
      content_type: application/zip
      python: "/cygdrive/c/python/python310/python.exe"
      ext: zip
      multiversion_platform: windows
      multiversion_edition: enterprise
      jstestfuzz_num_generated_files: 35
      target_resmoke_time: 20
      max_sub_suites: 5
      large_distro_name: windows-2022-xlarge
      # To force disable feature flags even on the all feature flags variant, please use this file:
      # buildscripts/resmokeconfig/fully_disabled_feature_flags.yml
      test_flags: >-
        --runAllFeatureFlagTests
        --excludeWithAnyTags=incompatible_with_windows_tls
      external_auth_jobs_max: 1
    tasks:
      - name: .development_critical !.requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_windows !.incompatible_all_feature_flags .requires_execution_on_windows_patch_build
      - name: .development_critical .requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_windows !.incompatible_all_feature_flags .requires_execution_on_windows_patch_build
        distros:
          - windows-2022-xlarge
      - name: .release_critical !.requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_windows !.incompatible_all_feature_flags .requires_execution_on_windows_patch_build
      - name: .release_critical .requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_windows !.incompatible_all_feature_flags .requires_execution_on_windows_patch_build
        distros:
          - windows-2022-xlarge

  # This Windows build variant exists to run all tasks that have been excluded from running on the required Windows build variant.
  # See SERVER-79037 for how the essential set of tasks was computed.
  - <<: *windows_compile_variant_dependency
    name: enterprise-windows-all-feature-flags-non-essential
    display_name: "* Enterprise Windows Server 2022 (all feature flags) non-essential tasks"
    tags: ["suggested"]
    cron: "0 1,5,9,13,17,21 * * *" # From the ${project_required_suggested_cron} parameter
    run_on:
      - windows-2022-small
    expansions:
      <<: *windows_essential_expansions
      burn_in_tests_build_variant: enterprise-windows-all-feature-flags-non-essential
    tasks:
      - name: .development_critical !.requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_windows !.incompatible_all_feature_flags
      - name: .development_critical .requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_windows !.incompatible_all_feature_flags
        distros:
          - windows-2022-xlarge
      - name: .release_critical !.requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_windows !.incompatible_all_feature_flags
      - name: .release_critical .requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_windows !.incompatible_all_feature_flags
        distros:
          - windows-2022-xlarge
