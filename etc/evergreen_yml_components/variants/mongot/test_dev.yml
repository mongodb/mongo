buildvariants:
  # This variant is responsible for creating a AL2023 x86 server binary candidate for 10gen/mongot.
  # A project trigger defined on 10gen/mongot runs when this variant succeeds, to check if the resulting
  # binary candidate passes their tests and is therefore safe to use in their pre-commit integration tests.
  - name: amazon-linux-2023-x86-mongot-integration-cron-only
    display_name: "AL2023 x86 mongot integration tasks cron only"
    tags: []
    cron: "0 1,5,9,13,17,21 * * *" # Run these tasks every 4 hours
    patchable: false
    run_on:
      - amazon2023.3-small
    expansions: &amazon-linux-2023-x86-mongot-integration-expansions
      build_mongot: true
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2023
      test_flags: >-
        --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_external_data_source
        --runAllFeatureFlagTests
      has_packages: false
      multiversion_platform: amazon2023
      multiversion_edition: enterprise
      multiversion_architecture: x86_64
      packager_script: packager_enterprise.py
      packager_arch: x86_64
      packager_distro: amazon2023
      repo_edition: enterprise
      compile_variant: amazon-linux-2023-x86-mongot-integration-cron-only
      core_analyzer_distro_name: amazon2023.3-large
    tasks: &amazon-linux-2023-x86-mongot-distro-tasks
      - name: compile_and_archive_dist_test_TG
        distros:
          - amazon2023.3-large
      # downstream_expansions.set() is noop for evergreen versions, so fine to define in cron-only variants for sake of shared yaml anchor.
      - name: set_downstream_expansions_for_mongot
      - name: .mongot_e2e_tests !.requires_large_host
      - name: .mongot_e2e_tests .requires_large_host
        distros:
          - amazon2023.3-large
      # TODO SERVER-89721 remove search suites that use mongot mock.
      - name: search
        distros:
          - amazon2023.3-large
      - name: search_auth
        distros:
          - amazon2023.3-large
      - name: search_community
        distros:
          - amazon2023.3-large
      - name: search_community_ssl
        distros:
          - amazon2023.3-large
      - name: search_no_pinned_connections_auth
      - name: search_ssl
      - name: vector_search
      - name: vector_search_auth
      - name: vector_search_ssl

  # This mongot integration variant is identical to the AL2023 x86 above except it is patachable
  # and is not configured with any downstream project triggers on 10gen/mongot.
  - name: amazon-linux-2023-x86-mongot-integration-patchable
    display_name: "AL2023 x86 mongot integration tasks"
    tags: ["mongot_e2e"]
    patch_only: true
    run_on:
      - amazon2023.3-large
    expansions:
      <<: *amazon-linux-2023-x86-mongot-integration-expansions
      compile_variant: amazon-linux-2023-x86-mongot-integration-patchable
    tasks: *amazon-linux-2023-x86-mongot-distro-tasks

  # This variant is responsible for creating a AL2023 arm64 server binary candidate for 10gen/mongot.
  # A project trigger defined on 10gen/mongot runs when this variant succeeds, to check if the resulting
  # binary candidate passes their tests and is therefore safe to use in their pre-commit integration tests.
  - name: amazon2023-arm64-mongot-integration-cron-only
    display_name: "AL2023 arm64 mongot integration tasks cron only"
    tags: []
    cron: "0 1,5,9,13,17,21 * * *" # Run these tasks every 4 hours
    patchable: false
    run_on:
      - amazon2023.3-arm64-small
    expansions: &amazon2023-arm64-mongot-integration-expansions
      build_mongot: true
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2023
        --build_enterprise=False
      test_flags: >-
        --excludeWithAnyTags=incompatible_with_amazon_linux,requires_external_data_source
        --modules=none
        --runAllFeatureFlagTests
      has_packages: false
      multiversion_platform: amazon2023
      multiversion_edition: enterprise
      multiversion_architecture: aarch64
      packager_script: packager_enterprise.py
      packager_arch: aarch64
      packager_distro: amazon2023
      repo_edition: enterprise
      compile_variant: amazon2023-arm64-mongot-integration-cron-only
    tasks: &amazon2023-arm64-mongot-distro-tasks
      - name: compile_and_archive_dist_test_TG
        distros:
          - amazon2023.3-arm64-large
      # downstream_expansions.set() is noop for evergreen versions, so fine to define in cron-only variants for sake of shared yaml anchor.
      - name: set_downstream_expansions_for_mongot
      - name: .mongot_e2e_tests !.requires_large_host
      - name: .mongot_e2e_tests .requires_large_host
        distros:
          - amazon2023.3-arm64-large
      # TODO SERVER-89721 remove search suites that use mongot mock.
      - name: search
        distros:
          - amazon2023.3-arm64-large
      - name: search_community
        distros:
          - amazon2023.3-arm64-large
      - name: search_community_ssl
        distros:
          - amazon2023.3-arm64-large
      - name: search_auth
        distros:
          - amazon2023.3-arm64-large
      - name: search_no_pinned_connections_auth
      - name: search_ssl
      - name: vector_search
      - name: vector_search_auth
      - name: vector_search_ssl

  # This mongot integration variant is identical to the AL2023 arm64 above except it is patachable
  # and is not configured with any downstream project triggers on 10gen/mongot.
  - name: amazon2023-arm64-mongot-integration-patchable
    display_name: "AL2023 arm64 mongot integration tasks"
    tags: ["mongot_e2e"]
    patch_only: true
    run_on:
      - amazon2023.3-arm64-small
    expansions:
      <<: *amazon2023-arm64-mongot-integration-expansions
      compile_variant: amazon2023-arm64-mongot-integration-patchable
    tasks: *amazon2023-arm64-mongot-distro-tasks

  # This variant is responsible for creating a AL2 arm64 server binary candidate for 10gen/mongot.
  # A project trigger defined on 10gen/mongot runs when this variant succeeds, to check if the resulting
  # binary candidate passes their tests and is therefore safe to use in their pre-commit integration tests.
  - name: amazon-linux2-arm64-mongot-integration-cron-only
    display_name: "AL2 arm64 mongot integration tasks cron only"
    tags: []
    cron: "0 1,5,9,13,17,21 * * *" # Run these tasks every 4 hours
    patchable: false
    run_on:
      - amazon2-arm64-latest-small
    stepback: true
    expansions: &amazon-linux2-arm64-mongot-integration-expansions
      build_mongot: true
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2
      has_packages: false
      target_resmoke_time: 10
      max_sub_suites: 5
      idle_timeout_factor: 1.5
      exec_timeout_factor: 1.5
      compile_variant: amazon-linux2-arm64-mongot-integration-cron-only
    tasks: &amazon-linux2-arm64-mongot-distro-tasks
      - name: compile_and_archive_dist_test_TG
        distros:
          - amazon2-arm64-latest-large
      # downstream_expansions.set() is noop for evergreen versions, so fine to define in cron-only variants for sake of shared yaml anchor.
      - name: set_downstream_expansions_for_mongot
      - name: .mongot_e2e_tests !.requires_large_host
      - name: .mongot_e2e_tests .requires_large_host
        distros:
          - amazon2-arm64-latest-large
      # TODO SERVER-89721 remove search suites that use mongot mock.
      - name: search
        distros:
          - amazon2-arm64-latest-large
      - name: search_auth
        distros:
          - amazon2-arm64-latest-large
      - name: search_community
        distros:
          - amazon2-arm64-latest-large
      - name: search_community_ssl
        distros:
          - amazon2-arm64-latest-large
      - name: search_no_pinned_connections_auth
      - name: search_ssl
      - name: vector_search
      - name: vector_search_auth
      - name: vector_search_ssl

  # This mongot integration variant is identical to the AL2 arm64 above except it is patachable
  # and is not configured with any downstream project triggers on 10gen/mongot.
  - name: amazon-linux2-arm64-mongot-integration-patchable
    display_name: "AL2 arm64 mongot integration tasks"
    tags: ["mongot_e2e"]
    patch_only: true
    run_on:
      - amazon2-arm64-latest-small
    stepback: true
    expansions:
      <<: *amazon-linux2-arm64-mongot-integration-expansions
      compile_variant: amazon-linux2-arm64-mongot-integration-patchable
    tasks: *amazon-linux2-arm64-mongot-distro-tasks

  # This variant is responsible for creating a AL2 x86 server binary candidate for 10gen/mongot.
  # A project trigger defined on 10gen/mongot runs when this variant succeeds, to check if the resulting
  # binary candidate passes their tests and is therefore safe to use in their pre-commit integration tests
  - name: amazon2-x86-mongot-integration-cron-only
    display_name: "AL2 x86 mongot integration tasks cron only"
    tags: []
    cron: "0 1,5,9,13,17,21 * * *" # Run these tasks every 4 hours
    patchable: false
    run_on:
      - amazon2-latest-large
    expansions: &amazon2-x86-mongot-integration-expansions
      build_mongot: true
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=amazon2
      test_flags: >-
        --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_external_data_source
        --runAllFeatureFlagTests
      has_packages: false
      multiversion_platform: amazon2
      multiversion_edition: enterprise
      multiversion_architecture: x86_64
      packager_script: packager_enterprise.py
      packager_arch: x86_64
      packager_distro: amazon2
      repo_edition: enterprise
      compile_variant: amazon2-x86-mongot-integration-cron-only
    tasks: &amazon2-x86-mongot-distro-tasks
      - name: compile_and_archive_dist_test_TG
        distros:
          - amazon2-latest-large
      # downstream_expansions.set() is noop for evergreen versions, so fine to define in cron-only variants for sake of shared yaml anchor.
      - name: set_downstream_expansions_for_mongot
      - name: .mongot_e2e_tests
      # TODO SERVER-89721 remove search suites that use mongot mock.
      - name: search
      - name: search_community
      - name: search_community_ssl
      - name: search_auth
      - name: search_no_pinned_connections_auth
      - name: search_ssl
      - name: vector_search
      - name: vector_search_auth
      - name: vector_search_ssl

  # This mongot integration variant is identical to the AL2 x86 above except it is patachable
  # and is not configured with any downstream project triggers on 10gen/mongot
  - name: amazon2-x86-mongot-integration-patchable
    display_name: "AL2 x86 mongot integration tasks"
    tags: ["mongot_e2e"]
    cron: "0 1,5,9,13,17,21 * * *" # Run these tasks every 4 hours
    run_on:
      - amazon2-latest-large
    expansions:
      <<: *amazon2-x86-mongot-integration-expansions
      compile_variant: amazon2-x86-mongot-integration-patchable
    tasks: *amazon2-x86-mongot-distro-tasks

  # This RHEL variant runs search integration tests against latest/HEAD of 10gen/mongot. It is not
  # configured with any project trigger on mongot.
  - name: &enterprise-rhel-8-64-mongot-integration enterprise-rhel-8-64-mongot-integration
    display_name: "Enterprise RHEL 8 Mongot Integration"
    cron: "0 1,5,9,13,17,21 * * *" # Run these tasks every 4 hours
    run_on:
      - rhel8.8-medium
    tags: []
    expansions:
      compile_variant: *enterprise-rhel-8-64-mongot-integration
      has_packages: false
      build_mongot: true
      bazel_compile_flags: >-
        --define=MONGO_DISTMOD=rhel88
        --linkstatic=False
    tasks:
      - name: compile_and_archive_dist_test_TG
        distros:
          - rhel8.8-large
      - name: .mongot_e2e_tests
